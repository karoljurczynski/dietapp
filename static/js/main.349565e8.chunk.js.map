{"version":3,"sources":["components/left/styles/logo.png","components/left/left.js","components/center/DateChanger.js","components/product_adding_window/AddingForm.js","components/product_adding_window/EditForm.js","components/product_adding_window/AddingList.js","components/product_adding_window/ProductAddingWindow.js","components/product_removing_window/ProductRemovingWindow.js","components/meal/Meal.js","components/right/Gauge.js","components/MoreWindow/MoreWindow.js","components/exercise/Exercise.js","exercisesList.js","components/settings/Settings.js","components/about/About.js","components/login/Login.js","index.js"],"names":["Logo","className","src","logo","alt","Title","Hamburger","props","onClick","handleHamburger","Quotation","MenuItem","isActive","e","preventDefault","linkTo","target","title","href","value","DateChanger","initialDate","Date","useState","getDate","currentDay","setCurrentDay","getMonth","currentMonth","setCurrentMonth","getFullYear","currentYear","setCurrentYear","isLeapYear","changeNextDay","previousYear","previousMonth","previousDay","changePreviousDay","useEffect","changeDate","translateMonth","AddingForm","initialOptionsStates","optionsStates","setOptionsStates","isFormCompleted","setIsFormCompleted","isStateEqualToProps","setIsStateEqualToProps","handleClearButton","handleFormClearing","handleCancelButton","handleAddWindow","checkIfFormCompleted","Object","keys","forEach","option","data","key","type","name","document","querySelector","weight","proteins","fats","carbs","kcal","reps","saveNewProductToList","newProduct","newList","JSON","parse","localStorage","getItem","push","setItem","stringify","onSubmit","handleSerieAdding","htmlFor","id","lastTimeData","training","serie","onChange","handleOnChange","placeholder","warning","maxLength","disabled","handleProductAdding","keysArray","checkedOptions","searchForCheckedOptions","checkedKey","now","Number","prevOptions","style","backgroundColor","ACTIONS","EditForm","initialState","productData","useReducer","state","action","payload","console","error","warnings","dispatch","addingWindow","filter","pointerEvents","checkIfStateIsEqualToProps","ReactDOM","createPortal","handleProductEditing","test","length","nutritionPerOneGram","setValueAsNull","Math","round","idOfSelectedProduct","handleEditingWindow","getElementById","savedProductList","productSendForEdit","isEditWindowOpened","isAddButtonDisabled","AddingList","newSavedProductList","index","predefinedProductsList","includes","handleAddButtonDisabling","handleSelected","product","currentTarget","productName","fontWeight","background","updateProductSendForEdit","getIndexOfProduct","selectedProduct","isInteger","products","querySelectorAll","returnedBoolean","i","targetId","productList","returnedIndex","editedProduct","indexOfEditedProduct","color","map","selectedProducts","handlePredefinedProductsAdding","AddWindow","isAddingTypeSetAtLeftOption","setAddingType","wrapper","isPlaceholderEnabled","RemoveWindow","isRemovingAllButtonPressed","setRemovingAllButtonPressed","isRemoveButtonDisabled","setIsRemoveButtonDisabled","removingWindow","handleRemoveButtonDisabling","item","itemName","items","list","serieCount","handleRemoveWindow","selectedIds","handleRemoving","macros","NEGATE_MEAL_STATE","NEGATE_ADDING_WINDOW_STATE","NEGATE_REMOVING_WINDOW_STATE","ADD_PRODUCT","ENABLE_PLACEHOLDER","DISABLE_PLACEHOLDER","SET_WARNING","CLEAR_WARNING","REMOVE_PRODUCT","ADD_TO_SUMMARY","SUB_FROM_SUMMARY","CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING","ADD_PRODUCT_TO_PRODUCTLIST","Meal","isMealOpened","isAddingWindowOpened","isRemovingWindowOpened","countIngredients","mealId","dateIds","dayId","monthId","yearId","summary","CHANGE_NEW_PRODUCT_DATA","newProductList","checkedId","splice","removeItem","ingredient","setPlaceholderState","disableVisibilityIfEnabled","updateGauges","changePointerEvents","meals","center","meal","overflowY","handleAddingToSummary","object","handleSubstractingFromSummary","window","innerWidth","left","display","Product","addIngredientsFunction","subIngredientsFunction","log","setValueAsCorrect","setTimeout","checkedIdsList","ingredients","Gauge","isKcal","percent","rotationDegrees","transform","borderRightColor","borderTopColor","handleRotation","borderColor","amount","MoreWindow","iframe","opacity","handleBackButton","handleMoreWindow","description","marginBottom","difficulty","typeOfExercise","muscles","muscle","allowFullScreen","width","height","properFormLink","Exercise","isExerciseOpened","isAddWindowOpened","isRemoveWindowOpened","isMoreWindowOpened","seriesList","newSerie","exerciseId","trainingId","getPreviousTrainingDate","previousDateIds","potentialPreviousDateIds","updatedSeriesList","checkedIdList","currentlyAddingSerieNumber","indexOfLastSerie","updatedLastSerieData","updatedLastTrainingData","potentialSeries","previousTrainingSerie","undefined","countProgress","potentialTrainings","lastTrainingData","message","percentValue","progressValue","lastTrainingTotal","countTotalWeight","toFixed","top","bottom","totalWeight","countTotalReps","totalReps","exercises","isCategoryOpened","settingsData","account","nutrition","dailyDemand","namesOfMeals","0","1","2","3","4","5","6","7","8","9","numberOfMeals","selectedExercises","clearAllProducts","clearAllSeries","isSettingsChanged","Settings","newSettings","updatedSelectedExercises","indexOfExerciseToRemoving","indexOf","initialData","saveSettingsToLocalStorage","localStorageSettings","currentSettings","resetOptionsStates","handleSettingsSaved","handleSettingsCanceled","handleExerciseChoosing","children","handleSettingOnChange","attributes","handleCheckboxOnClick","category","justifyContent","values","data-key","required","exercise","About","isSignUpWindow","Login","isLogout","setUserStatus","disableLoginWindows","handleFormTypeChanging","handleTryAsGuest","handleLoginUser","countPercentOfEatenIngredient","eatenAmount","maxAmount","isNaN","App","pageTitle","isLoginWindowsEnabled","isAddWindowsEnabled","isRemoveWindowsEnabled","isMoreWindowsEnabled","hamburgerState","userStatus","mealsIngredientsSummary","dailyIngredientsSummary","gaugesData","eaten","max","main","newMealsIngredientsSummary","dailyIngredientsSum","mealsIngredientsSum","kcalS","typeOfIngredient","MENU_CATEGORIES","menu","updateMealSummary","updateDailySummary","handleMenu","categoryTitle","changePageTitle","newStatus","newDateIds","selectedExerciseId","render"],"mappings":"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","file":"static/js/main.349565e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.92f8fff8.png\";","// IMPORTS\r\n\r\nimport React from 'react';\r\nimport './styles/left.css';\r\nimport logo from './styles/logo.png';\r\n\r\n\r\n// COMPONENTS\r\n\r\nexport function Logo() {\r\n\r\n  return (\r\n    <img className=\"left-section__logo-container__logo\" src={logo} alt=\"Dietapp logo\" />\r\n  )\r\n}\r\n\r\nexport function Title() {\r\n  \r\n  return (\r\n    <h1 className=\"left-section__logo-container__title\">Diet\r\n      <span className=\"left-section__logo-container__title__right\">app</span>\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport function Hamburger(props) {\r\n  return (\r\n    <button className=\"left-section__hamburger\" onClick={ props.handleHamburger }>\r\n      <span className=\"left-section__hamburger__line\"></span>\r\n      <span className=\"left-section__hamburger__line\"></span>\r\n      <span className=\"left-section__hamburger__line\"></span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport function Quotation() {\r\n\r\n  return (\r\n    <>\r\n      <span className=\"left-section__quotation-container__top\">Be healthy,</span>\r\n      <span className=\"left-section__quotation-container__bottom\">be happy!</span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MenuItem(props) {\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    props.linkTo(e.target.title);\r\n  }\r\n\r\n  return (\r\n    <li className=\"left-section__menu-container__list-item\">\r\n        <a \r\n          className={ props.isActive \r\n                      ? \"left-section__menu-container__list-item__content left-section__menu-container__list-item__content--active\" \r\n                      : \"left-section__menu-container__list-item__content\" }\r\n          onClick={ handleClick }\r\n          href={ props.href }\r\n          title={ props.value }>{ props.value }</a>\r\n    </li>\r\n  )\r\n}","// IMPORTS\r\n\r\nimport { React, useState, useEffect } from 'react';\r\nimport './styles/center.css';\r\nimport { FaChevronCircleLeft, FaChevronCircleRight } from 'react-icons/fa';\r\n\r\n\r\n// COMPONENTS\r\n\r\nexport default function DateChanger(props) {\r\n  const initialDate = new Date();\r\n  const [currentDay, setCurrentDay] = useState(initialDate.getDate());\r\n  const [currentMonth, setCurrentMonth] = useState(initialDate.getMonth() + 1);\r\n  const [currentYear, setCurrentYear] = useState(initialDate.getFullYear());\r\n\r\n  const translateMonth = () => {\r\n    switch(currentMonth) {\r\n      case 1: return 'January';\r\n      case 2: return 'February';\r\n      case 3: return 'March';\r\n      case 4: return 'April';\r\n      case 5: return 'May';\r\n      case 6: return 'June';\r\n      case 7: return 'July';\r\n      case 8: return 'August';\r\n      case 9: return 'September';\r\n      case 10: return 'October';\r\n      case 11: return 'November';\r\n      case 12: return 'December';\r\n    }\r\n  }\r\n\r\n  const isLeapYear = () => {\r\n    if (((currentYear % 4 === 0) && (currentYear % 100 !== 0)) || currentYear % 400 === 0)\r\n       return true;\r\n    \r\n    else\r\n       return false;\r\n  }\r\n\r\n  const isDayLastInMonth = () => {\r\n    if ((currentDay === 29 && currentMonth === 2 && isLeapYear()) ||\r\n        (currentDay === 28 && currentMonth === 2 && !isLeapYear()) ||\r\n        (currentDay === 30 && ((currentMonth === 4) || \r\n                            (currentMonth === 6) || \r\n                            (currentMonth === 9) ||\r\n                            (currentMonth === 11))) ||\r\n        (currentDay === 31))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayLastInDecember = () => {\r\n    if ((currentDay === 31) && (currentMonth === 12))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const changeNextDay = () => {\r\n    if(isDayLastInMonth()) {\r\n\r\n      if(isDayLastInDecember()) {\r\n        setCurrentDay(1);\r\n        setCurrentMonth(1);\r\n        setCurrentYear(previousYear => previousYear + 1);\r\n      }\r\n\r\n      else {\r\n        setCurrentDay(1);\r\n        setCurrentMonth(previousMonth => previousMonth + 1);\r\n      }\r\n    }\r\n\r\n    else {\r\n      setCurrentDay(previousDay => previousDay + 1);\r\n    }\r\n  }\r\n\r\n  const handleNextButton = () => {\r\n    changeNextDay();\r\n  }\r\n\r\n\r\n\r\n  const isDayFirstInMonth = () => {\r\n    if(currentDay === 1)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayFirstInJanuary = () => {\r\n    if ((currentDay === 1) && (currentMonth === 1))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayFirstInMarch = () => {\r\n    if ((currentDay === 1) && (currentMonth === 3))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayFirstIn30DayMonths = () => {\r\n    if ((currentDay === 1) && ((currentMonth === 4) || (currentMonth === 6) || (currentMonth === 8) || (currentMonth === 9) || (currentMonth === 11)))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const changePreviousDay = () => {\r\n\r\n    if (isDayFirstInJanuary()) {\r\n      setCurrentDay(31);\r\n      setCurrentMonth(12);\r\n      setCurrentYear(previousYear => previousYear - 1);\r\n    }\r\n\r\n    else if (isDayFirstInMarch()) {\r\n      if(isLeapYear())\r\n        setCurrentDay(29);\r\n      else\r\n        setCurrentDay(28);\r\n      \r\n      setCurrentMonth(2);\r\n    }\r\n\r\n    else if (isDayFirstIn30DayMonths()) {\r\n      setCurrentDay(31);\r\n      setCurrentMonth(previousMonth => previousMonth - 1);\r\n    }\r\n\r\n    else if (isDayFirstInMonth()) {\r\n      setCurrentDay(30);\r\n      setCurrentMonth(previousMonth => previousMonth - 1);\r\n    }\r\n    \r\n    else {\r\n      setCurrentDay(previousDay => previousDay - 1);\r\n    }\r\n  }\r\n\r\n  const handlePreviousButton = () => {\r\n    changePreviousDay();\r\n  }\r\n\r\n\r\n  useEffect(() => { \r\n    props.changeDate({ currentDay, currentMonth, currentYear });\r\n\r\n  }, [currentDay, currentMonth, currentYear]);\r\n\r\n\r\n  return (\r\n    <div className=\"center-section__top__date-changer\">\r\n\r\n      <button \r\n        className=\"center-section__top__date-changer__previous-button\"\r\n        onClick={ handlePreviousButton }>\r\n        <FaChevronCircleLeft />\r\n      </button>\r\n\r\n      <h4 className=\"center-section__top__date-changer__current-date\">{ `${translateMonth()} ${currentDay}` }</h4>\r\n\r\n      <button \r\n        className=\"center-section__top__date-changer__next-button\"\r\n        onClick={ handleNextButton }>\r\n        <FaChevronCircleRight />\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport './styles/productAddingWindow.css';\r\nimport '../styles/window/window.css';\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\n\r\nexport default function AddingForm(props) {\r\n  const initialOptionsStates = {\r\n    'list-saving': false\r\n  };\r\n\r\n  const [optionsStates, setOptionsStates] = useState(initialOptionsStates);\r\n  const [isFormCompleted, setIsFormCompleted] = useState(false);\r\n  const [isStateEqualToProps, setIsStateEqualToProps] = useState(true);\r\n\r\n\r\n  const handleClearButton = () => {\r\n    setOptionsStates(initialOptionsStates);\r\n    props.handleFormClearing();\r\n    setIsStateEqualToProps(true);\r\n  }\r\n\r\n  const handleCancelButton = () => {\r\n    props.handleAddWindow();\r\n  }\r\n\r\n  const checkIfStateIsEqualToProps = () => {\r\n\r\n    // CHECKING OPTIONS\r\n    Object.keys(optionsStates).forEach(option => {\r\n      setIsStateEqualToProps(true);\r\n      if (optionsStates[option] !== initialOptionsStates[option])\r\n        setIsStateEqualToProps(false);\r\n    });\r\n\r\n    // CHECKING INPUTS\r\n    Object.keys(props.data).forEach(key => {\r\n      if (props.data[key])\r\n        setIsStateEqualToProps(false);\r\n    });\r\n  }\r\n\r\n\r\n  // CHECKING IF FORM IS COMPLETED\r\n  useEffect(() => { \r\n    checkIfFormCompleted();\r\n    checkIfStateIsEqualToProps();\r\n  }, [props, optionsStates])\r\n\r\n  const checkIfFormCompleted = () => {\r\n    if (props.type === 'nutrition') {\r\n      const name = document.querySelector(\"#name\").value;\r\n      const weight = document.querySelector(\"#weight\").value;\r\n      const proteins = document.querySelector(\"#proteins\").value;\r\n      const fats = document.querySelector(\"#fats\").value;\r\n      const carbs = document.querySelector(\"#carbs\").value;\r\n      const kcal = document.querySelector(\"#kcal\").value;\r\n\r\n      if(name && weight && proteins && fats && carbs && kcal)\r\n        setIsFormCompleted(true);\r\n      else\r\n        setIsFormCompleted(false);\r\n    }\r\n\r\n    else {\r\n      const weight = document.querySelector(\"#weight\").value;\r\n      const reps = document.querySelector(\"#reps\").value;\r\n\r\n      if(weight && reps)\r\n        setIsFormCompleted(true);\r\n      else\r\n        setIsFormCompleted(false);\r\n    }\r\n  }\r\n\r\n  const searchForCheckedOptions = (keysArray) => {\r\n    let checkedOptions = [];\r\n    keysArray.forEach(key => {\r\n      if (optionsStates[key])\r\n        checkedOptions.push(key);\r\n    });\r\n\r\n    return checkedOptions;\r\n  }\r\n\r\n  const handleAddProduct = (e) => {\r\n    props.handleProductAdding(e);\r\n    \r\n    const keys = Object.keys(optionsStates);\r\n\r\n    const checkedOptions = searchForCheckedOptions(keys);\r\n\r\n    checkedOptions.forEach(checkedKey => {\r\n\r\n      switch(checkedKey) {\r\n        case 'list-saving': {\r\n\r\n          const newProduct = {\r\n            id:       Date.now(), \r\n            name:     document.querySelector(\"#name\").value, \r\n            weight:   Number(document.querySelector(\"#weight\").value), \r\n            proteins: Number(document.querySelector(\"#proteins\").value), \r\n            fats:     Number(document.querySelector(\"#fats\").value),\r\n            carbs:    Number(document.querySelector(\"#carbs\").value),\r\n            kcal:     Number(document.querySelector(\"#kcal\").value),\r\n          }\r\n\r\n          saveNewProductToList(newProduct);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleAddSerie = (e) => {\r\n    props.handleSerieAdding(e);\r\n\r\n  }\r\n\r\n  const saveNewProductToList = (newProduct) => {\r\n    const newList =  JSON.parse(localStorage.getItem(\"predefined\"));\r\n    newList.push(newProduct);\r\n    localStorage.setItem(\"predefined\", JSON.stringify(newList));\r\n  }\r\n\r\n  const handleCheckboxOnClick = (e) => {\r\n    setOptionsStates(prevOptions => { return {...prevOptions, [e.target.id]: !optionsStates[e.target.id]} });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { props.type !== 'nutrition' \r\n      ? <form className=\"window__main window__main--add\" onSubmit={ handleAddSerie }>\r\n\r\n          <section className=\"window__main__section window__main__section--form\">\r\n\r\n            <h3 className=\"window__main__section__title\">Last time</h3>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"oldWeight\">Weight: </label>\r\n              <p \r\n                className=\"window__main__input-line__input\" \r\n                id=\"oldWeight\">\r\n                { props.type === 'last-training' ? props.lastTimeData.training.weight : props.lastTimeData.serie.weight }\r\n              </p>\r\n              <span className=\"window__main__input-line__unit\">kg</span>\r\n            </div>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"oldReps\">Reps: </label>\r\n              <p \r\n                className=\"window__main__input-line__input\" \r\n                id=\"oldReps\">\r\n                { props.type === 'last-training' ? props.lastTimeData.training.reps : props.lastTimeData.serie.reps }\r\n              </p>\r\n              <span className=\"window__main__input-line__unit\">reps</span>\r\n            </div>\r\n          \r\n          </section>\r\n\r\n          <section className=\"window__main__section window__main__section--form\">\r\n\r\n            <h3 className=\"window__main__section__title\">New serie</h3>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"weight\">Weight: </label>\r\n              <input\r\n                className=\"window__main__input-line__input\" \r\n                type=\"text\" \r\n                id=\"weight\"\r\n                value={ props.data.weight } \r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'weight' ? props.warning[0] : null }\r\n                maxLength=\"3\">\r\n              </input>\r\n              <span className=\"window__main__input-line__unit\">kg</span>\r\n            </div>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"reps\">Reps: </label>\r\n              <input \r\n                className=\"window__main__input-line__input\" \r\n                type=\"text\" \r\n                id=\"reps\"\r\n                value={ props.data.reps } \r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'reps' ? props.warning[0] : null }\r\n                maxLength=\"2\">\r\n              </input>\r\n              <span className=\"window__main__input-line__unit\">reps</span>\r\n            </div>\r\n            \r\n          </section>\r\n\r\n          <button \r\n                className={ isFormCompleted\r\n                            ? \"window__header__add-button\"\r\n                            : \"window__header__add-button window__header__add-button--disabled\" }\r\n                type=\"submit\"\r\n                disabled={ isFormCompleted ? false : true }><FaPlusCircle /></button>\r\n\r\n          <section className=\"window__bottom\">\r\n\r\n            <button \r\n              className={ isStateEqualToProps ? \"window__bottom__tertiary-button window__bottom__tertiary-button--disabled\" : \"window__bottom__tertiary-button\" } \r\n              disabled={ isStateEqualToProps ? true : false }\r\n              type=\"button\" \r\n              onClick={ handleClearButton }>\r\n              Clear</button>\r\n\r\n            <div>\r\n              <button className=\"window__bottom__secondary-button\" type=\"button\" onClick={ handleCancelButton }>Cancel</button>\r\n              <button \r\n                className={ isFormCompleted\r\n                            ? \"window__bottom__primary-button\"\r\n                            : \"window__bottom__primary-button window__bottom__primary-button--disabled\" }\r\n                type=\"submit\"\r\n                disabled={ isFormCompleted ? false : true }>Add</button>\r\n            </div>\r\n\r\n          </section>\r\n\r\n        </form>\r\n\r\n      : <form className=\"window__main window__main--add\" onSubmit={ handleAddProduct }>\r\n\r\n          <section className=\"window__main__section window__main__section--form\">\r\n\r\n            <h3 className=\"window__main__section__title\">Product info</h3>\r\n            \r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"name\">Product name: </label>\r\n              <input\r\n                className=\"window__main__input-line__input\"\r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={ props.data.name }\r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'name' ? props.warning[0] : null }\r\n                maxLength=\"32\">\r\n              </input>\r\n            </div>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"weight\">Product weight: </label>\r\n              <input \r\n                className=\"window__main__input-line__input\"\r\n                type=\"text\"\r\n                id=\"weight\"\r\n                value={ props.data.weight } \r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'weight' ? props.warning[0] : null }\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"window__main__input-line__unit\">g</span>\r\n            </div>\r\n\r\n\r\n          </section>\r\n\r\n          <section className=\"window__main__section window__main__section--form\">\r\n            \r\n            <h3 className=\"window__main__section__title\">Nutrition facts</h3>\r\n            \r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"proteins\">Proteins: </label>\r\n              <input \r\n                className=\"window__main__input-line__input\" \r\n                type=\"text\" \r\n                id=\"proteins\"\r\n                value={ props.data.proteins } \r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'proteins' ? props.warning[0] : null }\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"window__main__input-line__unit\">g</span>\r\n            </div>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"fats\">Fats: </label>\r\n              <input\r\n                className=\"window__main__input-line__input\"  \r\n                type=\"text\" \r\n                id=\"fats\"\r\n                value={ props.data.fats } \r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'fats' ? props.warning[0] : null }\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"window__main__input-line__unit\">g</span>\r\n            </div>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"carbs\">Carbs: </label>\r\n              <input\r\n                className=\"window__main__input-line__input\"  \r\n                type=\"text\" \r\n                id=\"carbs\"\r\n                value={ props.data.carbs } \r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'carbs' ? props.warning[0] : null }\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"window__main__input-line__unit\">g</span>\r\n            </div>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"kcal\">Calories: </label>\r\n              <input\r\n                className=\"window__main__input-line__input\"  \r\n                type=\"text\" \r\n                id=\"kcal\"\r\n                value={ props.data.kcal }\r\n                onChange={ props.handleOnChange }\r\n                placeholder={ props.warning[1] === 'kcal' ? props.warning[0] : null }\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"window__main__input-line__unit\">kcal</span>\r\n            </div>\r\n\r\n\r\n          </section>\r\n\r\n          <section className=\"window__main__section window__main__section--form\">\r\n\r\n            <h3 className=\"window__main__section__title\">Options</h3>\r\n\r\n            <div className=\"window__main__input-line\">\r\n              <label className=\"window__main__input-line__label\" htmlFor=\"list-saving\">Save to list</label>\r\n              <button \r\n                className=\"window__main__input-line__checkbox\"\r\n                id=\"list-saving\"\r\n                type=\"button\"\r\n                onClick={ handleCheckboxOnClick }>\r\n                <div \r\n                  className=\"window__main__input-line__checkbox__background\" \r\n                  id=\"list-saving\"\r\n                  style={ optionsStates['list-saving'] ? {backgroundColor: \"#7500AF\"} : {backgroundColor: \"transparent\"} }>\r\n                </div>\r\n              </button>\r\n            </div>\r\n\r\n          </section>\r\n\r\n          <button \r\n                className={ isFormCompleted\r\n                            ? \"window__header__add-button\"\r\n                            : \"window__header__add-button window__header__add-button--disabled\" }\r\n                type=\"submit\"\r\n                disabled={ isFormCompleted ? false : true }><FaPlusCircle /></button>\r\n\r\n          <section className=\"window__bottom\">\r\n\r\n            <button \r\n              className={ isStateEqualToProps ? \"window__bottom__tertiary-button window__bottom__tertiary-button--disabled\" : \"window__bottom__tertiary-button\" } \r\n              disabled={ isStateEqualToProps ? true : false }\r\n              type=\"button\" \r\n              onClick={ handleClearButton }>\r\n              Clear</button>\r\n\r\n            <div>\r\n              <button className=\"window__bottom__secondary-button\" type=\"button\" onClick={ handleCancelButton }>Cancel</button>\r\n              <button \r\n                className={ isFormCompleted\r\n                            ? \"window__bottom__primary-button\"\r\n                            : \"window__bottom__primary-button window__bottom__primary-button--disabled\" }\r\n                type=\"submit\"\r\n                disabled={ isFormCompleted ? false : true }>Add</button>\r\n            </div>\r\n\r\n          </section>\r\n\r\n        </form>\r\n    }\r\n    </>\r\n  )\r\n}","import { React, useReducer, useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../styles/window/window.css';\r\nimport { warnings } from '../meal/Meal';\r\n\r\nconst ACTIONS = {\r\n  UPDATE_PRODUCT_DATA: 'update-product-data',\r\n  RESET_FORM: 'reset-form',\r\n  SET_WARNING: 'set-warning',\r\n  CLEAR_WARNING: 'clear-warning'\r\n}\r\n\r\nexport default function EditForm(props) {\r\n  const [isFormCompleted, setIsFormCompleted] = useState(false);\r\n  const [isStateEqualToProps, setIsStateEqualToProps] = useState(true);\r\n\r\n  const initialState = {\r\n    productData: {\r\n      id: props.data.id,\r\n      name: props.data.name,\r\n      weight: props.data.weight,\r\n      proteins: props.data.proteins,\r\n      fats: props.data.fats,\r\n      carbs: props.data.carbs,\r\n      kcal: props.data.kcal\r\n    },\r\n    warning: ['' ,'']\r\n  } \r\n    \r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n      case ACTIONS.UPDATE_PRODUCT_DATA: {\r\n        switch (action.payload.key) {\r\n          case 'name':     { return { ...state, productData: {...state.productData, name:     action.payload.value } }};\r\n          case 'weight':   { return { ...state, productData: {...state.productData, weight:   action.payload.value } }};\r\n          case 'proteins': { return { ...state, productData: {...state.productData, proteins: action.payload.value } }};\r\n          case 'fats':     { return { ...state, productData: {...state.productData, fats:     action.payload.value } }};\r\n          case 'carbs':    { return { ...state, productData: {...state.productData, carbs:    action.payload.value } }};\r\n          case 'kcal':     { return { ...state, productData: {...state.productData, kcal:     action.payload.value } }};\r\n          default:         { return console.error(`Unknown action type: ${action.type}`) };\r\n        }\r\n      }\r\n\r\n      case ACTIONS.RESET_FORM: {\r\n        return {...state, productData: \r\n          { id: props.data.id,\r\n            name: props.data.name,\r\n            weight: props.data.weight,\r\n            proteins: props.data.proteins,\r\n            fats: props.data.fats,\r\n            carbs: props.data.carbs,\r\n            kcal: props.data.kcal \r\n        }};\r\n      }\r\n\r\n      case ACTIONS.SET_WARNING: {\r\n        if (action.payload === 'name')\r\n          return { ...state, warning: [warnings.name, action.payload] }\r\n        else \r\n          return { ...state, warning: [warnings.weight, action.payload] }\r\n      }\r\n\r\n      case ACTIONS.CLEAR_WARNING: {\r\n        return { ...state, warning: ['', action.payload] }\r\n      }\r\n\r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const addingWindow = document.querySelector(\".window--add\");\r\n      addingWindow.style.filter = \"blur(5px) opacity(40%) grayscale(100%)\";\r\n      addingWindow.style.pointerEvents = \"none\";\r\n\r\n    return () => {\r\n      addingWindow.style.filter = \"blur(0px) opacity(100%) grayscale(0%)\";\r\n      addingWindow.style.pointerEvents = \"auto\";\r\n    }\r\n  }, []);\r\n\r\n    // CHECKING IF FORM IS COMPLETED\r\n  useEffect(() => { \r\n    checkIfFormCompleted();\r\n    checkIfStateIsEqualToProps();\r\n    \r\n  }, [state.productData])\r\n\r\n  const checkIfFormCompleted = () => {\r\n    const name = document.querySelector(\"#name\").value;\r\n    const weight = document.querySelector(\"#weight\").value;\r\n\r\n    if(name && weight)\r\n      setIsFormCompleted(true);\r\n    else\r\n      setIsFormCompleted(false);\r\n  }\r\n\r\n  const handleResetingForm = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: ACTIONS.RESET_FORM });\r\n    dispatch({ type: ACTIONS.CLEAR_WARNING });\r\n    setIsStateEqualToProps(true);\r\n  }\r\n\r\n  const checkIfStateIsEqualToProps = () => {\r\n    Object.keys(props.data).forEach(key => {\r\n      if (props.data[key] !== state.productData[key])\r\n        setIsStateEqualToProps(false); \r\n      });\r\n  }\r\n\r\n  const handleCancelButton = () => {\r\n    const idOfSelectedProduct = props.data.id;\r\n\r\n    // IF USER CANCEL EDITING, PRODUCT HAS TO BE UNSELECTED\r\n    props.handleEditingWindow(idOfSelectedProduct);\r\n  }\r\n\r\n  const calculateNutritionFacts = (e) => {\r\n    const isNumber = /[0-9]/;\r\n    const isZero = /^[0]{1}/;\r\n\r\n    const nutritionPerOneGram = {\r\n      proteins: Number(props.data.proteins) / Number(props.data.weight),\r\n      fats: Number(props.data.fats) / Number(props.data.weight),\r\n      carbs: Number(props.data.carbs) / Number(props.data.weight),\r\n      kcal: Number(props.data.kcal) / Number(props.data.weight)\r\n    };\r\n\r\n    const setValueAsNull = () => {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'weight', value: '' }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'proteins', value: 0 }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'fats', value: 0 }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'carbs', value: 0 }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'kcal', value: 0 }});\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: 'weight' });\r\n    }\r\n\r\n    const setValueAsCorrect = () => {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'weight', value: Number(e.target.value) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'proteins', value: Math.round( e.target.value * nutritionPerOneGram.proteins) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'fats', value: Math.round( e.target.value * nutritionPerOneGram.fats) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'carbs', value: Math.round( e.target.value * nutritionPerOneGram.carbs) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'kcal', value: Math.round( e.target.value * nutritionPerOneGram.kcal) } });\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: 'weight' });\r\n    }\r\n\r\n    if (isNumber.test(e.target.value[e.target.value.length - 1])) {\r\n      isZero.test(e.target.value)\r\n      ? setValueAsNull()\r\n      : setValueAsCorrect();\r\n    }\r\n\r\n    else {\r\n      setValueAsNull();\r\n    }\r\n  }\r\n\r\n  const handleNameChanging = (e) => {\r\n    const isWord = /[a-z\\s]/i;\r\n    e.preventDefault();\r\n    if (isWord.test(e.target.value[e.target.value.length - 1])) {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'name', value: e.target.value }})\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: 'name'});\r\n    }\r\n    else {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'name', value: \"\" }});\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: 'name'});\r\n    }\r\n  }\r\n\r\n  const handleSavingChanges = (e) => {\r\n    e.preventDefault();\r\n    props.handleProductEditing(state.productData);\r\n  }\r\n\r\n  return ReactDOM.createPortal (\r\n    <form className=\"window window--edit\" onSubmit={ handleSavingChanges }>\r\n\r\n      <header className=\"window__header\">\r\n        <h3 className=\"window__header__heading\">Edit product</h3>\r\n      </header>\r\n\r\n      <main className=\"window__form\">\r\n\r\n        <section className=\"window__main__section window__main__section--form\">\r\n          \r\n          <h3 className=\"window__main__section__title\">Product info</h3>\r\n\r\n          <div className=\"window__main__input-line\">\r\n            <label className=\"window__main__input-line__label\" htmlFor=\"name\">Product name: </label>\r\n            <input\r\n                className=\"window__main__input-line__input\" \r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={ state.productData.name } \r\n                onChange={ handleNameChanging }\r\n                placeholder={ state.warning[1] === 'name' ? state.warning[0] : null }\r\n                maxLength=\"32\">\r\n            </input>\r\n          </div>\r\n\r\n          <div className=\"window__main__input-line\">\r\n            <label className=\"window__main__input-line__label\" htmlFor=\"weight\">Product weight: </label>\r\n            <input\r\n                className=\"window__main__input-line__input\" \r\n                type=\"text\"\r\n                id=\"weight\"\r\n                value={ state.productData.weight } \r\n                onChange={ calculateNutritionFacts }\r\n                placeholder={ state.warning[1] === 'weight' ? state.warning[0] : null }\r\n                maxLength=\"32\">\r\n            </input>\r\n            <span className=\"window__main__input-line__unit\">g</span>\r\n          </div>\r\n        \r\n        </section>\r\n        \r\n        <section className=\"window__main__section window__main__section--form\">\r\n          \r\n          <h3 className=\"window__main__section__title\">Nutrition facts</h3>\r\n\r\n          <div className=\"window__main__input-line\">\r\n            <label className=\"window__main__input-line__label\" htmlFor=\"proteins\">Proteins: </label>\r\n            <p\r\n              className=\"window__main__input-line__input\" \r\n              id=\"proteins\">\r\n              { state.productData.proteins }\r\n            </p>\r\n            <span className=\"window__main__input-line__unit\">g</span>\r\n          </div>\r\n\r\n          <div className=\"window__main__input-line\">\r\n            <label className=\"window__main__input-line__label\" htmlFor=\"fats\">Fats: </label>\r\n            <p\r\n              className=\"window__main__input-line__input\" \r\n              id=\"fats\">\r\n              { state.productData.fats }\r\n            </p>\r\n            <span className=\"window__main__input-line__unit\">g</span>\r\n          </div>\r\n\r\n          <div className=\"window__main__input-line\">\r\n            <label className=\"window__main__input-line__label\" htmlFor=\"carbs\">Carbs: </label>\r\n            <p\r\n              className=\"window__main__input-line__input\" \r\n              id=\"carbs\">\r\n              { state.productData.carbs }\r\n            </p>\r\n            <span className=\"window__main__input-line__unit\">g</span>\r\n          </div>\r\n\r\n          <div className=\"window__main__input-line\">\r\n            <label className=\"window__main__input-line__label\" htmlFor=\"kcal\">Calories: </label>\r\n            <p\r\n              className=\"window__main__input-line__input\" \r\n              id=\"kcal\">\r\n              { state.productData.kcal }\r\n            </p>\r\n            <span className=\"window__main__input-line__unit\">kcal</span>\r\n          </div>\r\n        \r\n        </section>\r\n        \r\n      </main>\r\n\r\n      <section className=\"window__bottom\">\r\n        <button \r\n          className={ isStateEqualToProps ? \"window__bottom__tertiary-button window__bottom__tertiary-button--disabled\" : \"window__bottom__tertiary-button\" } \r\n          disabled={ isStateEqualToProps ? true : false } \r\n          type=\"button\" \r\n          onClick={ handleResetingForm }>\r\n          Reset</button>\r\n        \r\n        <div>\r\n          <button className=\"window__bottom__secondary-button\" type=\"button\" onClick={ handleCancelButton }>Cancel</button>\r\n          <button \r\n            className={ isFormCompleted\r\n                        ? \"window__bottom__primary-button\"\r\n                        : \"window__bottom__primary-button window__bottom__primary-button--disabled\"\r\n                        } \r\n            type=\"submit\"\r\n            disabled={ isFormCompleted ? false : true }>\r\n            Save</button>\r\n        </div>\r\n\r\n      </section>\r\n\r\n    </form>,\r\n    document.getElementById(\"portal\")\r\n  )\r\n}","import { React, useReducer, useEffect } from 'react';\r\nimport EditForm from './EditForm';\r\n\r\nconst ACTIONS = {\r\n  SET_PRODUCT_SEND_FOR_EDIT: \"set-product-send-for-edit\",\r\n  NEGATE_EDIT_WINDOW_STATE: \"negate-edit-window-state\",\r\n  UPDATE_SAVED_PRODUCTS_LIST: \"update-saved-products-list\",\r\n  LOAD_PREDEFINED_PRODUCTS_LIST_FROM_LOCAL_STORAGE: 'load-predefined-products-list-from-local-storage',\r\n  SET_IS_ADD_BUTTON_DISABLED: 'set-is-add-button-disabled'\r\n}\r\n\r\nconst initialState = {\r\n  savedProductList: [\r\n    { id: 0, name: \"Cottage cheese\", weight: 100, proteins: 20, fats: 10, carbs: 15, kcal: 250 },\r\n    { id: 1, name: \"Skyr\", weight: 100, proteins: 20, fats: 0, carbs: 12, kcal: 100 },\r\n    { id: 2, name: \"Potatos\", weight: 100, proteins: 9, fats: 2, carbs: 80, kcal: 126 },\r\n    { id: 3, name: \"Coca Cola\", weight: 100, proteins: 0, fats: 0, carbs: 100, kcal: 400 },\r\n    { id: 4, name: \"Banana\", weight: 100, proteins: 5, fats: 3, carbs: 52, kcal: 173 },\r\n    { id: 5, name: \"Cottage cheese\", weight: 100, proteins: 20, fats: 10, carbs: 15, kcal: 250 },\r\n    { id: 6, name: \"Skyr\", weight: 100, proteins: 20, fats: 0, carbs: 12, kcal: 100 },\r\n    { id: 7, name: \"Potatos\", weight: 100, proteins: 9, fats: 2, carbs: 80, kcal: 126 },\r\n    { id: 8, name: \"Coca Cola\", weight: 100, proteins: 0, fats: 0, carbs: 100, kcal: 400 },\r\n    { id: 9, name: \"Banana\", weight: 100, proteins: 5, fats: 3, carbs: 52, kcal: 173 }],\r\n  \r\n  productSendForEdit: { id: 0, name: '', weight: 0, proteins: 0, fats: 0, carbs: 0, kcal: 0 },\r\n  isEditWindowOpened: false,\r\n  isAddButtonDisabled: false\r\n}\r\n\r\nexport default function AddingList(props) {\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n      case ACTIONS.LOAD_PREDEFINED_PRODUCTS_LIST_FROM_LOCAL_STORAGE: {\r\n        return {...state, savedProductList: action.payload}\r\n      }\r\n\r\n      case ACTIONS.NEGATE_EDIT_WINDOW_STATE: {\r\n        return { ...state, isEditWindowOpened: !state.isEditWindowOpened };\r\n      }\r\n\r\n      case ACTIONS.SET_PRODUCT_SEND_FOR_EDIT: {\r\n        return {...state, productSendForEdit: {\r\n                          id: action.payload.id,\r\n                          name: action.payload.name,\r\n                          weight: action.payload.weight,\r\n                          proteins: action.payload.proteins,\r\n                          fats: action.payload.fats,\r\n                          carbs: action.payload.carbs,\r\n                          kcal: action.payload.kcal }\r\n        };\r\n      }\r\n\r\n      case ACTIONS.UPDATE_SAVED_PRODUCTS_LIST: {\r\n        const newSavedProductList = state.savedProductList;\r\n        newSavedProductList[action.payload.index] = action.payload.newProduct;\r\n        return {...state, savedProductList: newSavedProductList};\r\n      }\r\n\r\n      case ACTIONS.SET_IS_ADD_BUTTON_DISABLED: {\r\n        return {...state, isAddButtonDisabled: action.payload};\r\n      }\r\n\r\n\r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // EFFECT WHICH LOAD / CREATE PREDEFINED PRODUCTS LIST FROM / TO LOCAL STORAGE\r\n  useEffect(() => { \r\n    let predefinedProductsList = [];\r\n\r\n    if (Object.keys(localStorage).includes('predefined')) {\r\n      predefinedProductsList = JSON.parse(localStorage.getItem(\"predefined\"));\r\n      dispatch({ type: ACTIONS.LOAD_PREDEFINED_PRODUCTS_LIST_FROM_LOCAL_STORAGE, payload: predefinedProductsList });\r\n    }\r\n    else {\r\n      predefinedProductsList = state.savedProductList;\r\n      localStorage.setItem(\"predefined\", JSON.stringify(predefinedProductsList)); \r\n    }\r\n\r\n   }, []);\r\n\r\n  useEffect(() => { handleAddButtonDisabling() }, [])\r\n   \r\n  const handleSelected = (e) => {\r\n    const product = document.getElementById(e.currentTarget.id);\r\n    if (e.currentTarget.id) {\r\n      const productName = product.querySelector(\".window__main__section__large-list__item__name\");\r\n\r\n      // \"UNSELECTING\"\r\n      if (productName.style.fontWeight === \"bold\") {\r\n        product.style.background = \"#ffffff\";\r\n        productName.style.fontWeight = \"normal\";\r\n        handleAddButtonDisabling();\r\n      }\r\n\r\n      // \"SELECTING\"\r\n      else {\r\n        product.style.background = \"#7500AF30\";\r\n        productName.style.fontWeight = \"bold\";\r\n        updateProductSendForEdit(state.savedProductList[getIndexOfProduct(e.currentTarget.id)]);\r\n        handleEditingWindow();\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateProductSendForEdit = (selectedProduct) => {\r\n    dispatch({ type: ACTIONS.SET_PRODUCT_SEND_FOR_EDIT, payload: selectedProduct });\r\n  }\r\n\r\n  const handleProductEditing = (editedProduct) => {\r\n    const indexOfEditedProduct = getIndexOfProduct(editedProduct.id);\r\n    dispatch({ type: ACTIONS.UPDATE_SAVED_PRODUCTS_LIST, payload: { index: indexOfEditedProduct, newProduct: editedProduct }})\r\n    \r\n    // SAVING CHANGES TO LOCAL STORAGE\r\n    const predefinedProductsList = state.savedProductList;\r\n    localStorage.setItem(\"predefined\", JSON.stringify(predefinedProductsList));\r\n    \r\n    handleEditingWindow();\r\n  }\r\n\r\n  const handleEditingWindow = (idOfSelectedProduct = false) => {\r\n    \r\n    // UNSELECTING PRODUCT AFTER EDIT CANCELED\r\n    if (Number.isInteger(idOfSelectedProduct)) {\r\n      const product = document.getElementById(idOfSelectedProduct);\r\n      const productName = product.querySelector(\".window__main__section__large-list__item__name\");\r\n      product.style.background = \"#ffffff\";\r\n      productName.style.fontWeight = \"normal\";\r\n    }\r\n    \r\n    dispatch({ type: ACTIONS.NEGATE_EDIT_WINDOW_STATE });\r\n    handleAddButtonDisabling();\r\n  }\r\n\r\n  const handleAddButtonDisabling = () => {\r\n    const products = document.querySelectorAll(\".window__main__section__large-list__item\");\r\n    let returnedBoolean = false;\r\n   \r\n    for (let i = 0; i < products.length; i++) {\r\n      const name = products[i].querySelector(\".window__main__section__large-list__item__name\");\r\n      if (name.style.fontWeight === \"bold\") {\r\n        returnedBoolean = false;\r\n        break;\r\n      }\r\n\r\n      else\r\n        returnedBoolean = true;\r\n    }\r\n\r\n    dispatch({type: ACTIONS.SET_IS_ADD_BUTTON_DISABLED, payload: returnedBoolean});\r\n  }\r\n\r\n  const handleProductsAdding = () => {\r\n    const selectedProducts = [];\r\n    const products = document.querySelectorAll(\".window__main__section__large-list__item\");\r\n\r\n    products.forEach((product, index) => {\r\n      const name = product.querySelector(\".window__main__section__large-list__item__name\");\r\n      if (name.style.fontWeight === \"bold\")\r\n        selectedProducts.push(\r\n          { \r\n            name:     state.savedProductList[index - 1].name,\r\n            weight:   state.savedProductList[index - 1].weight, \r\n            proteins: state.savedProductList[index - 1].proteins, \r\n            fats:     state.savedProductList[index - 1].fats, \r\n            carbs:    state.savedProductList[index - 1].carbs, \r\n            kcal:     state.savedProductList[index - 1].kcal \r\n          }\r\n        );\r\n    });\r\n\r\n    if (selectedProducts.length !== 0)\r\n      props.handlePredefinedProductsAdding(selectedProducts);\r\n  }\r\n\r\n  const getIndexOfProduct = (targetId) => {\r\n    const productList = state.savedProductList;\r\n    let returnedIndex = 0;\r\n\r\n    productList.forEach((product, index) => {\r\n      if (product.id === Number(targetId))\r\n        returnedIndex = index;\r\n    });\r\n    return returnedIndex;\r\n  }\r\n\r\n  return (\r\n    <>\r\n       { state.isEditWindowOpened \r\n        ? <EditForm \r\n          data={{\r\n            id: state.productSendForEdit.id,\r\n            name: state.productSendForEdit.name,\r\n            weight: state.productSendForEdit.weight,\r\n            proteins: state.productSendForEdit.proteins,\r\n            fats: state.productSendForEdit.fats,\r\n            carbs: state.productSendForEdit.carbs,\r\n            kcal: state.productSendForEdit.kcal\r\n          }}\r\n          warning={ props.warning }\r\n          handleProductEditing={ handleProductEditing }\r\n          handleEditingWindow={ handleEditingWindow }\r\n          />\r\n\r\n        :  null }\r\n        \r\n      <ul className=\"window__main__section__large-list window__main__section__large-list--heading\">\r\n        <li className=\"window__main__section__large-list__item window__main__section__large-list__item--heading\">\r\n          <div className=\"window__main__section__large-list__wrapper\">\r\n            <span className=\"window__main__section__large-list__item__name\" style={{ color: \"white\" }}>Product name</span>\r\n            <span className=\"window__main__section__large-list__item__nutrition-facts\">\r\n              <p className=\"window__main__section__large-list__item__nutrition-facts__proteins\" title=\"Proteins\">P</p>\r\n              <p className=\"window__main__section__large-list__item__nutrition-facts__fats\" title=\"Fats\">F</p>\r\n              <p className=\"window__main__section__large-list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">C</p>\r\n            </span>\r\n            <span className=\"window__main__section__large-list__item__calories\">Calories</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"window__main__section__large-list\">\r\n\r\n        { state.savedProductList.map(product => {\r\n          return (\r\n            <li id={ product.id } key={ product.id } className=\"window__main__section__large-list__item\" onClick={ handleSelected }>\r\n              <div className=\"window__main__section__large-list__wrapper\">\r\n                <span id={ product.id } className=\"window__main__section__large-list__item__name\">{ product.name }</span>\r\n                <span id={ product.id } className=\"window__main__section__large-list__item__nutrition-facts\">\r\n                  <p id={ product.id } className=\"window__main__section__large-list__item__nutrition-facts__proteins\" title=\"Proteins\">{ product.proteins } g</p>\r\n                  <p id={ product.id } className=\"window__main__section__large-list__item__nutrition-facts__fats\" title=\"Fats\">{ product.fats } g</p>\r\n                  <p id={ product.id } className=\"window__main__section__large-list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">{ product.carbs } g</p>\r\n                </span>\r\n                <span id={ product.id } className=\"window__main__section__large-list__item__calories\">{ product.kcal } kcal</span>\r\n              \r\n              </div>\r\n              <span id={ product.id } className=\"window__main__section__large-list__item__weight\">{ product.weight } g</span>\r\n            </li>\r\n          )\r\n        })\r\n        }\r\n\r\n      </ul>\r\n      \r\n      <section className=\"window__bottom\">\r\n        <div></div>\r\n        <div>\r\n          <button \r\n            className=\"window__bottom__secondary-button\" \r\n            onClick={ props.handleAddWindow }>\r\n            Cancel\r\n          </button>\r\n          \r\n          <button \r\n            className={ state.isAddButtonDisabled\r\n                        ? \"window__bottom__primary-button window__bottom__primary-button--disabled\" \r\n                        : \"window__bottom__primary-button\" } \r\n            onClick={ handleProductsAdding }>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </> \r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddingForm from './AddingForm';\r\nimport AddingList from './AddingList';\r\nimport { FaChevronCircleLeft, FaPlusCircle } from 'react-icons/fa';\r\nimport '../styles/window/window.css';\r\n\r\nexport default function AddWindow(props) {\r\n  const [isAddingTypeSetAtLeftOption, setAddingType] = useState(true);\r\n  \r\n  // BACKGROUND EFFECTS\r\n  useEffect(() => {\r\n    const wrapper = document.querySelector(\"#root\");\r\n\r\n    wrapper.style.filter = \"blur(5px) opacity(40%) grayscale(100%)\";\r\n    wrapper.style.pointerEvents = \"none\";\r\n  \r\n    return (() => {\r\n      wrapper.style.filter = \"blur(0px) opacity(100%) grayscale(0%)\";\r\n      wrapper.style.pointerEvents = \"auto\";\r\n    })\r\n\r\n  }, []);\r\n\r\n  // CLEARING FORM AFTER EACH CHANGE OF SWITCH OPTION\r\n  useEffect(() => {\r\n    props.handleFormClearing();\r\n  },[isAddingTypeSetAtLeftOption]);\r\n\r\n  const changeAddingType = () => {\r\n    setAddingType(!isAddingTypeSetAtLeftOption);\r\n  }\r\n\r\n  return ReactDOM.createPortal ( \r\n    <div className=\"window window--add\">\r\n      \r\n      <header className=\"window__header\">\r\n        \r\n        <h2 className=\"window__header__heading\" >{ props.type === 'exercises' ? \"Add serie\" : \"Add product\" }</h2>\r\n    \r\n        <button className=\"window__header__back-button\" onClick={ props.handleAddWindow }><FaChevronCircleLeft /></button>\r\n\r\n        <button className=\"window__header__switch\" onClick={ changeAddingType }>\r\n          <h3 \r\n            className={ isAddingTypeSetAtLeftOption \r\n                        ? \"window__header__switch__left window__header__switch__left--selected\"\r\n                        : \"window__header__switch__left\" }>\r\n            { props.type === 'exercises' ? \"Last training\" : \"From list\" }\r\n          </h3>\r\n          <h3 \r\n            className={ isAddingTypeSetAtLeftOption \r\n                        ? \"window__header__switch__right\"\r\n                        : \"window__header__switch__right window__header__switch__right--selected\" }>\r\n            { props.type === 'exercises' ? \"Last serie\" : \"Your own\" }\r\n          </h3>\r\n        </button>\r\n\r\n      </header>\r\n\r\n      { props.type === 'exercises'\r\n\r\n        ? <main className=\"window__form\">\r\n          { isAddingTypeSetAtLeftOption\r\n\r\n            ? <AddingForm \r\n                type=\"last-training\"\r\n                data={{ \r\n                  weight: props.data.weight,\r\n                  reps: props.data.reps\r\n                }}\r\n                warning={ props.warning }\r\n                handleOnChange={ props.handleOnChange }\r\n                handleSerieAdding={ props.handleSerieAdding }\r\n                handleFormClearing={ props.handleFormClearing }\r\n                handleAddWindow={ props.handleAddWindow }\r\n                lastTimeData={ props.lastTimeData }\r\n              />\r\n\r\n            : <AddingForm \r\n                type=\"last-serie\"\r\n                data={{ \r\n                  weight: props.data.weight,\r\n                  reps: props.data.reps\r\n                }}\r\n                warning={ props.warning }\r\n                handleOnChange={ props.handleOnChange }\r\n                handleSerieAdding={ props.handleSerieAdding }\r\n                handleFormClearing={ props.handleFormClearing }\r\n                handleAddWindow={ props.handleAddWindow }\r\n                lastTimeData={ props.lastTimeData }\r\n              />\r\n          }\r\n        </main>\r\n\r\n        : <main className=\"window__form\">\r\n          { isAddingTypeSetAtLeftOption\r\n\r\n            ? <AddingList \r\n                warning={ props.warning }\r\n                handleAddWindow={ props.handleAddWindow }\r\n                handlePredefinedProductsAdding={ props.handlePredefinedProductsAdding }\r\n              />\r\n              \r\n            : <AddingForm\r\n                type=\"nutrition\"\r\n                data={{ \r\n                  isPlaceholderEnabled: props.data.isPlaceholderEnabled,\r\n                  name: props.data.name, \r\n                  weight: props.data.weight,\r\n                  proteins: props.data.proteins,\r\n                  fats: props.data.fats,\r\n                  carbs: props.data.carbs,\r\n                  kcal: props.data.kcal }}\r\n                warning={ props.warning }\r\n                handleOnChange={ props.handleOnChange }\r\n                handleFormClearing={ props.handleFormClearing }\r\n                handleProductAdding={ props.handleProductAdding }\r\n                handleAddWindow={ props.handleAddWindow }\r\n              />\r\n          }\r\n        </main>\r\n      \r\n      }\r\n\r\n    </div>,\r\n    document.getElementById('portal')\r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../styles/window/window.css';\r\n\r\n\r\nexport default function RemoveWindow(props) {\r\n  const [isRemovingAllButtonPressed, setRemovingAllButtonPressed] = useState(false);\r\n  const [isRemoveButtonDisabled, setIsRemoveButtonDisabled] = useState(false);\r\n\r\n  // WINDOW EFFECTS\r\n  useEffect(() => {\r\n    const removingWindow = document.querySelector(\".window\");\r\n\r\n    if (isRemovingAllButtonPressed) {\r\n      removingWindow.style.filter = \"blur(5px) opacity(40%) grayscale(100%)\";\r\n      removingWindow.style.pointerEvents = \"none\";\r\n    }\r\n    else {\r\n      removingWindow.style.filter = \"blur(0px) opacity(100%) grayscale(0%)\";\r\n      removingWindow.style.pointerEvents = \"auto\";\r\n    }\r\n  }, [isRemovingAllButtonPressed]);\r\n\r\n  // BACKGROUND EFFECTS\r\n  useEffect(() => {\r\n    const wrapper = document.querySelector(\"#root\");\r\n\r\n    wrapper.style.filter = \"blur(5px) opacity(40%) grayscale(100%)\";\r\n    wrapper.style.pointerEvents = \"none\";\r\n  \r\n    return (() => {\r\n      wrapper.style.filter = \"blur(0px) opacity(100%) grayscale(0%)\";\r\n      wrapper.style.pointerEvents = \"auto\";\r\n    })\r\n\r\n  }, []);\r\n\r\n  useEffect(() => { \r\n    handleRemoveButtonDisabling() \r\n  }, []);\r\n\r\n  const handleSelected = (e) => {\r\n    const item = document.getElementById(e.currentTarget.id);\r\n    \r\n    if(e.currentTarget.id) {\r\n      const itemName = item.querySelector(\".window__main__section__large-list__item__name\");\r\n\r\n      // \"UNSELECTING\"\r\n      if (itemName.style.fontWeight === \"bold\") {\r\n        item.style.background = \"#ffffff\";\r\n        itemName.style.fontWeight = \"normal\";\r\n      }\r\n\r\n      // \"SELECTING\"\r\n      else {\r\n        item.style.background = \"#7500AF30\";\r\n        itemName.style.fontWeight = \"bold\";\r\n      }\r\n\r\n      handleRemoveButtonDisabling();\r\n    }\r\n  }\r\n\r\n  const handleRemoveButton = () => {\r\n    const selectedIds = [];\r\n    const items = document.querySelectorAll(\".window__main__section__large-list__item\");\r\n\r\n    items.forEach(item => {\r\n      const name = item.querySelector(\".window__main__section__large-list__item__name\")\r\n      if(name.style.fontWeight === \"bold\")\r\n        selectedIds.push(Number(item.id));\r\n    });\r\n\r\n    if (selectedIds.length !== 0)\r\n      props.handleRemoving(selectedIds);\r\n  }\r\n\r\n  const handleRemoveButtonDisabling = () => {\r\n    const items = document.querySelectorAll(\".window__main__section__large-list__item\");\r\n    let returnedBoolean = false;\r\n   \r\n    for (let i = 0; i < items.length; i++) {\r\n      const name = items[i].querySelector(\".window__main__section__large-list__item__name\");\r\n      if (name.style.fontWeight === \"bold\") {\r\n        returnedBoolean = false;\r\n        break;\r\n      }\r\n      \r\n      else\r\n        returnedBoolean = true;\r\n    }\r\n    setIsRemoveButtonDisabled(returnedBoolean);\r\n  }\r\n\r\n  const handleRemovingAllButton = () => {\r\n    setRemovingAllButtonPressed(true);\r\n  }\r\n\r\n  const handleRemovingAllCancel = () => {\r\n    setRemovingAllButtonPressed(false);\r\n  }\r\n\r\n  const handleRemovingAllConfirm = () => {\r\n    const selectedIds = [];\r\n    const items = document.querySelectorAll(\".window__main__section__large-list__item\");\r\n\r\n    items.forEach(item => {\r\n      selectedIds.push(Number(item.id))\r\n    });\r\n\r\n    props.handleRemoving(selectedIds);\r\n  }\r\n  \r\n  return ReactDOM.createPortal (\r\n    <>\r\n    <section className=\"window\">\r\n\r\n      <header className=\"window__header\">\r\n        <h1 className=\"window__header__heading\">{ props.type === 'exercises' ? \"Remove serie\" : \"Remove product\" }</h1>\r\n      </header>\r\n\r\n      <main className=\"window__main window__main--list\">\r\n\r\n        <ul className=\"window__main__section__large-list window__main__section__large-list--heading\">\r\n          <li className=\"window__main__section__large-list__item window__main__section__large-list__item--heading\">\r\n              { props.type === 'exercises'\r\n                ? <div className=\"window__main__section__large-list__wrapper\">\r\n                    <span className=\"window__main__section__large-list__item__name\" style={{color: \"white\"}}>Serie</span>\r\n                    <span className=\"window__main__section__large-list__item__nutrition-facts\">\r\n                      <p className=\"window__main__section__large-list__item__nutrition-facts__weight\">Weight</p>\r\n                    </span>\r\n                    <span className=\"window__main__section__large-list__item__calories\">Repetitions</span>\r\n                  </div>\r\n\r\n                : <div className=\"window__main__section__large-list__wrapper\">\r\n                    <span className=\"window__main__section__large-list__item__name\" style={{color: \"white\"}}>Product name</span>\r\n                    <span className=\"window__main__section__large-list__item__nutrition-facts\">\r\n                      <p className=\"window__main__section__large-list__item__nutrition-facts__proteins\" title=\"Proteins\">P</p>\r\n                      <p className=\"window__main__section__large-list__item__nutrition-facts__fats\" title=\"Fats\">F</p>\r\n                      <p className=\"window__main__section__large-list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">C</p>\r\n                    </span>\r\n                    <span className=\"window__main__section__large-list__item__calories\">Calories</span>\r\n                  </div> \r\n              }\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"window__main__section__large-list\">\r\n\r\n          { props.list.map(item => {\r\n            return (\r\n              props.type === 'exercises'\r\n\r\n              ? <li onClick={ handleSelected } id={ item.id } key={ item.id } className=\"window__main__section__large-list__item\">\r\n                  <div className=\"window__main__section__large-list__wrapper\">\r\n                    <span id={ item.id } className=\"window__main__section__large-list__item__name\">Serie { item.serieCount }</span>\r\n                    <span id={ item.id } className=\"window__main__section__large-list__item__nutrition-facts\">\r\n                      <p id={ item.id } className=\"window__main__section__large-list__item__nutrition-facts__weight\" title=\"Weight\">{ item.weight } kg</p>\r\n                    </span>\r\n                    <span id={ item.id } className=\"window__main__section__large-list__item__calories\">{ item.reps } reps</span>\r\n                  </div>\r\n                </li>\r\n\r\n              : <li onClick={ handleSelected } id={ item.id } key={ item.id } className=\"window__main__section__large-list__item\">\r\n                  <div className=\"window__main__section__large-list__wrapper\">\r\n                    <span id={ item.id } className=\"window__main__section__large-list__item__name\">{ item.name }</span>\r\n                    <span id={ item.id } className=\"window__main__section__large-list__item__nutrition-facts\">\r\n                      <p id={ item.id } className=\"window__main__section__large-list__item__nutrition-facts__proteins\" title=\"Proteins\">{ item.proteins } g</p>\r\n                      <p id={ item.id } className=\"window__main__section__large-list__item__nutrition-facts__fats\" title=\"Fats\">{ item.fats } g</p>\r\n                      <p id={ item.id } className=\"window__main__section__large-list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">{ item.carbs } g</p>\r\n                    </span>\r\n                    <span id={ item.id } className=\"window__main__section__large-list__item__calories\">{ item.kcal } kcal</span>\r\n                  </div>\r\n                  <span id={ item.id } className=\"window__main__section__large-list__item__weight\">{ item.weight } g</span>\r\n                </li>\r\n            )})\r\n          }\r\n\r\n        </ul>\r\n\r\n      </main>\r\n\r\n      <section className=\"window__bottom\">\r\n          <button className=\"window__bottom__tertiary-button\" onClick={ handleRemovingAllButton }>Remove all</button>\r\n          <div>\r\n            <button className=\"window__bottom__secondary-button\" onClick={ props.handleRemoveWindow }>Cancel</button>\r\n            <button \r\n            className={ isRemoveButtonDisabled\r\n                        ? \"window__bottom__primary-button window__bottom__primary-button--disabled\" \r\n                        : \"window__bottom__primary-button\" }\r\n              onClick={ handleRemoveButton }>Remove</button>\r\n          </div>\r\n        </section>\r\n\r\n    </section>\r\n\r\n    { isRemovingAllButtonPressed \r\n        ? <section className=\"window window--login\">\r\n\r\n            <header className=\"window__header\">\r\n              <h2 className=\"window__header__heading\">Remove all?</h2> \r\n            </header>\r\n\r\n            <main className=\"window__main\">\r\n              <h3 className=\"window__main__message\">{props.type === 'exercises' ? \"Are you sure you want to remove all series in current exercise?\" : \"Are you sure you want to remove all products in current meal?\"}</h3>\r\n            </main>\r\n\r\n            <section className=\"window__bottom\">\r\n              <button className=\"window__bottom__secondary-button\" onClick={ handleRemovingAllCancel }>Cancel</button>\r\n              <button className=\"window__bottom__primary-button\" onClick={ handleRemovingAllConfirm }>Remove</button>\r\n            </section>\r\n          </section>\r\n        : null }\r\n    </>,\r\n  document.getElementById(\"portal\")\r\n  )\r\n}","// IMPORTS\r\n\r\nimport { React, useState, useEffect, useReducer } from 'react';\r\nimport AddWindow from '../product_adding_window/ProductAddingWindow';\r\nimport RemoveWindow from '../product_removing_window/ProductRemovingWindow';\r\nimport './styles/meal.css';\r\n\r\nexport const warnings = {\r\n  name:   \"Name must be a string of letters only\",\r\n  weight: \"Weight must be a positive number\",\r\n  macros: \"Macronutrient must be a number\"\r\n};\r\n\r\nconst ACTIONS = {\r\n  NEGATE_MEAL_STATE: 'negate-meal-state',\r\n  NEGATE_ADDING_WINDOW_STATE: 'negate-adding-window-state',\r\n  NEGATE_REMOVING_WINDOW_STATE: 'negate-removing-window-state',\r\n  ADD_PRODUCT: 'add-product',\r\n  ENABLE_PLACEHOLDER: 'enable-placeholder',\r\n  DISABLE_PLACEHOLDER: 'disable-placeholder',\r\n  SET_WARNING: 'set-warning',\r\n  CLEAR_WARNING: 'clear-warning',\r\n  REMOVE_PRODUCT: 'remove-product',\r\n  ADD_TO_SUMMARY: 'add-to-summary',\r\n  SUB_FROM_SUMMARY: 'sub-from-summary',\r\n  CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING: 'clear-productlist-before-day-changing',\r\n  ADD_PRODUCT_TO_PRODUCTLIST: 'add-product-to-productlist'\r\n}\r\n\r\n\r\n// COMPONENTS\r\n\r\nexport default function Meal(props) {\r\n\r\n  // REDUCER STUFF\r\n  const initialState = {\r\n    isMealOpened: false, \r\n    isAddingWindowOpened: false,\r\n    isRemovingWindowOpened: false,\r\n    countIngredients: false,\r\n    productList: [],\r\n    newProduct: { id: 0, mealId: props.mealId, dateIds: { dayId: 0, monthId: 0, yearId: 0 },  name: '', weight: '', proteins: '', fats: '', carbs: '', kcal: '' },\r\n    warning: ['', ''],\r\n    summary: {\r\n      proteins: 0,\r\n      fats: 0,\r\n      carbs: 0,\r\n      kcal: 0\r\n    }\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch(action.type) {\r\n\r\n      case ACTIONS.NEGATE_MEAL_STATE:\r\n        return {...state, isMealOpened: !state.isMealOpened};\r\n      \r\n      case ACTIONS.NEGATE_ADDING_WINDOW_STATE:\r\n        return {...state, isAddingWindowOpened: !state.isAddingWindowOpened};\r\n\r\n      case ACTIONS.NEGATE_REMOVING_WINDOW_STATE:\r\n        return {...state, isRemovingWindowOpened: !state.isRemovingWindowOpened};\r\n\r\n      case ACTIONS.CHANGE_NEW_PRODUCT_DATA: {\r\n        switch (action.payload.key) {\r\n          case 'name':      return {...state, newProduct: {...state.newProduct, name:     action.payload.value}};\r\n          case 'weight':    return {...state, newProduct: {...state.newProduct, weight:   action.payload.value}};\r\n          case 'proteins':  return {...state, newProduct: {...state.newProduct, proteins: action.payload.value}};\r\n          case 'fats':      return {...state, newProduct: {...state.newProduct, fats:     action.payload.value}};\r\n          case 'carbs':     return {...state, newProduct: {...state.newProduct, carbs:    action.payload.value}};\r\n          case 'kcal':      return {...state, newProduct: {...state.newProduct, kcal:     action.payload.value}};\r\n        }\r\n      }\r\n\r\n      case ACTIONS.ADD_PRODUCT: {\r\n        state.newProduct.id = Date.now();\r\n        state.newProduct.dateIds = props.dateIds;\r\n        state.productList.push(state.newProduct);\r\n        localStorage.setItem(state.newProduct.id, JSON.stringify(state.newProduct));\r\n        return {...state, newProduct: { id: 0, mealId: props.mealId, dateIds: { dayId: 0, monthId: 0, yearId: 0 }, name: '', weight: '', proteins: '', fats: '', carbs: '', kcal: ''}};\r\n      }\r\n\r\n      case ACTIONS.SET_WARNING: {\r\n        switch (action.payload) {\r\n          case 'name':  return { ...state, warning: [warnings.name, action.payload] }\r\n          case 'weight':  return { ...state, warning: [warnings.weight, action.payload] }\r\n          default:  return { ...state, warning: [warnings.macros, action.payload] }\r\n        };\r\n      }\r\n\r\n      case ACTIONS.CLEAR_WARNING: {\r\n        return { ...state, warning: ['', action.payload]};\r\n      }\r\n\r\n      case ACTIONS.REMOVE_PRODUCT: {\r\n        let newProductList = state.productList;\r\n        let checkedIdList = action.payload;\r\n        \r\n        checkedIdList.forEach(checkedId => {\r\n          newProductList.forEach((product, index) => {\r\n            if (Number(product.id) === Number(checkedId)) {\r\n              newProductList.splice(index, 1);\r\n              localStorage.removeItem(product.id);\r\n            }\r\n          });\r\n        });\r\n        return {...state, productList: newProductList};\r\n      }\r\n\r\n      case ACTIONS.ADD_TO_SUMMARY: {\r\n        switch (action.payload.ingredient) {\r\n          case 'proteins': return {...state, summary: {...state.summary, proteins: state.summary.proteins + Number(action.payload.value)}};\r\n          case 'fats':     return {...state, summary: {...state.summary, fats:     state.summary.fats     + Number(action.payload.value)}};\r\n          case 'carbs':    return {...state, summary: {...state.summary, carbs:    state.summary.carbs    + Number(action.payload.value)}};\r\n          case 'kcal':     return {...state, summary: {...state.summary, kcal:     state.summary.kcal     + Number(action.payload.value)}};\r\n        }\r\n      }\r\n      \r\n      case ACTIONS.SUB_FROM_SUMMARY: {\r\n        switch (action.payload.ingredient) {\r\n          case 'proteins': return {...state, summary: {...state.summary, proteins: state.summary.proteins - Number(action.payload.value)}};\r\n          case 'fats':     return {...state, summary: {...state.summary, fats:     state.summary.fats     - Number(action.payload.value)}};\r\n          case 'carbs':    return {...state, summary: {...state.summary, carbs:    state.summary.carbs    - Number(action.payload.value)}};\r\n          case 'kcal':     return {...state, summary: {...state.summary, kcal:     state.summary.kcal     - Number(action.payload.value)}};\r\n        }\r\n      }\r\n\r\n      case ACTIONS.ADD_PRODUCT_TO_PRODUCTLIST: {\r\n        return {...state, productList: [...state.productList, action.payload]};\r\n      }\r\n\r\n      case ACTIONS.CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING: {\r\n        return {...state, productList: []};\r\n      }\r\n\r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [isPlaceholderEnabled, setPlaceholderState] = useState(false);\r\n\r\n\r\n  // LOADS DATA FROM LOCAL STORAGE AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    let localStorageKeys = Object.keys(localStorage);\r\n    localStorageKeys.forEach(key => {\r\n      let value = JSON.parse(localStorage.getItem(key));\r\n      if (value.mealId === props.mealId && ((value.dateIds.dayId === props.dateIds.dayId) &&\r\n                                            (value.dateIds.monthId === props.dateIds.monthId) &&\r\n                                            (value.dateIds.yearId === props.dateIds.yearId)))\r\n        dispatch({ type: ACTIONS.ADD_PRODUCT_TO_PRODUCTLIST, payload: value });\r\n    });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLEARS PRODUCTLIST AFTER DAY CHANGE\r\n  useEffect(() => { \r\n    return () => dispatch({ type: ACTIONS.CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLOSES WINDOWS AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    const disableVisibilityIfEnabled = (state, action) => {\r\n      if (state)\r\n        dispatch({type: action});\r\n    }\r\n    \r\n    disableVisibilityIfEnabled(state.isMealOpened, ACTIONS.NEGATE_MEAL_STATE);\r\n    disableVisibilityIfEnabled(state.isAddingWindowOpened, ACTIONS.NEGATE_ADDING_WINDOW_STATE);\r\n    disableVisibilityIfEnabled(state.isRemovingWindowOpened, ACTIONS.NEGATE_REMOVING_WINDOW_STATE);\r\n\r\n  }, [props.dateIds])\r\n\r\n\r\n  // SENDS DATA FROM MEAL TO GAUGES\r\n  useEffect(() => { \r\n    props.updateGauges(state.summary, props.mealId);\r\n\r\n  }, [state.summary]);\r\n\r\n\r\n  // DISABLES POINTER EVENTS WHEN ONE OF FORM WINDOWS IS OPENED \r\n  useEffect(() => {\r\n    const changePointerEvents = (value) => {\r\n      const meals = document.querySelectorAll(\".meal\");\r\n      const wrapper = document.querySelector(\".wrapper\");\r\n      const center = document.querySelector(\".center-section\");\r\n\r\n      meals.forEach(meal => {\r\n        let buttons = meal.querySelector(\".meal__buttons-section\");\r\n        buttons.style.pointerEvents = value;\r\n        wrapper.style.pointerEvents = value;\r\n\r\n        // DISABLING SCROLL AT CENTER SECTION \r\n        value === \"none\" ? center.style.overflowY = \"hidden\" : center.style.overflowY = \"auto\";\r\n      });\r\n    }\r\n\r\n\r\n    state.isAddingWindowOpened || state.isRemovingWindowOpened\r\n    ? changePointerEvents(\"none\")\r\n    : changePointerEvents(\"auto\");\r\n    \r\n  }, [state.isAddingWindowOpened, state.isRemovingWindowOpened]);\r\n\r\n\r\n  const handleMealOpening = () => {\r\n    dispatch( {type: ACTIONS.NEGATE_MEAL_STATE} );\r\n  }\r\n\r\n  const handleAddingToSummary = (object) => {\r\n    Object.keys(object).forEach(key => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_TO_SUMMARY,\r\n        payload: {\r\n          ingredient: key,\r\n          value: object[key]\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleSubstractingFromSummary = (object) => {\r\n    Object.keys(object).forEach(key => {\r\n      dispatch({\r\n        type: ACTIONS.SUB_FROM_SUMMARY,\r\n        payload: {\r\n          ingredient: key,\r\n          value: object[key]\r\n        }\r\n      });\r\n    });\r\n    \r\n  }\r\n\r\n  const handleAddWindow = () => {\r\n    dispatch( {type: ACTIONS.NEGATE_ADDING_WINDOW_STATE} );\r\n  }\r\n\r\n  const handleRemoveWindow = () => {\r\n    dispatch( {type: ACTIONS.NEGATE_REMOVING_WINDOW_STATE} );\r\n  }\r\n\r\n  const handleProductAdding = (e) => {\r\n    e.preventDefault();\r\n    setTimeout(() => { dispatch({ type: ACTIONS.ADD_PRODUCT }) }, 10);\r\n    dispatch({ type: ACTIONS.NEGATE_ADDING_WINDOW_STATE });\r\n  }\r\n\r\n  const handlePredefinedProductsAdding = (selectedProducts) => {\r\n    selectedProducts.forEach(product => {\r\n\r\n      // TIMEOUT TO PREVENT DOUBLED IDS\r\n      setTimeout(() => {\r\n\r\n        Object.keys(product).forEach(key => {\r\n          dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: key, value: product[key] }});\r\n        });\r\n\r\n        dispatch({ type: ACTIONS.ADD_PRODUCT });\r\n\r\n      }, 10);\r\n    });\r\n    \r\n    dispatch({ type: ACTIONS.NEGATE_ADDING_WINDOW_STATE });\r\n  }\r\n\r\n  const handleProductRemoving = (checkedIdsList) => {\r\n    dispatch({ type: ACTIONS.REMOVE_PRODUCT, payload: checkedIdsList });\r\n    dispatch({ type: ACTIONS.NEGATE_REMOVING_WINDOW_STATE });\r\n  }\r\n\r\n  const handleFormClearing = () => {\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'name', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'weight', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'proteins', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'fats', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'carbs', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'kcal', value: '' }});\r\n    setPlaceholderState(false);\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    const isNumber = /[0-9]/;\r\n    const isWord = /[a-z\\s]/i;\r\n    const isZero = /^[0]{1}/;\r\n    console.log(state.productList);\r\n\r\n    const setValueAsZero = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: e.target.id, value: '0' }});\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    const setValueAsNull = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: e.target.id, value: \"\" } });\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    const setValueAsCorrect = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: e.target.id, value: e.target.value }});\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    if (e.target.id === 'name') {\r\n\r\n      isWord.test(e.target.value[e.target.value.length - 1]) ? setValueAsCorrect() : setValueAsNull();\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      if (isNumber.test(e.target.value[e.target.value.length - 1])) {\r\n\r\n        if (isZero.test(e.target.value))\r\n          e.target.id === 'weight' ? setValueAsNull() : setValueAsZero();\r\n\r\n        else\r\n          setValueAsCorrect();\r\n      }\r\n\r\n      else {\r\n        setValueAsNull();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"meal\" style={ (state.isMealOpened && window.innerWidth > 768) ? {left: '-10px'} : {left: '0px'} }>\r\n      <section className=\"meal__top-section\" onClick={ handleMealOpening }>\r\n        \r\n        <h2 className=\"meal__top-section__meal-title\">{props.name}</h2>        \r\n        \r\n        <ul className=\"meal__top-section__meal-stats-list\">                   \r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.proteins } g</li>\r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.fats } g</li>\r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.carbs } g</li>\r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.kcal } kcal</li>\r\n        </ul> \r\n\r\n      </section>\r\n\r\n      { state.productList.length !== 0 ? (\r\n        <section className=\"meal__products-section\" style={ state.isMealOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n       \r\n        { state.productList.map(product => {\r\n          return (\r\n            <Product key={ product.id } \r\n              name={ product.name }\r\n              weight={ product.weight }\r\n              proteins={ product.proteins }\r\n              fats={ product.fats }\r\n              carbs={ product.carbs }\r\n              kcal={ product.kcal }\r\n              addIngredientsFunction={ handleAddingToSummary }\r\n              subIngredientsFunction={ handleSubstractingFromSummary }>\r\n            </Product>\r\n          )\r\n        })}\r\n\r\n        </section>\r\n      ) : null }\r\n      \r\n      <section className=\"meal__buttons-section\" style={ state.isMealOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n        <div>\r\n        <button \r\n          className={ state.productList.length ? \"meal__buttons-section__remove-button\" : \"meal__buttons-section__remove-button--disabled\" } \r\n          onClick={ state.productList.length ? handleRemoveWindow : null } \r\n          disabled={ state.isAddingWindowOpened || state.isRemovingWindowOpened ? true : false }>\r\n          Remove</button> \r\n\r\n        <button \r\n          className=\"meal__buttons-section__add-button\" \r\n          onClick={ handleAddWindow } \r\n          disabled={ state.isAddingWindowOpened || state.isRemovingWindowOpened ? true : false }>\r\n          Add</button>  \r\n        </div>     \r\n      \r\n      </section>\r\n\r\n      { state.isAddingWindowOpened \r\n        ? <AddWindow \r\n            data={{ \r\n              isPlaceholderEnabled: isPlaceholderEnabled,\r\n              name: state.newProduct.name, \r\n              weight: state.newProduct.weight,\r\n              proteins: state.newProduct.proteins,\r\n              fats: state.newProduct.fats,\r\n              carbs: state.newProduct.carbs,\r\n              kcal: state.newProduct.kcal }}\r\n            warning={ state.warning }\r\n            handleOnChange={ handleOnChange }\r\n            handleFormClearing = { handleFormClearing }\r\n            handleProductAdding={ handleProductAdding }\r\n            handleAddWindow={ handleAddWindow }\r\n            handlePredefinedProductsAdding={ handlePredefinedProductsAdding }\r\n          />\r\n        : null }\r\n\r\n      { state.isRemovingWindowOpened \r\n        ? <RemoveWindow\r\n            list={ state.productList }\r\n            handleRemoving={ handleProductRemoving }\r\n            handleRemoveWindow={ handleRemoveWindow }\r\n          />\r\n        : null }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Product(props) {\r\n  useEffect(() => { \r\n    let ingredients = { proteins: props.proteins, fats: props.fats, carbs: props.carbs, kcal: props.kcal };\r\n    props.addIngredientsFunction(ingredients);\r\n\r\n    return () => {\r\n      props.subIngredientsFunction(ingredients);\r\n      }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"meal__products-section__product\">\r\n      <div className=\"meal__products-section__product__info\">\r\n        <h2 className=\"meal__products-section__product__title\">{props.name}</h2>          \r\n        <p className=\"meal__products-section__product__weight\">{props.weight} g</p>           \r\n      </div>\r\n        \r\n      <ul className=\"meal__products-section__product__stats-list\">             \r\n        <li className=\"meal__products-section__product__stats-list__item\">{props.proteins} g</li>\r\n        <li className=\"meal__products-section__product__stats-list__item\">{props.fats} g</li>\r\n        <li className=\"meal__products-section__product__stats-list__item\">{props.carbs} g</li>\r\n        <li className=\"meal__products-section__product__stats-list__item meal__products-section__product__stats-list__item--kcal\">{props.kcal} kcal</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","// IMPORTS\r\n\r\nimport React from 'react';\r\nimport './styles/right.css';\r\n\r\n\r\n// PRIMARY COMPONENTS\r\n\r\nexport default function Gauge(props) {\r\n  const handleRotation = () => {\r\n    const rotationDegrees = props.percent * 2.7;\r\n    if (rotationDegrees < 90)\r\n      return {transform: `rotate(${rotationDegrees}deg)`};\r\n    if (rotationDegrees >= 90 && rotationDegrees < 180)\r\n      return {transform: `rotate(${rotationDegrees}deg)`, borderRightColor: `#ffffff80`};  \r\n    if (rotationDegrees >= 180)\r\n      return {transform: `rotate(${rotationDegrees}deg)`, borderRightColor: `#ffffff80`, borderTopColor: '#ffffff80'};\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={ !props.isKcal ? \"right-section__gauge-container\" : \"right-section__gauge-container right-section__gauge-container--kcal\" }>\r\n        \r\n        <div className={ !props.isKcal ? \"right-section__gauge-container__bar\" : \"right-section__gauge-container__bar right-section__gauge-container__bar--kcal\" } \r\n          style={ props.percent < 100 ? handleRotation() : {borderColor: \"#e00000\"}}>    \r\n        </div>\r\n\r\n        <div className={ !props.isKcal ? \"right-section__gauge-container__text\" : \"right-section__gauge-container__text right-section__gauge-container__text--kcal\" }>\r\n           <h4 className={ !props.isKcal ? \"right-section__gauge-container__text__amount\" : \"right-section__gauge-container__text__amount right-section__gauge-container__text__amount--kcal\" }>\r\n             {props.amount} {!props.isKcal ? \"g\" : null}</h4>\r\n           <h6 className={ !props.isKcal ? \"right-section__gauge-container__text__name\" : \"right-section__gauge-container__text__name right-section__gauge-container__text__name--kcal\" }>\r\n             {props.name} </h6>\r\n           <p className={ !props.isKcal ? \"right-section__gauge-container__text__percent\" : \"right-section__gauge-container__text__percent right-section__gauge-container__text__percent--kcal\" }>\r\n             {props.percent} %</p>\r\n           <h5 className={ !props.isKcal ? \"right-section__gauge-container__text__left\" : \"right-section__gauge-container__text__left right-section__gauge-container__text__left--kcal\" }>\r\n             {props.left} {!props.isKcal ? \"g\" : null} left</h5>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}","import { React, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../styles/window/window.css';\r\nimport { FaChevronCircleLeft } from 'react-icons/fa';\r\n \r\nexport default function MoreWindow(props) {\r\n  // BACKGROUND EFFECTS\r\n  useEffect(() => {\r\n    const wrapper = document.querySelector(\"#root\");\r\n    const iframe = document.querySelector(\".window__main__section__iframe\");\r\n\r\n    wrapper.style.filter = \"blur(5px) opacity(40%) grayscale(100%)\";\r\n    wrapper.style.pointerEvents = \"none\";\r\n    setTimeout(() => { iframe.style.opacity = \"1\" }, 500);\r\n  \r\n    return (() => {\r\n      wrapper.style.filter = \"blur(0px) opacity(100%) grayscale(0%)\";\r\n      wrapper.style.pointerEvents = \"auto\";\r\n    })\r\n\r\n  }, []);\r\n\r\n  const handleBackButton = () => {\r\n    props.handleMoreWindow();\r\n  }\r\n\r\n  return ReactDOM.createPortal (\r\n    <div className=\"window window--more\">\r\n\r\n      <header className=\"window__header\">\r\n        <h2 className=\"window__header__heading\">{ props.title }</h2>\r\n        <button className=\"window__header__back-button\" onClick={ handleBackButton }><FaChevronCircleLeft /></button>\r\n      </header>\r\n\r\n      <main className=\"window__main\">\r\n\r\n        <section className=\"window__main__section\"> \r\n          <h3 className=\"window__main__section__title\">Description</h3>\r\n          <p className=\"window__main__section__text\">{ props.description }</p>\r\n        </section>\r\n\r\n        <section className=\"window__main__section window__main__section--halfed\">\r\n          <aside className=\"window__main__section__split-left\">\r\n            <h3 className=\"window__main__section__title\">Difficulty</h3>\r\n            <div className=\"exercise__top-section__grade-container\" style={{ marginBottom: \"15px\" }}>\r\n              <span className=\"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\"></span>\r\n              <span className={ props.difficulty >= 2 ? \"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\" : \"exercise__top-section__grade-container__point\" }></span>\r\n              <span className={ props.difficulty === 3 ? \"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\" : \"exercise__top-section__grade-container__point\" }></span>\r\n            </div>\r\n            <p className=\"window__main__section__text\">{ props.typeOfExercise }</p>\r\n          </aside>\r\n          <aside className=\"window__main__section__split-right\">\r\n            <h3 className=\"window__main__section__title\">Muscles</h3>\r\n            <ul className=\"window__main__section__list\">\r\n              { props.muscles.map((muscle, index) => { return <li key={ index } className=\"window__main__section__list__item\">{ muscle }</li> }) } \r\n            </ul>\r\n          </aside>\r\n        </section>\r\n\r\n        <section className=\"window__main__section\">\r\n          <h3 className=\"window__main__section__title\">Proper form</h3>\r\n          <iframe className=\"window__main__section__iframe\" allowFullScreen width=\"100%\" height=\"300px\" src={ props.properFormLink }></iframe>\r\n        </section>\r\n\r\n      </main>\r\n\r\n      <section className=\"window__bottom\">\r\n        <div></div>\r\n        <button className=\"window__bottom__primary-button\" type=\"button\" onClick={ handleBackButton }>Back</button>\r\n      </section>\r\n\r\n    </div>,\r\n    document.getElementById('portal')\r\n  )\r\n}","// IMPORTS\r\n\r\nimport { React, useEffect, useReducer } from 'react';\r\nimport './style/exercise.css';\r\nimport './../meal/styles/meal.css';\r\nimport '../product_adding_window/styles/productAddingWindow.css';\r\nimport AddWindow from '../product_adding_window/ProductAddingWindow';\r\nimport RemoveWindow from '../product_removing_window/ProductRemovingWindow';\r\nimport MoreWindow from '../MoreWindow/MoreWindow';\r\n\r\nconst ACTIONS = {\r\n  NEGATE_EXERCISE_OPENED: 'negate-exercise-opened',\r\n  NEGATE_ADD_WINDOW_STATE: 'negate-add-window-state',\r\n  NEGATE_REMOVE_WINDOW_STATE: 'negate-remove-window-state',\r\n  NEGATE_MORE_WINDOW_STATE: 'negate-more-window-state',\r\n  SORT_SERIESLIST: 'sort-serieslist',\r\n  CHANGE_NEW_SERIE_DATA: 'change-new-serie-data',\r\n  UPDATE_LASTTIME_DATA: 'update-lasttime-data',\r\n  SET_WARNING: 'set-warning',\r\n  CLEAR_WARNING: 'clear-warning',\r\n  ADD_SERIE: 'add-serie',\r\n  REMOVE_SERIE: 'remove-serie',\r\n  ADD_SERIE_TO_SERIESLIST: 'add-serie-to-serieslist',\r\n  CLEAR_SERIESLIST_BEFORE_DAY_CHANGING: 'clear-serieslist-before-day-change'\r\n}\r\n\r\nexport const warnings = {\r\n  weight: \"Weight must be a positive number\",\r\n  reps: \"Reps must be a positive number\"\r\n};\r\n\r\n// COMPONENT\r\n\r\nexport default function Exercise(props) {\r\n\r\n  const initialState = {\r\n    isExerciseOpened: false,\r\n    isAddWindowOpened: false,\r\n    isRemoveWindowOpened: false,\r\n    isMoreWindowOpened: false,\r\n    lastTimeData: { \r\n      training: { weight: \"First time\", reps: \"First time\" },\r\n      serie: { weight: \"First time\", reps: \"First time\" } \r\n    },\r\n    seriesList: [],\r\n    warning: ['', ''],\r\n    newSerie: { id: 0, exerciseId: props.exerciseId, trainingId: 0, dateIds: { dayId: 0, monthId: 0, yearId: 0 }, serieCount: '', weight: '', reps:'' }\r\n  }\r\n\r\n  const getPreviousTrainingDate = (previousDateIds) => {\r\n    const isLeapYear = () => {\r\n      if (((previousDateIds.yearId % 4 === 0) && (previousDateIds.yearId % 100 !== 0)) || previousDateIds.yearId % 400 === 0)\r\n         return true;\r\n      \r\n      else\r\n         return false;\r\n    }\r\n    const isDayFirstInMonth = () => {\r\n      if(previousDateIds.dayId === 1)\r\n        return true;\r\n      else\r\n        return false;\r\n    }\r\n    const isDayFirstInJanuary = () => {\r\n      if ((previousDateIds.dayId === 1) && (previousDateIds.monthId === 1))\r\n        return true;\r\n      \r\n      else\r\n        return false;\r\n    }\r\n    const isDayFirstInMarch = () => {\r\n      if ((previousDateIds.dayId === 1) && (previousDateIds.monthId === 3))\r\n        return true;\r\n      \r\n      else\r\n        return false;\r\n    }\r\n    const isDayFirstIn30DayMonths = () => {\r\n      if ((previousDateIds.dayId === 1) && ((previousDateIds.monthId === 4) || (previousDateIds.monthId === 6) || (previousDateIds.monthId === 8) || (previousDateIds.monthId === 9) || (previousDateIds.monthId === 11)))\r\n        return true;\r\n      \r\n      else\r\n        return false;\r\n    }\r\n\r\n    let potentialPreviousDateIds = { dayId: 0, monthId: 0, yearId: 0 };\r\n\r\n    if (isDayFirstInJanuary()) {\r\n      potentialPreviousDateIds.dayId = 31;\r\n      potentialPreviousDateIds.monthId = 12;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId - 1;\r\n    }\r\n\r\n    else if (isDayFirstInMarch()) {\r\n      if(isLeapYear())\r\n        potentialPreviousDateIds.dayId = 29;\r\n      else\r\n        potentialPreviousDateIds.dayId = 28;\r\n      \r\n      potentialPreviousDateIds.monthId = 2;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n\r\n    else if (isDayFirstIn30DayMonths()) {\r\n      potentialPreviousDateIds.dayId = 31;\r\n      potentialPreviousDateIds.monthId = previousDateIds.monthId - 1;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n\r\n    else if (isDayFirstInMonth()) {\r\n      potentialPreviousDateIds.dayId = 30\r\n      potentialPreviousDateIds.monthId = previousDateIds.monthId - 1;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n    \r\n    else {\r\n      potentialPreviousDateIds.dayId = previousDateIds.dayId - 1;\r\n      potentialPreviousDateIds.monthId = previousDateIds.monthId;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n\r\n    return potentialPreviousDateIds;\r\n  }\r\n\r\n  const reducer = (state, action) => {\r\n    \r\n    switch(action.type) {\r\n      case ACTIONS.NEGATE_EXERCISE_OPENED: {\r\n        return {...state, isExerciseOpened: !state.isExerciseOpened};\r\n      }\r\n\r\n      case ACTIONS.NEGATE_ADD_WINDOW_STATE: {\r\n        return {...state, isAddWindowOpened: !state.isAddWindowOpened};\r\n      }\r\n\r\n      case ACTIONS.NEGATE_REMOVE_WINDOW_STATE: {\r\n        return {...state, isRemoveWindowOpened: !state.isRemoveWindowOpened};\r\n      }\r\n\r\n      case ACTIONS.NEGATE_MORE_WINDOW_STATE: {\r\n        return {...state, isMoreWindowOpened: !state.isMoreWindowOpened};\r\n      }\r\n\r\n      case ACTIONS.CHANGE_NEW_SERIE_DATA: {\r\n        switch (action.payload.key) {\r\n          case 'weight':      return { ...state, newSerie: { ...state.newSerie, weight: action.payload.value } };\r\n          case 'reps':        return { ...state, newSerie: { ...state.newSerie, reps:   action.payload.value } };\r\n        }\r\n      }\r\n\r\n      case ACTIONS.ADD_SERIE: {\r\n        const updatedSeriesList = state.seriesList;\r\n        let serieCount = 1;\r\n        \r\n        // ADDING SERIE TO SERIESLIST\r\n        state.newSerie.id = Date.now();\r\n        state.newSerie.dateIds = props.dateIds;\r\n        updatedSeriesList.push(state.newSerie);\r\n\r\n        // SERIE ORDER COUNTING\r\n        updatedSeriesList.forEach(serie => {\r\n          serie.serieCount = serieCount;\r\n          serieCount++;\r\n        });\r\n\r\n        // SAVING CHANGES IN LOCAL STORAGE\r\n        localStorage.setItem(state.newSerie.id, JSON.stringify(state.newSerie));\r\n        \r\n        return {\r\n          ...state,\r\n          newSerie: { id: 0, exerciseId: props.exerciseId, dateIds: { dayId: 0, monthId: 0, yearId: 0 }, serieCount: '', weight: '', reps: '' },\r\n          seriesList: updatedSeriesList };\r\n      }\r\n\r\n      case ACTIONS.REMOVE_SERIE: {\r\n        let updatedSeriesList = state.seriesList;\r\n        let checkedIdList = action.payload;\r\n        let serieCount = 1;\r\n        \r\n        checkedIdList.forEach(checkedId => {\r\n\r\n          updatedSeriesList.forEach((serie, index) => {\r\n            localStorage.removeItem(serie.id);\r\n            if (Number(serie.id) === Number(checkedId))\r\n              updatedSeriesList.splice(index, 1);\r\n              \r\n          });\r\n\r\n        });\r\n\r\n        // SERIE ORDER COUNTING\r\n        updatedSeriesList.forEach(serie => {\r\n          serie.serieCount = serieCount;\r\n          localStorage.setItem(serie.id, JSON.stringify(serie));\r\n          serieCount++;\r\n        });\r\n\r\n        return { ...state, seriesList: updatedSeriesList };\r\n      }\r\n\r\n      case ACTIONS.SET_WARNING: {\r\n        switch (action.payload) {\r\n          case 'weight':  return { ...state, warning: [warnings.weight, action.payload] }\r\n          case 'reps':  return { ...state, warning: [warnings.reps, action.payload] }\r\n        };\r\n      }\r\n\r\n      case ACTIONS.CLEAR_WARNING: {\r\n        return { ...state, warning: ['', action.payload]};\r\n      }\r\n\r\n      case ACTIONS.ADD_SERIE_TO_SERIESLIST: {\r\n        return {...state, seriesList: [...state.seriesList, action.payload]};\r\n      }\r\n\r\n      case ACTIONS.SORT_SERIESLIST: {\r\n        let serieCount = 1;\r\n        const updatedSeriesList = [];\r\n\r\n        while (updatedSeriesList.length !== state.seriesList.length) {\r\n\r\n          state.seriesList.forEach(serie => {\r\n            if (serie.serieCount === serieCount)\r\n              updatedSeriesList.push(serie);\r\n          });\r\n\r\n          serieCount++;\r\n        }\r\n   \r\n        return {...state, seriesList: updatedSeriesList };\r\n      }\r\n\r\n      case ACTIONS.CLEAR_SERIESLIST_BEFORE_DAY_CHANGING: {\r\n        return {...state, seriesList: []};\r\n      }\r\n\r\n      case ACTIONS.UPDATE_LASTTIME_DATA: {\r\n\r\n        let currentlyAddingSerieNumber = 0;\r\n        let indexOfLastSerie = 0;\r\n        let updatedLastSerieData = { weight: \"First serie\", reps: \"First serie\" };\r\n        let updatedLastTrainingData = { weight: \"First training\", reps: \"First training\" };\r\n\r\n        // LAST SERIE DATA\r\n\r\n        // SEARCHING FOR LAST SERIE NUMBER\r\n        if (state.seriesList.length !== 0) {\r\n\r\n          state.seriesList.forEach((serie, index) => {\r\n            if (serie.serieCount > currentlyAddingSerieNumber) {\r\n              currentlyAddingSerieNumber = serie.serieCount;\r\n              indexOfLastSerie = index;\r\n            }\r\n          });\r\n\r\n          updatedLastSerieData = { \r\n            weight: state.seriesList[indexOfLastSerie].weight,\r\n            reps: state.seriesList[indexOfLastSerie].reps \r\n          };\r\n        }\r\n      \r\n        // LAST TRAINING DATA\r\n\r\n        const potentialSeries = [];\r\n        let previousTrainingSerie = {};\r\n        let previousDateIds = props.dateIds;\r\n      \r\n        // FILTERING LOCAL STORAGE TO SEARCH A EXERCISE WITH CORRECT EXERCISEID AND NUMBER OF SERIE\r\n        if (Object.keys(localStorage).length !== 0) {\r\n\r\n          Object.keys(localStorage).forEach(key => {\r\n            let value = JSON.parse(localStorage.getItem(key));\r\n\r\n            if (value.exerciseId === props.exerciseId) {\r\n              if (value.serieCount === currentlyAddingSerieNumber + 1) {\r\n                if (\r\n                  (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n                  (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId === props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n                  (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n                  (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId >= props.dateIds.monthId) && (value.dateIds.yearId < props.dateIds.yearId)\r\n                )\r\n                  potentialSeries.push(value);\r\n              }\r\n            }\r\n          });\r\n\r\n          if (potentialSeries.length !== 0) {\r\n            while (true) {\r\n              previousDateIds = getPreviousTrainingDate(previousDateIds);\r\n  \r\n              potentialSeries.forEach(serie => {\r\n                if (JSON.stringify(previousDateIds) === JSON.stringify(serie.dateIds))\r\n                  previousTrainingSerie = serie;\r\n              });\r\n  \r\n              if (previousTrainingSerie.weight !== undefined) {\r\n                updatedLastTrainingData = { \r\n                  weight: previousTrainingSerie.weight,\r\n                  reps: previousTrainingSerie.reps \r\n                };\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return {...state, \r\n          lastTimeData: {\r\n            training: updatedLastTrainingData,\r\n            serie: updatedLastSerieData\r\n          }\r\n        }\r\n      }\r\n      \r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\r\n  // LOADS DATA FROM LOCAL STORAGE AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    let localStorageKeys = Object.keys(localStorage);\r\n\r\n    localStorageKeys.forEach(key => {\r\n      let value = JSON.parse(localStorage.getItem(key));\r\n      if (value.exerciseId === props.exerciseId && ((value.dateIds.dayId === props.dateIds.dayId) &&\r\n                                            (value.dateIds.monthId === props.dateIds.monthId) &&\r\n                                            (value.dateIds.yearId === props.dateIds.yearId)))\r\n        dispatch({ type: ACTIONS.ADD_SERIE_TO_SERIESLIST, payload: value });\r\n    });\r\n\r\n    dispatch({ type: ACTIONS.SORT_SERIESLIST });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLEARS SERIESLIST AFTER DAY CHANGE\r\n  useEffect(() => { \r\n    return () => dispatch({ type: ACTIONS.CLEAR_SERIESLIST_BEFORE_DAY_CHANGING });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // \r\n  useEffect(() => { \r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLOSES WINDOWS AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    const disableVisibilityIfEnabled = (state, action) => {\r\n      if (state)\r\n        dispatch({type: action});\r\n    }\r\n    \r\n    disableVisibilityIfEnabled(state.isExerciseOpened, ACTIONS.NEGATE_EXERCISE_OPENED);\r\n    disableVisibilityIfEnabled(state.isAddWindowOpened, ACTIONS.NEGATE_ADD_WINDOW_STATE);\r\n    disableVisibilityIfEnabled(state.isRemoveWindowOpened, ACTIONS.NEGATE_REMOVE_WINDOW_STATE);\r\n    disableVisibilityIfEnabled(state.isMoreWindowOpened, ACTIONS.NEGATE_MORE_WINDOW_STATE);\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // DISABLES POINTER EVENTS WHEN ONE OF FORM WINDOWS IS OPENED \r\n  useEffect(() => {\r\n    const changePointerEvents = (value) => {\r\n      const meals = document.querySelectorAll(\".meal\");\r\n      const wrapper = document.querySelector(\".wrapper\");\r\n      const center = document.querySelector(\".center-section\");\r\n\r\n      meals.forEach(meal => {\r\n        let buttons = meal.querySelector(\".meal__buttons-section\");\r\n        buttons.style.pointerEvents = value;\r\n        wrapper.style.pointerEvents = value;\r\n\r\n        // DISABLING SCROLL AT CENTER SECTION \r\n        value === \"none\" ? center.style.overflowY = \"hidden\" : center.style.overflowY = \"auto\";\r\n      });\r\n    }\r\n\r\n\r\n    state.isAddWindowOpened || state.isRemoveWindowOpened || state.isMoreWindowOpened\r\n    ? changePointerEvents(\"none\")\r\n    : changePointerEvents(\"auto\");\r\n    \r\n  }, [state.isAddWindowOpened, state.isRemoveWindowOpened, state.isMoreWindowOpened]);\r\n\r\n\r\n  // UPDATES LAST TIME DATA AFTER OPENING CHANGING WINDOWS\r\n  useEffect(() => {\r\n    if (state.isAddWindowOpened)\r\n      dispatch({ type: ACTIONS.UPDATE_LASTTIME_DATA });\r\n    countProgress();\r\n\r\n  }, [state.isAddWindowOpened]);\r\n\r\n  const handleExerciseOpening = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_EXERCISE_OPENED });\r\n  }\r\n\r\n  const handleAddWindow = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_ADD_WINDOW_STATE });\r\n  }\r\n\r\n  const handleRemoveWindow = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_REMOVE_WINDOW_STATE });\r\n  }\r\n\r\n  const handleMoreWindow = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_MORE_WINDOW_STATE });\r\n  }\r\n\r\n  const countProgress = () => {\r\n    const potentialTrainings = [];\r\n    const lastTrainingData = [];\r\n    let message = {};\r\n    let percentValue = 0;\r\n    let progressValue = 0;\r\n    let previousDateIds = props.dateIds;\r\n  \r\n    // FILTERING LOCAL STORAGE TO SEARCH A EXERCISE WITH CORRECT EXERCISEID AND NUMBER OF SERIE\r\n    if (Object.keys(localStorage).length !== 0) {\r\n\r\n      Object.keys(localStorage).forEach(key => {\r\n        let value = JSON.parse(localStorage.getItem(key));\r\n\r\n        if (value.exerciseId === props.exerciseId) {\r\n          if (\r\n            (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n            (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId === props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n            (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n            (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId >= props.dateIds.monthId) && (value.dateIds.yearId < props.dateIds.yearId)\r\n          )\r\n            potentialTrainings.push(value);\r\n        }\r\n      });\r\n\r\n      if (potentialTrainings.length !== 0) {\r\n        while (true) {\r\n          previousDateIds = getPreviousTrainingDate(previousDateIds);\r\n\r\n          potentialTrainings.forEach(training => {\r\n            if (JSON.stringify(previousDateIds) === JSON.stringify(training.dateIds))\r\n              lastTrainingData.push(training); \r\n          });\r\n\r\n          if (lastTrainingData.length !== 0)\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const lastTrainingTotal = countTotalWeight(lastTrainingData);\r\n    const currentTrainingTotal = countTotalWeight(state.seriesList);\r\n  \r\n    progressValue = currentTrainingTotal - lastTrainingTotal;\r\n\r\n    if (lastTrainingTotal)\r\n      percentValue = ((progressValue / lastTrainingTotal) * 100).toFixed(2);\r\n    else \r\n      percentValue = '';\r\n      \r\n    if (lastTrainingTotal > 0) {\r\n\r\n      if (progressValue > 0) {\r\n        message.top = `${progressValue.toFixed(2)} kg more`;\r\n        message.bottom = `${percentValue}% more than last time`;\r\n      }\r\n      else if (progressValue === 0) {\r\n        message.top = \"The same result as last time\";\r\n        message.bottom = \"\";\r\n      }\r\n\r\n      else {\r\n        progressValue *= -1;\r\n        percentValue  *= -1;\r\n        message.top = `${progressValue.toFixed(2)} kg less`;\r\n        message.bottom = `${percentValue}% less than last time`;\r\n      }\r\n    }\r\n\r\n    else {\r\n      message.top = \"First training, don't give up!\";\r\n      message.bottom = \"\";\r\n    }\r\n  \r\n    return message;\r\n  }\r\n\r\n  const handleFormClearing = () => {\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: 'weight', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: 'reps', value: '' }});\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    // const newReg = /^[1-9]{1,}[.]{1}[0-9]{1,3}/\r\n    const isNumber = /[0-9]/;\r\n    const isZero = /^[0]{1}/;\r\n\r\n    const setValueAsNull = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: e.target.id, value: \"\" } });\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    const setValueAsCorrect = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: e.target.id, value: e.target.value }});\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: e.target.id });\r\n    }\r\n    \r\n    if (isNumber.test(e.target.value[e.target.value.length - 1])) {\r\n\r\n      if (isZero.test(e.target.value))\r\n        setValueAsNull();\r\n\r\n      else\r\n        setValueAsCorrect();\r\n    }\r\n\r\n    else {\r\n      setValueAsNull();\r\n    }\r\n  }\r\n\r\n  const countTotalWeight = (seriesList) => {\r\n    let totalWeight = 0;\r\n\r\n    seriesList.forEach(serie => {\r\n      totalWeight += Number(serie.weight) * Number(serie.reps);\r\n    });\r\n\r\n    return totalWeight;\r\n  }\r\n\r\n  const countTotalReps = (seriesList) => {\r\n    let totalReps = 0;\r\n\r\n    seriesList.forEach(serie => {\r\n      totalReps += Number(serie.reps);\r\n    });\r\n    \r\n    return totalReps;\r\n  }\r\n\r\n  const countWeightPerRepsRatio = (seriesList) => {\r\n    return (countTotalWeight(seriesList) / countTotalReps(seriesList)).toFixed(2);\r\n  }\r\n\r\n  const handleSerieAdding = (e) => {\r\n    e.preventDefault();\r\n    setTimeout(() => { dispatch({ type: ACTIONS.ADD_SERIE }) }, 10);\r\n    dispatch({ type: ACTIONS.NEGATE_ADD_WINDOW_STATE });\r\n  }\r\n\r\n  const handleSerieRemoving = (checkedIdsList) => {\r\n    dispatch({ type: ACTIONS.REMOVE_SERIE, payload: checkedIdsList });\r\n    dispatch({ type: ACTIONS.NEGATE_REMOVE_WINDOW_STATE });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"meal exercise\" style={ (state.isExerciseOpened && window.innerWidth > 768) ? {left: '-10px'} : {left: '0px'} }>\r\n      \r\n      <section className=\"meal__top-section exercise__top-section\" onClick={ handleExerciseOpening }>\r\n\r\n        <h2 className=\"meal__top-section__meal-title\">{ props.name }</h2>\r\n\r\n        <div className=\"exercise__top-section__grade-container\" title=\"Exercise difficulty\">\r\n          <span className=\"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\"></span>\r\n          <span className={ props.difficulty >= 2 ? \"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\" : \"exercise__top-section__grade-container__point\" }></span>\r\n          <span className={ props.difficulty === 3 ? \"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\" : \"exercise__top-section__grade-container__point\" }></span>\r\n        </div>\r\n\r\n      </section>\r\n\r\n      { state.seriesList.length !== 0 ? (\r\n        <section className=\"meal__products-section exercise__series-section\" style={ state.isExerciseOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n\r\n          <ul className=\"exercise__series-section__list\">\r\n            { state.seriesList.map(serie => {\r\n              return (\r\n              <li key={ serie.id } className=\"exercise__series-section__list__item\">\r\n                  <p className=\"exercise__series-section__list__item__count\">Serie { serie.serieCount }</p>\r\n                  <p className=\"exercise__series-section__list__item__weight\">{ serie.weight } kg</p>\r\n                  <p className=\"exercise__series-section__list__item__reps\">{ serie.reps } reps</p>\r\n                </li> \r\n              )\r\n              })\r\n            }\r\n          </ul>\r\n\r\n          <ul className=\"exercise__series-section__summary\">\r\n\r\n            <li className=\"exercise__series-section__summary__item\">\r\n              <p className=\"exercise__series-section__summary__item__count\">Total</p>\r\n              <p className=\"exercise__series-section__summary__item__weight\">{ countTotalWeight(state.seriesList) } kg</p>\r\n              <p className=\"exercise__series-section__summary__item__reps\">{ countTotalReps(state.seriesList) } reps</p>\r\n            </li>\r\n\r\n            <li className=\"exercise__series-section__summary__item\">\r\n              <p className=\"exercise__series-section__list__item__count\">\r\n                <span>{ countProgress().top }</span>\r\n                <span>{ countProgress().bottom }</span>\r\n              </p>\r\n              <p className=\"exercise__series-section__list__item__reps exercise__series-section__list__item__reps--stats\">{ countWeightPerRepsRatio(state.seriesList) } kg per rep</p>\r\n            </li>\r\n\r\n          </ul>\r\n          \r\n        </section>\r\n      ) : null }\r\n      \r\n      \r\n      <section className=\"meal__buttons-section exercise__buttons-section\" style={ state.isExerciseOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n\r\n        <button \r\n          className=\"adding-window__main__form__tertiary\" \r\n          onClick={ handleMoreWindow }>\r\n          More\r\n        </button>\r\n        \r\n        <div>\r\n          <button \r\n            className={ state.seriesList.length ? \"meal__buttons-section__remove-button\" : \"meal__buttons-section__remove-button--disabled\" }\r\n            onClick={ state.seriesList.length ? handleRemoveWindow : null } \r\n            disabled={ state.isAddWindowOpened || state.isRemoveWindowOpened ? true : false }>\r\n            Remove\r\n          </button>\r\n\r\n          <button \r\n            className=\"adding-window__main__form__primary\" \r\n            onClick={ handleAddWindow }\r\n            disabled={ state.isAddWindowOpened || state.isRemoveWindowOpened ? true : false }>\r\n            Add\r\n          </button>\r\n        </div>\r\n\r\n      </section>\r\n        \r\n      { state.isAddWindowOpened \r\n        ? <AddWindow \r\n            type=\"exercises\"\r\n            handleAddWindow={ handleAddWindow }\r\n            data={{\r\n              weight: state.newSerie.weight,\r\n              reps: state.newSerie.reps\r\n            }}\r\n            warning={ state.warning }\r\n            handleOnChange={ handleOnChange }\r\n            handleFormClearing={ handleFormClearing }\r\n            handleSerieAdding={ handleSerieAdding }\r\n            lastTimeData={ state.lastTimeData }\r\n          />\r\n        : null }\r\n\r\n      { state.isRemoveWindowOpened \r\n        ? <RemoveWindow \r\n            type=\"exercises\"\r\n            list={ state.seriesList }\r\n            handleRemoving={ handleSerieRemoving }\r\n            handleRemoveWindow={ handleRemoveWindow }\r\n          />\r\n        : null }\r\n\r\n      { state.isMoreWindowOpened \r\n        ? <MoreWindow\r\n            type=\"exercises\"\r\n            title={ props.name }\r\n            description={ props.description }\r\n            difficulty={ props.difficulty }\r\n            typeOfExercise= { props.typeOfExercise}\r\n            muscles={ props.muscles }\r\n            properFormLink={ props.properFormLink }\r\n            handleMoreWindow={ handleMoreWindow }\r\n          />\r\n        : null }\r\n\r\n    </div>\r\n\r\n  )\r\n}","export const exercises = [\r\n  { id: 0,\r\n    name: \"Bench Press\",\r\n    description: `The bench press is an upper-body weight training exercise in which the trainee\r\n                  presses a weight upwards while lying on a weight training bench. \r\n                  The exercise uses the pectoralis major, the anterior deltoids, and the triceps,\r\n                  among other stabilizing muscles. A barbell is generally used to hold the weight, \r\n                  but a pair of dumbbells can also be used.`,\r\n    difficulty: 2, \r\n    typeOfExercise: \"Compound exercise\",\r\n    muscles: [\"Chest\", \"Shoulders\", \"Arms\"],\r\n    properFormLink: \"https://www.youtube.com/embed/XSza8hVTlmM\" \r\n  },\r\n\r\n  { id: 1,\r\n    name: \"Deadlift\",\r\n    description: `Deadlift refers to the lifting of dead weight (weight without momentum),\r\n                  such as weights lying on the ground. It is one of the few standard weight training exercises\r\n                  in which all repetitions begin with dead weight. In most other lifts, there is an eccentric \r\n                  (lowering of the weight) phase followed by the concentric (lifting of the weight) phase. \r\n                  During these exercises, a small amount of energy is stored in the stretched muscles and \r\n                  tendons in the eccentric phase if the lifter is not flexible beyond the range of motion.\r\n                  Although this exercise uses the legs and hips as the primary movers, it can also be considered a back exercise.`,\r\n    difficulty: 3, \r\n    typeOfExercise: \"Compound exercise\",\r\n    muscles: [\"Legs\", \"Back\", \"Core\"],\r\n    properFormLink: \"https://www.youtube.com/embed/op9kVnSso6Q\" \r\n  },\r\n\r\n  { id: 2,\r\n    name: \"Squat\",\r\n    description: `A squat is a strength exercise in which the trainee lowers their hips from a standing position\r\n                  and then stands back up. During the descent of a squat, the hip and knee joints flex while\r\n                  the ankle joint dorsiflexes; conversely the hip and knee joints extend and the ankle joint\r\n                  plantarflexes when standing up. Squats are considered a vital exercise for increasing the strength and size of the lower body\r\n                  muscles as well as developing core strength. The primary agonist muscles used during the squat are\r\n                  the quadriceps femoris, the adductor magnus, and the gluteus maximus.`,\r\n    difficulty: 3, \r\n    typeOfExercise: \"Compound exercise\",\r\n    muscles: [\"Legs\", \"Core\"],\r\n    properFormLink: \"https://www.youtube.com/embed/ultWZbUMPL8\"\r\n  },\r\n\r\n  { id: 3,\r\n    name: \"Pull-up\",\r\n    description: `A pull-up is an upper-body strength exercise. The pull-up is a closed-chain movement where \r\n                  the body is suspended by the hands and pulls up. As this happens, the elbows \r\n                  flex and the shoulders adduct and extend to bring the elbows to the torso.`,\r\n    difficulty: 2, \r\n    typeOfExercise: \"Compound exercise\",\r\n    muscles: [\"Upper back\", \"Arms\"],\r\n    properFormLink: \"https://www.youtube.com/embed/HRV5YKKaeVw\"\r\n  },\r\n\r\n  { id: 4,\r\n    name: \"Push-up\",\r\n    description: `A push-up is a common calisthenics exercise beginning from the prone position. \r\n                  By raising and lowering the body using the arms, push-ups exercise the pectoral muscles, \r\n                  triceps, and anterior deltoids, with ancillary benefits to the rest of the deltoids, \r\n                  serratus anterior, coracobrachialis and the midsection as a whole. Push-ups are a basic \r\n                  exercise used in civilian athletic training or physical education and commonly in military \r\n                  physical training.`,\r\n    difficulty: 1, \r\n    typeOfExercise: \"Compound exercise\",\r\n    muscles: [\"Chest\", \"Shoulders\", \"Arms\", \"Core\"],\r\n    properFormLink: \"https://www.youtube.com/embed/0pkjOk0EiAk\"\r\n  },\r\n\r\n  { id: 5,\r\n    name: \"Overhead Press\",\r\n    description: `The overhead press (abbreviated OHP), also referred to as a shoulder press, military press,\r\n                  or simply the press, is a weight training exercise with many variations. It is typically performed\r\n                  while either standing or sitting sometimes also when squatting, in which a weight is pressed straight\r\n                  upwards from racking position until the arms are locked out overhead, while the legs, lower back and\r\n                  abs maintain balance. The exercise helps build muscular shoulders with bigger arms, and is one\r\n                  of the most difficult compound upper-body exercises.`,\r\n    difficulty: 2, \r\n    typeOfExercise: \"Compound exercise\",\r\n    muscles: [\"Shoulders\", \"Arms\", \"Core\"],\r\n    properFormLink: \"https://www.youtube.com/embed/2yjwXTZQDDI\"\r\n  },\r\n\r\n  { id: 6,\r\n    name: \"Bent-over Row\",\r\n    description: `A bent-over row (or barbell row) is a weight training exercise \r\n                  that targets a variety of back muscles. Which ones are targeted varies on form. \r\n                  The bent over row is often used for both bodybuilding and powerlifting. \r\n                  It is a good exercise for increasing strength and size`,\r\n    difficulty: 2, \r\n    typeOfExercise: \"Compound exercise\",\r\n    muscles: [\"Back\", \"Arms\", \"Core\"],\r\n    properFormLink: \"https://www.youtube.com/embed/kBWAon7ItDw\"\r\n  },\r\n\r\n  { id: 7,\r\n    name: \"Biceps Curl\",\r\n    description: `Biceps curl is a general term for a series of strength exercises \r\n                  that involve brachioradialis, front deltoid and the main target on biceps brachii.\r\n                  Includes variations using barbell, dumbbell and resistance band, etc. The common point\r\n                  amongst them is the trainee lifting a certain amount of weight to contracting the biceps\r\n                  brachii, and tuck in their arms to the torso during the concentric phase. Once the biceps brachii\r\n                  is fully contracted, then return the weight to starting position during the eccentric phase.`,\r\n    difficulty: 1, \r\n    typeOfExercise: \"Isolated exercise\",\r\n    muscles: [\"Biceps\", \"Arms\"],\r\n    properFormLink: \"https://www.youtube.com/embed/ykJmrZ5v0Oo\"\r\n  },\r\n\r\n  { id: 8,\r\n    name: \"French Press\",\r\n    description: `Lying triceps extensions, also known as skull crushers and French extensions\r\n                  or French presses, are a strength exercise used in many different forms of strength training.\r\n                  Lying triceps extensions are one of the most stimulating exercises to the entire triceps muscle\r\n                  group in the upper arm. It works the triceps from the elbow all the way to the latissimus dorsi.\r\n                  Due to its full use of the Triceps muscle group, the lying triceps extensions are used by many\r\n                  as part of their training regimen.`,\r\n    difficulty: 1, \r\n    typeOfExercise: \"Isolated exercise\",\r\n    muscles: [\"Triceps\", \"Arms\"],\r\n    properFormLink: \"https://www.youtube.com/embed/JImgCWzCHwI\"\r\n  },\r\n\r\n  { id: 9,\r\n    name: \"Running\",\r\n    description: `Running is a method of terrestrial locomotion allowing humans and other animals\r\n                  to move rapidly on foot. Running is a type of gait characterized by an aerial phase in which\r\n                  all feet are above the ground (though there are exceptions). A feature of a running\r\n                  body from the viewpoint of spring-mass mechanics is that changes in kinetic and potential energy\r\n                  within a stride occur simultaneously, with energy storage accomplished by springy tendons and\r\n                  passive muscle elasticity. The term running can refer to any of a variety of speeds ranging from jogging to sprinting. `,\r\n    difficulty: 1, \r\n    typeOfExercise: \"Aerobic exercise\",\r\n    muscles: [\"Legs\", \"Core\"],\r\n    properFormLink: \"https://www.youtube.com/embed/brFHyOtTwH4\"\r\n  }\r\n]","import { React, useReducer, useEffect, useState } from 'react';\r\nimport { exercises } from '../../exercisesList';\r\nimport '../../components/product_removing_window/styles/productRemovingWindow.css';\r\nimport '../../components/product_adding_window/styles/productAddingWindow.css';\r\n\r\n\r\nconst initialState = {\r\n  isCategoryOpened: false,\r\n  settingsData: {\r\n    account: {\r\n\r\n    },\r\n\r\n    nutrition: {\r\n      dailyDemand: { kcal: 2000, proteins: 120, fats: 55, carbs: 240 },\r\n      namesOfMeals: { 0: \"Breakfast\", 1: \"II Breakfast\", 2: \"Lunch\", 3: \"Snack\", 4: \"Dinner\", 5: \"\", 6: \"\", 7: \"\", 8: \"\", 9: \"\" },\r\n      numberOfMeals: 5\r\n    },\r\n\r\n    training: {\r\n      selectedExercises: [0, 1, 2, 3, 5]\r\n    }\r\n  },\r\n  clearAllProducts: false,\r\n  clearAllSeries: false,\r\n  isSettingsChanged: false\r\n};\r\n\r\nconst ACTIONS = {\r\n  NEGATE_CATEGORY_OPENED: 'negate-category-opened',\r\n  CHANGE_SETTINGS_DATA: 'change-settings-data',\r\n  LOAD_SETTINGS: 'load-settings',\r\n  SET_CLEAR_ALL_PRODUCTS: 'set-clear-all-products',\r\n  SET_CLEAR_ALL_SERIES: 'set-clear-all-series',\r\n  ADD_EXERCISE_TO_SELECTEDEXERCISES: 'add-exercise-to-selectedexercises',\r\n  REMOVE_EXERCISE_FROM_SELECTEDEXERCISES: 'remove-exercise-from-selectedexercises',\r\n  SET_SETTINGS_CHANGED_STATE: 'set-settings-changed-state',\r\n  RESET_NUTRITION_SETTINGS_TO_INITIAL: 'reset-nutrition-settings-to-initial',\r\n  RESET_TRAINING_SETTINGS_TO_INITIAL: 'reset-training-settings-to-initial'\r\n}\r\n\r\nexport default function Settings(props) {\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n      case ACTIONS.NEGATE_CATEGORY_OPENED: {\r\n        return { ...state, isCategoryOpened: !state.isCategoryOpened }\r\n      }\r\n\r\n      case ACTIONS.CHANGE_SETTINGS_DATA: {\r\n        switch (action.payload.key) {\r\n\r\n          case 'editMealName': {\r\n            return {...state, \r\n              settingsData: { ...state.settingsData, \r\n              nutrition: {...state.settingsData.nutrition,\r\n              namesOfMeals: {...state.settingsData.nutrition.namesOfMeals, [action.payload.index]: action.payload.value }}}\r\n            };\r\n          };\r\n\r\n          case 'setMealsNumber': {\r\n            return {...state, \r\n              settingsData: { ...state.settingsData, \r\n              nutrition: {...state.settingsData.nutrition,\r\n              numberOfMeals: action.payload.value }}\r\n            };\r\n          };\r\n\r\n          default: return {...state, \r\n                           settingsData: { ...state.settingsData, \r\n                           nutrition: {...state.settingsData.nutrition, \r\n                           dailyDemand: {...state.settingsData.nutrition.dailyDemand, \r\n                           [action.payload.key]: action.payload.value }}}};\r\n        }\r\n      }\r\n\r\n      case ACTIONS.LOAD_SETTINGS: {\r\n        let newSettings = JSON.parse(localStorage.getItem(\"settings\"));\r\n        return {...state, settingsData: newSettings }\r\n      }\r\n\r\n      case ACTIONS.SET_CLEAR_ALL_PRODUCTS: {\r\n        return { ...state, clearAllProducts: action.payload };\r\n      }\r\n\r\n      case ACTIONS.SET_CLEAR_ALL_SERIES: {\r\n        return { ...state, clearAllSeries: action.payload };\r\n      }\r\n\r\n      case ACTIONS.ADD_EXERCISE_TO_SELECTEDEXERCISES: {\r\n        const updatedSelectedExercises = state.settingsData.training.selectedExercises;\r\n        updatedSelectedExercises.push(action.payload);\r\n\r\n        return {...state, \r\n          settingsData: { ...state.settingsData, \r\n          training: {...state.settingsData.training,\r\n          selectedExercises: updatedSelectedExercises }}\r\n        };\r\n      }\r\n\r\n      case ACTIONS.REMOVE_EXERCISE_FROM_SELECTEDEXERCISES: {\r\n        const updatedSelectedExercises = state.settingsData.training.selectedExercises;\r\n        const indexOfExerciseToRemoving = updatedSelectedExercises.indexOf(action.payload);\r\n        updatedSelectedExercises.splice(indexOfExerciseToRemoving, 1);\r\n\r\n        return {...state, \r\n          settingsData: { ...state.settingsData, \r\n          training: {...state.settingsData.training,\r\n          selectedExercises: updatedSelectedExercises }}\r\n        }\r\n      }\r\n\r\n      case ACTIONS.SET_SETTINGS_CHANGED_STATE: {\r\n        return { ...state, isSettingsChanged: action.payload };\r\n      }\r\n\r\n      case ACTIONS.RESET_NUTRITION_SETTINGS_TO_INITIAL: {\r\n        return { ...state, settingsData: { ...state.settingsData, nutrition: props.initialData }};\r\n      }\r\n\r\n      case ACTIONS.RESET_TRAINING_SETTINGS_TO_INITIAL: {\r\n        console.log(state.settingsData.training.selectedExercises);\r\n        return { ...state, settingsData: { ...state.settingsData, training: props.initialData }};\r\n      }\r\n\r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const initialOptionsStates = {\r\n    'clear-all-products': false,\r\n    'reset-nutrition-to-initial': false,\r\n    'clear-all-series': false,\r\n    'reset-training-to-initial': false\r\n  };\r\n\r\n  const [optionsStates, setOptionsStates] = useState(initialOptionsStates);\r\n\r\n  // EFFECT WHICH CHECKS IS SETTINGS ARE SAVED IN LOCAL STORAGE\r\n  useEffect(() => {\r\n    if (Object.keys(localStorage).length !== 0)\r\n      dispatch({ type: ACTIONS.LOAD_SETTINGS });   \r\n    else\r\n      saveSettingsToLocalStorage(); \r\n\r\n  }, []);\r\n\r\n  // EFFECT WHICH ENABLE POINTER EVENTS AFTER OPENING CONFIRM WINDOW\r\n  useEffect(() => {\r\n    if (state.clearAllProducts || state.clearAllSeries) {\r\n      const confirmWindow = document.querySelector(\".removing-window__confirm\");\r\n      confirmWindow.style.pointerEvents = \"auto\";\r\n    }\r\n\r\n  }, [ state.clearAllProducts, state.clearAllSeries ]);\r\n\r\n  // DISABLES POINTER EVENTS WHEN ONE OF FORM WINDOWS IS OPENED \r\n  useEffect(() => {\r\n    const changePointerEvents = (value) => {\r\n      const meals = document.querySelectorAll(\".meal\");\r\n      const wrapper = document.querySelector(\".wrapper\");\r\n      const center = document.querySelector(\".center-section\");\r\n\r\n      meals.forEach(meal => {\r\n        let buttons = meal.querySelector(\".meal__buttons-section\");\r\n        buttons.style.pointerEvents = value;\r\n        wrapper.style.pointerEvents = value;\r\n\r\n        // DISABLING SCROLL AT CENTER SECTION \r\n        value === \"none\" ? center.style.overflowY = \"hidden\" : center.style.overflowY = \"auto\";\r\n      });\r\n    }\r\n\r\n    (state.clearAllProducts || state.clearAllSeries)\r\n    ? changePointerEvents(\"none\")\r\n    : changePointerEvents(\"auto\");\r\n    \r\n  }, [ state.clearAllProducts, state.clearAllSeries ]);\r\n\r\n  // EFFECT WHICH CHECKS IS SETTINGS ARE CHANGED\r\n  useEffect(() => {\r\n    const localStorageSettings = localStorage.getItem(\"settings\");\r\n    const currentSettings = JSON.stringify(state.settingsData);\r\n    console.log(localStorageSettings);\r\n    console.log(state.settingsData);\r\n\r\n    if (localStorageSettings === currentSettings)\r\n      dispatch({ type: ACTIONS.SET_SETTINGS_CHANGED_STATE, payload: false });\r\n    else\r\n      dispatch({ type: ACTIONS.SET_SETTINGS_CHANGED_STATE, payload: true});\r\n\r\n  }, [ state.settingsData ]);\r\n\r\n\r\n  const handleOpening = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_CATEGORY_OPENED });\r\n  }\r\n\r\n  const resetCheckbox = (idOfCheckbox) => {\r\n    document.querySelector(\"#\" + idOfCheckbox).checked = false;\r\n  }\r\n\r\n  const resetOptionsStates = () => {\r\n    Object.keys(optionsStates).forEach(key => {\r\n      optionsStates[key] = false;\r\n    });\r\n  }\r\n\r\n  const saveSettingsToLocalStorage = () => {\r\n    localStorage.setItem(\"settings\", JSON.stringify(state.settingsData));\r\n  }\r\n\r\n  const restoreSettingFromLocalStorage = () => {\r\n    dispatch({ type: ACTIONS.LOAD_SETTINGS });\r\n  }\r\n\r\n  const confirmClearAllProducts = () => {\r\n    dispatch({ type: ACTIONS.SET_CLEAR_ALL_PRODUCTS, payload: false });\r\n\r\n    Object.keys(localStorage).forEach(key => {\r\n      let value = JSON.parse(localStorage.getItem(key));\r\n      if (value.mealId >= 0)\r\n        localStorage.removeItem(key);\r\n    });\r\n  }\r\n\r\n  const cancelClearAllProducts = () => {\r\n    dispatch({ type: ACTIONS.SET_CLEAR_ALL_PRODUCTS, payload: false });\r\n  }\r\n\r\n  const confirmClearAllSeries = () => {\r\n    dispatch({ type: ACTIONS.SET_CLEAR_ALL_SERIES, payload: false });\r\n\r\n    Object.keys(localStorage).forEach(key => {\r\n      let value = JSON.parse(localStorage.getItem(key));\r\n      if (value.exerciseId >= 0)\r\n        localStorage.removeItem(key);\r\n    });\r\n\r\n  }\r\n\r\n  const cancelClearAllSeries = () => {\r\n    dispatch({ type: ACTIONS.SET_CLEAR_ALL_SERIES, payload: false });\r\n  }\r\n\r\n  const handleSettingsSaved = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (optionsStates['clear-all-products'])\r\n      dispatch({ type: ACTIONS.SET_CLEAR_ALL_PRODUCTS, payload: true });\r\n    if (optionsStates['reset-nutrition-to-initial'])\r\n      dispatch({ type: ACTIONS.RESET_NUTRITION_SETTINGS_TO_INITIAL });\r\n    if (optionsStates['clear-all-series'])\r\n      dispatch({ type: ACTIONS.SET_CLEAR_ALL_SERIES, payload: true });\r\n    if (optionsStates['reset-training-to-initial'])\r\n      dispatch({ type: ACTIONS.RESET_TRAINING_SETTINGS_TO_INITIAL });\r\n\r\n    dispatch({ type: ACTIONS.SET_SETTINGS_CHANGED_STATE, payload: false });\r\n    saveSettingsToLocalStorage();\r\n    resetOptionsStates();\r\n    props.updateGauges();\r\n  }\r\n\r\n  const handleSettingsCanceled = (e) => {\r\n    e.preventDefault();\r\n    restoreSettingFromLocalStorage();\r\n    resetOptionsStates();\r\n    props.updateGauges();\r\n  }\r\n\r\n  const handleExerciseChoosing = (e) => {\r\n    if (e.target.style.backgroundColor) {\r\n      if (e.target.style.backgroundColor === \"transparent\")\r\n        dispatch({ type: ACTIONS.ADD_EXERCISE_TO_SELECTEDEXERCISES, payload: Number(e.target.id[e.target.id.length - 1]) });\r\n      else\r\n        dispatch({ type: ACTIONS.REMOVE_EXERCISE_FROM_SELECTEDEXERCISES, payload: Number(e.target.id[e.target.id.length - 1]) });\r\n    }\r\n\r\n    else {\r\n      if (e.target.children[0].style.backgroundColor === \"transparent\")\r\n        dispatch({ type: ACTIONS.ADD_EXERCISE_TO_SELECTEDEXERCISES, payload: Number(e.target.id[e.target.id.length - 1]) });\r\n      else\r\n        dispatch({ type: ACTIONS.REMOVE_EXERCISE_FROM_SELECTEDEXERCISES, payload: Number(e.target.id[e.target.id.length - 1]) });\r\n    }\r\n  }\r\n\r\n  const handleSettingOnChange = (e) => {\r\n    const isNumber = /[0-9]/;\r\n    const isZero = /^[0]{1}/;\r\n\r\n    e.preventDefault();\r\n  \r\n    if (e.target.id === 'editMealName') {\r\n      dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, index: Number(e.target.attributes[\"data-key\"].value), value: e.target.value }})\r\n    }\r\n    \r\n    if (isNumber.test(e.target.value[e.target.value.length - 1])) {\r\n\r\n      if (isZero.test(e.target.value))\r\n        dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, value: 1 }});\r\n      else\r\n        dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, value: e.target.value }});\r\n    }\r\n\r\n    else\r\n      dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, value: \"\" }});\r\n\r\n    props.updateGauges();\r\n  }\r\n\r\n  const handleCheckboxOnClick = (e) => {\r\n    setOptionsStates(prevOptions => { return {...prevOptions, [e.target.id]: !optionsStates[e.target.id]} });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"meal\" style={ state.isCategoryOpened ? {left: '-10px'} : {left: '0px'} }>\r\n      <section className=\"meal__top-section\" onClick={ handleOpening }>\r\n        \r\n        <h2 className=\"meal__top-section__meal-title\">{ props.category }</h2>        \r\n        \r\n      </section>\r\n\r\n      <section className=\"meal__products-section meal__products-section--settings\" style={ state.isCategoryOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n          \r\n        { props.category === \"Account\" &&\r\n          <section className=\"center-section__main__settings\">\r\n\r\n          <form className=\"center-section__main__settings__form\" onSubmit={ handleSettingsSaved }>\r\n\r\n            <section className=\"center-section__main__settings__form__section\">\r\n            \r\n            </section>\r\n\r\n            <section className=\"meal__buttons-section meal__buttons-section--settings\" style={ state.isCategoryOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n              \r\n              <div>\r\n              <button \r\n                className=\"meal__buttons-section__remove-button\"\r\n                onClick={ handleSettingsCanceled }\r\n                type=\"button\" \r\n                disabled={ state.isSettingsChanged ? false : true }>\r\n                Cancel</button> \r\n\r\n              <button \r\n                className=\"meal__buttons-section__add-button\"\r\n                type=\"submit\" \r\n                value=\"Save\" \r\n                id=\"saveSettings\">\r\n                Save</button>  \r\n              </div>     \r\n            \r\n            </section>\r\n\r\n          </form>\r\n\r\n        </section>\r\n        }\r\n\r\n        { props.category === \"Nutrition\" &&\r\n          <section className=\"center-section__main__settings\">\r\n\r\n          { state.clearAllProducts &&\r\n            <section className=\"removing-window__confirm\">\r\n\r\n                <h1 className=\"removing-window__title\">Clear all?</h1> \r\n\r\n                <h3 className=\"removing-window__confirm__subtitle\">Are you sure you want to clear all products?</h3>\r\n\r\n                <section className=\"removing-window__main__list__buttons-section\" style={{ justifyContent: \"flex-end\" }}>\r\n                  <div>\r\n                    <button className=\"removing-window__main__list__buttons-section__secondary\" onClick={ cancelClearAllProducts }>Cancel</button>\r\n                    <button className=\"removing-window__main__list__buttons-section__primary\" onClick={ confirmClearAllProducts }>Remove</button>\r\n                  </div>\r\n                </section>\r\n\r\n            </section>\r\n          }\r\n\r\n          <form className=\"adding-window__main__form\" onSubmit={ handleSettingsSaved }>\r\n\r\n            <section className=\"adding-window__main__form adding-window__main__form--daily-demand\">\r\n      \r\n              <h3 className=\"adding-window__main__form__title\">Daily demand</h3>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--short\">\r\n                <label className=\"adding-window__main__form__line__label\" htmlFor=\"proteins\">Proteins</label>\r\n                <input \r\n                  className=\"adding-window__main__form__line__input\" \r\n                  type=\"text\" \r\n                  id=\"proteins\"\r\n                  value={ state.settingsData.nutrition.dailyDemand.proteins }\r\n                  onChange={ handleSettingOnChange }\r\n                  placeholder=\"Proteins\"\r\n                  maxLength=\"4\">\r\n                </input>\r\n                <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n                {/*<p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>*/}\r\n              </div>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--short\">\r\n                <label className=\"adding-window__main__form__line__label\" htmlFor=\"fats\">Fats</label>\r\n                <input \r\n                  className=\"adding-window__main__form__line__input\" \r\n                  type=\"text\" \r\n                  id=\"fats\"\r\n                  value={ state.settingsData.nutrition.dailyDemand.fats }\r\n                  onChange={ handleSettingOnChange }\r\n                  placeholder=\"Fats\"\r\n                  maxLength=\"4\">\r\n                </input>\r\n                <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n                {/*<p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>*/}\r\n              </div>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--short\">\r\n                <label className=\"adding-window__main__form__line__label\" htmlFor=\"Carbs\">Carbs</label>\r\n                <input \r\n                  className=\"adding-window__main__form__line__input\" \r\n                  type=\"text\" \r\n                  id=\"Carbs\"\r\n                  value={ state.settingsData.nutrition.dailyDemand.carbs }\r\n                  onChange={ handleSettingOnChange }\r\n                  placeholder=\"Carbs\"\r\n                  maxLength=\"4\">\r\n                </input>\r\n                <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n                {/*<p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>*/}\r\n              </div>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--short\">\r\n                <label className=\"adding-window__main__form__line__label\" htmlFor=\"kcal\">Calories</label>\r\n                <input \r\n                  className=\"adding-window__main__form__line__input\" \r\n                  type=\"text\" \r\n                  id=\"kcal\"\r\n                  value={ state.settingsData.nutrition.dailyDemand.kcal }\r\n                  onChange={ handleSettingOnChange }\r\n                  placeholder=\"Calories\"\r\n                  maxLength=\"4\">\r\n                </input>\r\n                <span className=\"adding-window__main__form__line__decoration\">kcal</span>\r\n                {/*<p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>*/}\r\n              </div>\r\n            \r\n            </section>\r\n\r\n            <section className=\"adding-window__main__form adding-window__main__form--meals\">\r\n      \r\n              <h3 className=\"adding-window__main__form__title\">Meals</h3>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--short\">\r\n                <label className=\"adding-window__main__form__line__label\" htmlFor=\"setMealsNumber\">Number of meals</label>\r\n                <input \r\n                  className=\"adding-window__main__form__line__input\" \r\n                  type=\"text\" \r\n                  id=\"setMealsNumber\"\r\n                  value={ state.settingsData.nutrition.numberOfMeals }\r\n                  onChange={ handleSettingOnChange }\r\n                  maxLength=\"1\">\r\n                </input>\r\n                <span className=\"adding-window__main__form__line__decoration\">meals</span>\r\n                {/*<p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>*/}\r\n              </div>\r\n\r\n              { Object.values(state.settingsData.nutrition.namesOfMeals).map((meal, index) => {\r\n                if (state.settingsData.nutrition.numberOfMeals > index) {\r\n                  return (\r\n                    <div key={ index } className=\"adding-window__main__form__line adding-window__main__form__line--normal\">\r\n                      <label className=\"adding-window__main__form__line__label\" htmlFor=\"editMealName\">{`Set meal nr ${ index + 1 } name: `}</label>\r\n                      <input \r\n                        className=\"adding-window__main__form__line__input\"\r\n                        data-key={ index } \r\n                        type=\"text\" \r\n                        id=\"editMealName\"\r\n                        value={ state.settingsData.nutrition.namesOfMeals[index] } \r\n                        onChange={ handleSettingOnChange }\r\n                        required>\r\n                      </input>\r\n                      {/*<p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>*/}\r\n                    </div>\r\n                  ) \r\n                }\r\n\r\n                else {\r\n                  return (\r\n                    null\r\n                  )\r\n                }\r\n              })}\r\n              \r\n            </section>\r\n\r\n            <section className=\"adding-window__main__form adding-window__main__form--options\">\r\n\r\n              <h3 className=\"adding-window__main__form__title\">Options</h3>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--checkbox\">\r\n                <label className=\"adding-window__main__form__line__label adding-window__main__form__line__label--options\" htmlFor=\"clearAllProducts\">Clear all products</label>\r\n                <button \r\n                  className=\"adding-window__main__form__background\"\r\n                  id=\"clear-all-products\"\r\n                  type=\"button\"\r\n                  onClick={ handleCheckboxOnClick }>\r\n                  <div \r\n                    className=\"adding-window__main__form__background__checked\" \r\n                    id=\"clear-all-products\"\r\n                    style={ optionsStates[\"clear-all-products\"] ? {backgroundColor: \"#7500AF\"} : {backgroundColor: \"transparent\"} }>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--checkbox\">\r\n                <label className=\"adding-window__main__form__line__label adding-window__main__form__line__label--options\" htmlFor=\"resetNutritionSettingsToInitial\">Reset nutrition settings to initial</label>\r\n                <button \r\n                  className=\"adding-window__main__form__background\"\r\n                  id=\"reset-nutrition-to-initial\"\r\n                  type=\"button\"\r\n                  onClick={ handleCheckboxOnClick }>\r\n                  <div \r\n                    className=\"adding-window__main__form__background__checked\" \r\n                    id=\"reset-nutrition-to-initial\"\r\n                    style={ optionsStates[\"reset-nutrition-to-initial\"] ? {backgroundColor: \"#7500AF\"} : {backgroundColor: \"transparent\"} }>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n\r\n            </section>\r\n\r\n            <section className=\"meal__buttons-section meal__buttons-section--settings\" style={ state.isCategoryOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n              \r\n              <div>\r\n              <button \r\n                className={ state.isSettingsChanged ? \"meal__buttons-section__remove-button\" : \"meal__buttons-section__remove-button meal__buttons-section__remove-button--disabled\" }\r\n                onClick={ handleSettingsCanceled }\r\n                type=\"button\" \r\n                disabled={ state.isSettingsChanged ? false : true }>\r\n                Cancel</button> \r\n\r\n              <button \r\n                className=\"meal__buttons-section__add-button\"\r\n                type=\"submit\" \r\n                value=\"Save\" \r\n                id=\"saveSettings\">\r\n                Save</button>  \r\n              </div>     \r\n            \r\n            </section>\r\n\r\n          </form>\r\n\r\n        </section>\r\n        }\r\n\r\n        { props.category === \"Training\" &&\r\n          <section className=\"center-section__main__settings\">\r\n\r\n          { state.clearAllSeries &&\r\n          <section className=\"removing-window__confirm\">\r\n\r\n            <h1 className=\"removing-window__title\">Clear all?</h1> \r\n\r\n            <h3 className=\"removing-window__confirm__subtitle\">Are you sure you want to clear all series?</h3>\r\n\r\n            <section className=\"removing-window__main__list__buttons-section\" style={{ justifyContent: \"flex-end\" }}>\r\n              <div>\r\n                <button className=\"removing-window__main__list__buttons-section__secondary\" onClick={ cancelClearAllSeries }>Cancel</button>\r\n                <button className=\"removing-window__main__list__buttons-section__primary\" onClick={ confirmClearAllSeries }>Remove</button>\r\n              </div>\r\n            </section>\r\n\r\n          </section>\r\n          } \r\n\r\n          <form className=\"center-section__main__settings__form\" onSubmit={ handleSettingsSaved }>\r\n\r\n\r\n            <section className=\"adding-window__main__form adding-window__main__form--exercises\">\r\n              <h3 className=\"adding-window__main__form__title\">Choose exercises</h3>\r\n                { exercises.map(exercise => {\r\n                  return (\r\n                    <div key={ exercise.id } className=\"adding-window__main__form__line adding-window__main__form__line--checkbox\">\r\n                      <label className=\"adding-window__main__form__line__label adding-window__main__form__line__label--options\" htmlFor={\"exercise\"+ exercise.id }>{ exercise.name }:</label>\r\n                      <button \r\n                        className=\"adding-window__main__form__background\"\r\n                        id={\"exercise\"+ exercise.id }\r\n                        type=\"button\"\r\n                        onClick={ handleExerciseChoosing }>\r\n                        <div \r\n                          className=\"adding-window__main__form__background__checked\" \r\n                          id={\"exercise\"+ exercise.id }\r\n                          style={ state.settingsData.training.selectedExercises.includes(exercise.id) ? {backgroundColor: \"#7500AF\"} : {backgroundColor: \"transparent\"} }>\r\n                        </div>\r\n                      </button>\r\n                    </div>\r\n                  )}) \r\n                }\r\n                \r\n              </section>\r\n\r\n            <section className=\"adding-window__main__form adding-window__main__form--options\">\r\n\r\n              <h3 className=\"adding-window__main__form__title\">Options</h3>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--checkbox\">\r\n                <label className=\"adding-window__main__form__line__label adding-window__main__form__line__label--options\" htmlFor=\"clear-all-series\">Clear all series</label>\r\n                <button \r\n                  className=\"adding-window__main__form__background\"\r\n                  id=\"clear-all-series\"\r\n                  type=\"button\"\r\n                  onClick={ handleCheckboxOnClick }>\r\n                  <div \r\n                    className=\"adding-window__main__form__background__checked\" \r\n                    id=\"clear-all-series\"\r\n                    style={ optionsStates[\"clear-all-series\"] ? {backgroundColor: \"#7500AF\"} : {backgroundColor: \"transparent\"} }>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"adding-window__main__form__line adding-window__main__form__line--checkbox\">\r\n                <label className=\"adding-window__main__form__line__label adding-window__main__form__line__label--options\" htmlFor=\"reset-training-to-initial\">Reset training settings to initial</label>\r\n                <button \r\n                  className=\"adding-window__main__form__background\"\r\n                  id=\"reset-training-to-initial\"\r\n                  type=\"button\"\r\n                  onClick={ handleCheckboxOnClick }>\r\n                  <div \r\n                    className=\"adding-window__main__form__background__checked\" \r\n                    id=\"reset-training-to-initial\"\r\n                    style={ optionsStates[\"reset-training-to-initial\"] ? {backgroundColor: \"#7500AF\"} : {backgroundColor: \"transparent\"} }>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n\r\n            </section>\r\n\r\n            <section className=\"meal__buttons-section meal__buttons-section--settings\" style={ state.isCategoryOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n              \r\n              <div>\r\n              <button \r\n                className={ state.isSettingsChanged ? \"meal__buttons-section__remove-button\" : \"meal__buttons-section__remove-button meal__buttons-section__remove-button--disabled\" }\r\n                onClick={ handleSettingsCanceled }\r\n                type=\"button\" \r\n                disabled={ state.isSettingsChanged ? false : true }>\r\n                Cancel</button> \r\n\r\n              <button \r\n                className=\"meal__buttons-section__add-button\"\r\n                type=\"submit\" \r\n                value=\"Save\" \r\n                id=\"saveSettings\">\r\n                Save</button>  \r\n              </div>     \r\n            \r\n            </section>\r\n\r\n          </form>\r\n\r\n        </section>\r\n        }\r\n\r\n      </section>\r\n      \r\n    </div>\r\n\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport '../meal/styles/meal.css';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"meal\">\r\n\r\n      <section className=\"meal__top-section\">\r\n        <h2 className=\"meal__top-section__meal-title\">Info</h2>        \r\n      </section>\r\n      <section className=\"meal__products_section\">\r\n        <p className=\"meal__paragraph\">The Dietapp is a complex nutrition and training organizer.\r\n           Made to improve my skills in creating web apps using React,\r\n           React Hooks, SCSS and Firebase.</p>\r\n      </section>\r\n\r\n      <section className=\"meal__top-section\">\r\n        <h2 className=\"meal__top-section__meal-title\">Features</h2>        \r\n      </section>\r\n      <section className=\"meal__products_section\">\r\n        <p className=\"meal__paragraph\">You can manually set your daily demand as well as your exercises\r\n           which you are doing on training. An app saves data you entered\r\n           and makes a several operations on these like counting macronutrients,\r\n           progression made in training, or just storing these for any time you want.</p>\r\n      </section>\r\n\r\n      <section className=\"meal__top-section\">\r\n        <h2 className=\"meal__top-section__meal-title\">Idea</h2>        \r\n      </section>\r\n      <section className=\"meal__products_section\">\r\n        <p className=\"meal__paragraph\">Whole idea of the app is about my main hobby which are dietetics and\r\n           bodybuilding. After 3 years of being a fit, I have included the most useful\r\n           features to control your fit life.</p>\r\n      </section>\r\n\r\n      <p className=\"meal__copyright\">© 2021 Karol Jurczyński</p>\r\n    </div>\r\n  )\r\n}","import { React, useReducer } from 'react';\r\nimport '../styles/window/window.css';\r\nimport '../styles/confirm_window/confirm_window.css';\r\n\r\nconst initialState = {\r\n  isSignUpWindow: false\r\n}\r\n\r\nconst ACTIONS = {\r\n  NEGATE_SIGN_UP_WINDOW: 'negate-sign-up-window'\r\n}\r\n\r\nexport default function Login({ isLogout, setUserStatus, disableLoginWindows }) {\r\n  const reducer = (state, action) => {\r\n\r\n    switch (action.type) {\r\n      case ACTIONS.NEGATE_SIGN_UP_WINDOW: {\r\n        return { ...state, isSignUpWindow: !state.isSignUpWindow }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const handleFormTypeChanging = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: ACTIONS.NEGATE_SIGN_UP_WINDOW });\r\n  }\r\n\r\n  const handleTryAsGuest = (e) => {\r\n    e.preventDefault();\r\n    setUserStatus(\"Guest\");\r\n    disableLoginWindows();\r\n  }\r\n\r\n  const handleLoginUser = (e) => {\r\n    e.preventDefault();\r\n    setUserStatus(\"Logged\");\r\n    disableLoginWindows();\r\n  }\r\n\r\n  const handleLogoutUser = (e) => {\r\n    e.preventDefault();\r\n    setUserStatus(\"Log in\");\r\n    disableLoginWindows();\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { isLogout \r\n      ? <div className=\"window window--logout\">\r\n          <header className=\"window__header\">\r\n\r\n            <h2 className=\"window__header__heading\">Log out?</h2>\r\n\r\n          </header>\r\n\r\n          <main className=\"window__main\">\r\n\r\n            <p className=\"window__main__message\">Are you sure you want to log out?</p>\r\n\r\n          </main>\r\n\r\n          <section className=\"window__bottom\">\r\n\r\n            <button className=\"window__bottom__secondary-button\" type=\"button\" onClick={ handleLoginUser }>Cancel</button>\r\n            <button className=\"window__bottom__primary-button\" type=\"button\" onClick={ handleLogoutUser }>Log out</button>\r\n\r\n          </section>\r\n        </div>\r\n\r\n      : <div className=\"window window--login\">\r\n          <header className=\"window__header\">\r\n\r\n            <h2 className=\"window__header__heading\">{ state.isSignUpWindow ? \"Sign up\" : \"Log in\"}</h2>\r\n\r\n          </header>\r\n\r\n          { state.isSignUpWindow\r\n            ? <main className=\"window__main\">\r\n\r\n                <span className=\"window__main__input-line\">\r\n                  <label className=\"window__main__input-line__label\" htmlFor=\"login\">Login</label>\r\n                  <input className=\"window__main__input-line__input\" type=\"text\" id=\"login\" placeholder=\"Login\"></input>\r\n                </span>\r\n\r\n                <span className=\"window__main__input-line\">\r\n                  <label className=\"window__main__input-line__label\" htmlFor=\"email\">Email</label>\r\n                  <input className=\"window__main__input-line__input\" type=\"email\" id=\"email\" placeholder=\"Email\"></input>\r\n                </span>\r\n\r\n                <span className=\"window__main__input-line\">\r\n                  <label className=\"window__main__input-line__label\" htmlFor=\"password\">Password</label>\r\n                  <input className=\"window__main__input-line__input\" type=\"password\" id=\"password\" placeholder=\"Password\"></input>\r\n                </span>\r\n\r\n                <span className=\"window__main__input-line\">\r\n                  <label className=\"window__main__input-line__label\" htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                  <input className=\"window__main__input-line__input\" type=\"password\" id=\"confirmPassword\" placeholder=\"Password\"></input>\r\n                </span>\r\n\r\n                <section className=\"window__main__login-options\">\r\n                  <span className=\"window__main__login-options__line\">{`Already had an account? `}\r\n                    <a className=\"window__main__login-options__line__link\" onClick={ handleFormTypeChanging } href=\"\">Log in</a>\r\n                  </span>\r\n\r\n                  <span className=\"window__main__login-options__line\">{`or `}\r\n                    <a className=\"window__main__login-options__line__link\" onClick={ handleTryAsGuest } href=\"\">Try as guest</a>\r\n                  </span>\r\n                </section>\r\n\r\n                </main>\r\n\r\n            : <main className=\"window__main\">\r\n\r\n                <span className=\"window__main__input-line\">\r\n                  <label className=\"window__main__input-line__label\" htmlFor=\"login\">Login</label>\r\n                  <input className=\"window__main__input-line__input\" type=\"text\" id=\"login\" placeholder=\"Login\"></input>\r\n                </span>\r\n\r\n                <span className=\"window__main__input-line\">\r\n                  <label className=\"window__main__input-line__label\" htmlFor=\"password\">Password</label>\r\n                  <input className=\"window__main__input-line__input\" type=\"password\" id=\"password\" placeholder=\"Password\"></input>\r\n                  <a className=\"window__main__input-line__link\" href=\"\">Forgot your password?</a>\r\n                </span>\r\n\r\n                <section className=\"window__main__login-options\">\r\n                  <span className=\"window__main__login-options__line\">{`Don't have an account? `}\r\n                    <a className=\"window__main__login-options__line__link\" onClick={ handleFormTypeChanging } href=\"\">Sign up</a>\r\n                  </span>\r\n\r\n                  <span className=\"window__main__login-options__line\">{`or `}\r\n                    <a className=\"window__main__login-options__line__link\" onClick={ handleTryAsGuest } href=\"\">Try as guest</a>\r\n                  </span>\r\n                </section>\r\n\r\n                </main>\r\n          }\r\n          \r\n          <section className=\"window__bottom\">\r\n            <div></div>\r\n            <button className=\"window__bottom__primary-button\" type=\"submit\" onClick={ handleLoginUser }>{ state.isSignUpWindow ? \"Sign up\" : \"Log in\"}</button>\r\n\r\n          </section>\r\n        </div>\r\n    }\r\n    </>\r\n  )\r\n}","// IMPORTS\n\nimport { React, useReducer, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Logo, Title, Hamburger, MenuItem, Quotation } from './components/left/left';\nimport DateChanger from './components/center/DateChanger';\nimport Meal from './components/meal/Meal';\nimport Gauge from './components/right/Gauge';\nimport Exercise from './components/exercise/Exercise';\nimport Settings from './components/settings/Settings';\nimport About from './components/about/About';\nimport Login from './components/login/Login';\nimport { exercises } from './exercisesList';\n\nimport './styles/index/index.css';\nimport './components/left/styles/left.css';\nimport './components/center/styles/center.css';\nimport './components/right/styles/right.css';\n\n\n// GLOBALS\n\nconst ACTIONS = {\n  UPDATE_MEALS_INGREDIENTS_SUMMARY: 'update-meals-ingredients-summary',\n  UPDATE_DAILY_INGREDIENTS_SUMMARY: 'update-daily-ingredients-summary',\n  COUNT_GAUGES_DATA: 'count-gauges-data',\n  CHANGE_DATE: 'change-date',\n  CHANGE_PAGE_TITLE: 'change-page-title',\n  LOAD_SETTINGS: 'load-settings',\n  SET_LOGIN_WINDOW: 'set-login-window',\n  SET_USER_STATUS: 'set-user-status',\n  CHANGE_HAMBURGER_STATE: 'change-hamburger-state'\n}\n\n\n// FUNCTIONS\n\nconst countPercentOfEatenIngredient = (eatenAmount, maxAmount) => {\n  if (Number.isNaN((Math.round(eatenAmount / maxAmount * 100))))\n    return 0;\n  else\n   return Math.round(eatenAmount / maxAmount * 100);\n}\n\nconst countAmountOfIngredientLeft = (eatenAmount, maxAmount) => {\n  if (eatenAmount >= maxAmount)\n    return 0;\n  else\n    return maxAmount - eatenAmount;\n}\n\n\n// COMPONENTS\n\nfunction App() {\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n\n      case ACTIONS.UPDATE_MEALS_INGREDIENTS_SUMMARY: {\n        const newMealsIngredientsSummary = [...state.mealsIngredientsSummary];\n\n        newMealsIngredientsSummary[action.payload.mealId] = {\n                                                              proteins: action.payload.data.proteins,\n                                                              fats: action.payload.data.fats, \n                                                              carbs: action.payload.data.carbs, \n                                                              kcal: action.payload.data.kcal };\n\n        return {...state, mealsIngredientsSummary: newMealsIngredientsSummary};                                                                 \n      }\n\n      case ACTIONS.UPDATE_DAILY_INGREDIENTS_SUMMARY: {\n        let dailyIngredientsSum = { proteins: 0, fats: 0, carbs: 0, kcal: 0 };\n        let mealsIngredientsSum = { proteins: 0, fats: 0, carbs: 0, kcal: 0 };\n\n        state.mealsIngredientsSummary.forEach(meal => {\n          mealsIngredientsSum = {\n                                  proteins: meal.proteins,\n                                  fats:     meal.fats,\n                                  carbs:    meal.carbs,\n                                  kcal:     meal.kcal };\n\n          dailyIngredientsSum = {\n                                  proteins: dailyIngredientsSum.proteins + mealsIngredientsSum.proteins,\n                                  fats:     dailyIngredientsSum.fats     + mealsIngredientsSum.fats,\n                                  carbs:    dailyIngredientsSum.carbs    + mealsIngredientsSum.carbs,\n                                  kcal:     dailyIngredientsSum.kcal     + mealsIngredientsSum.kcal };\n\n          mealsIngredientsSum = { proteins: 0,\n                                  fats: 0,\n                                  carbs: 0,\n                                  kcalS: 0 };\n        });\n\n        return {...state, dailyIngredientsSummary: dailyIngredientsSum };\n      }\n\n      case ACTIONS.COUNT_GAUGES_DATA: {\n        const ingredient = action.payload.typeOfIngredient;\n\n        return {...state, gaugesData: {...state.gaugesData, \n          [ingredient]: { \n            eaten: state.dailyIngredientsSummary[ingredient], \n            left: countAmountOfIngredientLeft(state.dailyIngredientsSummary[ingredient], state.settingsData.nutrition.dailyDemand[ingredient]), \n            max: state.settingsData.nutrition.dailyDemand[ingredient], \n            percent: countPercentOfEatenIngredient(state.dailyIngredientsSummary[ingredient], state.settingsData.nutrition.dailyDemand[ingredient]) }\n          }\n        }\n      }\n\n      case ACTIONS.CHANGE_DATE: {\n        return {...state, dateIds: { dayId: action.payload.currentDay,  \n                                     monthId: action.payload.currentMonth,\n                                     yearId: action.payload.currentYear }};\n      }\n\n      case ACTIONS.CHANGE_PAGE_TITLE: {\n        return {...state, pageTitle: action.payload};\n      }\n      \n      case ACTIONS.LOAD_SETTINGS: {\n        let newSettings = JSON.parse(localStorage.getItem(\"settings\"));\n        return {...state, settingsData: newSettings }\n      }\n\n      case ACTIONS.SET_LOGIN_WINDOW: {\n        return {...state, isLoginWindowsEnabled: action.payload}\n      }\n\n      case ACTIONS.SET_USER_STATUS: {\n        return {...state, userStatus: action.payload}\n      }\n\n      case ACTIONS.CHANGE_HAMBURGER_STATE: {\n        return {...state, hamburgerState: !state.hamburgerState}\n      }\n\n      default: return console.error(`Unknown action type: ${action.type}`);\n    }\n  }\n\n  const initialState = {\n    dateIds: { dayId: 0, monthId: 0, yearId: 0 },\n    pageTitle: 'Dashboard',\n    isLoginWindowsEnabled: false,\n    isAddWindowsEnabled: false,\n    isRemoveWindowsEnabled: false,\n    isMoreWindowsEnabled: false,\n    hamburgerState: false,\n    userStatus: \"Log in\",\n    mealsIngredientsSummary: [],\n    dailyIngredientsSummary: { kcal: 0, proteins: 0, fats: 0, carbs: 0 },\n    gaugesData: {\n      kcal: { eaten: 0, left: 0, max: 0, percent: 0 },\n      proteins: { eaten: 0, left: 0, max: 0, percent: 0 },\n      fats: { eaten: 0, left: 0, max: 0, percent: 0 },\n      carbs: { eaten: 0, left: 0, max: 0, percent: 0 }\n    },\n\n    settingsData: {\n      main: {\n  \n      },\n  \n      nutrition: {\n        dailyDemand: { kcal: 2000, proteins: 120, fats: 55, carbs: 240 },\n        namesOfMeals: { 0: \"Breakfast\", 1: \"II Breakfast\", 2: \"Lunch\", 3: \"Snack\", 4: \"Dinner\", 5: \"\", 6: \"\", 7: \"\", 8: \"\", 9: \"\" },\n        numberOfMeals: 5\n      },\n  \n      training: {\n        selectedExercises: [0, 1, 2, 3, 5]\n      }\n    },\n    clearAllProducts: false,\n    clearAllSeries: false,\n    isSettingsChanged: false\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const MENU_CATEGORIES = [state.userStatus, \"Nutrition\", \"Training\", \"Settings\", \"About\"];\n\n  useEffect(() => { updateGauges() }, [ state.dateIds ]);\n\n  // EFFECT WHICH CHECKS IS SETTINGS ARE SAVED IN LOCAL STORAGE\n  useEffect(() => {\n\n    if (Object.keys(localStorage).length !== 0)\n      dispatch({ type: ACTIONS.LOAD_SETTINGS });   \n    else\n      saveSettingsToLocalStorage(); \n\n    updateGauges();\n  }, []);\n\n  useEffect(() => {\n    const wrapper = document.querySelector(\".wrapper\");\n    if (state.isLoginWindowsEnabled) {\n      wrapper.style.filter = \"blur(5px) opacity(40%) grayscale(100%)\";\n      wrapper.style.pointerEvents = \"none\";\n    }\n\n    else {\n      wrapper.style.filter = \"blur(0px) opacity(100%) grayscale(0%)\";\n      wrapper.style.pointerEvents = \"auto\";\n    }\n\n  }, [state.isLoginWindowsEnabled]);\n\n  useEffect(() => {\n    const menu = document.querySelector(\".left-section__menu-container\");\n    if (state.hamburgerState ) {\n      menu.style.display = \"none\";\n    }\n    else {\n      menu.style.display = \"flex\";\n    }\n\n  }, [state.hamburgerState]);\n\n  const updateMealSummary = (object, mealId) => {\n    dispatch({ type: ACTIONS.UPDATE_MEALS_INGREDIENTS_SUMMARY, payload: {data: object, mealId: mealId} });\n    updateDailySummary();\n  } \n\n  const updateDailySummary = () => {\n    dispatch({ type: ACTIONS.UPDATE_DAILY_INGREDIENTS_SUMMARY });\n    updateGauges();\n  }\n\n  const updateGauges = () => {\n    Object.keys(state.settingsData.nutrition.dailyDemand).forEach(ingredient => {\n      dispatch({ type: ACTIONS.COUNT_GAUGES_DATA, payload: { typeOfIngredient: ingredient} });\n    });\n  }\n\n  const updateDateIds = (newDateIds) => {\n    dispatch({type: ACTIONS.CHANGE_DATE, payload: newDateIds })\n  }\n\n  const changePageTitle = (categoryTitle) => {\n    let newPageTitle = '';\n\n    if (categoryTitle === 'Nutrition')\n      newPageTitle = 'Dashboard';\n    else\n      newPageTitle = categoryTitle;\n\n    dispatch({type: ACTIONS.CHANGE_PAGE_TITLE, payload: newPageTitle });\n    dispatch({ type: ACTIONS.LOAD_SETTINGS });\n    updateGauges();\n  }\n\n  const handleMenu = (categoryTitle) => {\n    if (categoryTitle === state.userStatus) {\n      dispatch({ type: ACTIONS.SET_LOGIN_WINDOW, payload: true });\n    }\n\n    else {\n      changePageTitle(categoryTitle);\n    }\n\n    if (window.innerWidth < 768) {\n      dispatch({ type: ACTIONS.CHANGE_HAMBURGER_STATE })\n    }\n  }\n\n  const saveSettingsToLocalStorage = () => {\n    localStorage.setItem(\"settings\", JSON.stringify(state.settingsData));\n  }\n\n  const disableLoginWindows = () => {\n    dispatch({ type: ACTIONS.SET_LOGIN_WINDOW, payload: false }); \n  }\n\n  const setUserStatus = (newStatus) => {\n    dispatch({ type: ACTIONS.SET_USER_STATUS, payload: newStatus });\n  }\n\n  const handleHamburger = () => {\n    dispatch({ type: ACTIONS.CHANGE_HAMBURGER_STATE });\n  }\n\n  return (\n    <>\n\n    { state.isLoginWindowsEnabled &&\n          <Login \n            setUserStatus={ setUserStatus } \n            disableLoginWindows={ disableLoginWindows } \n            isLogout={ state.userStatus === \"Logged\" ? true : false }\n          /> \n    }\n\n    <div className=\"wrapper\">\n\n      <aside className=\"left-section\">\n\n        <header className=\"left-section__logo-container\">\n          <Logo />\n          <Title />\n        </header>\n\n        <Hamburger handleHamburger={ handleHamburger } />\n\n        <ul className=\"left-section__menu-container\">\n\n          { MENU_CATEGORIES.map((category, index) => {\n              return <MenuItem key={ index } value={ category } href=\"\" isActive={ false } linkTo={ handleMenu } />\n            })\n          }\n\n        </ul>\n\n        <h2 className=\"left-section__quotation-container\">\n          <Quotation />\n        </h2>\n        \n      </aside>\n\n\n      <main className=\"center-section\">\n\n        <section className=\"center-section__top\">\n        \n          <h3 className=\"center-section__top__title\">{ state.pageTitle }</h3>\n\n          { ((state.pageTitle === 'Dashboard') || (state.pageTitle === 'Training')) && \n            <DateChanger changeDate={ updateDateIds } />\n          }\n\n        </section>\n\n      \n        <section className=\"center-section__main\">\n\n        { state.pageTitle === 'Training' &&\n\n          state.settingsData.training.selectedExercises.map(selectedExerciseId => {\n            return (\n              <Exercise\n                key={ selectedExerciseId } \n                exerciseId={ selectedExerciseId } \n                dateIds={ state.dateIds } \n                name={ exercises[selectedExerciseId].name } \n                difficulty={ exercises[selectedExerciseId].difficulty } \n                description={ exercises[selectedExerciseId].description } \n                muscles={ exercises[selectedExerciseId].muscles } \n                typeOfExercise={ exercises[selectedExerciseId].typeOfExercise } \n                properFormLink={ exercises[selectedExerciseId].properFormLink }>\n              </Exercise>\n            )})\n        }\n\n        { state.pageTitle === 'Dashboard' && \n\n          Object.values(state.settingsData.nutrition.namesOfMeals).map((meal, index) => {\n            if (state.settingsData.nutrition.numberOfMeals > index)\n              return <Meal key={ index } name={ meal } mealId={ index } dateIds={ state.dateIds } updateGauges={ updateMealSummary } />\n            })\n\n        }\n\n        { state.pageTitle === 'Settings' &&\n\n          <>\n\n          <Settings category=\"Account\" updateGauges={ updateGauges } pageTitle={ state.pageTitle } />\n          <Settings category=\"Nutrition\" initialData={ initialState.settingsData.nutrition } updateGauges={ updateGauges } pageTitle={ state.pageTitle } />\n          <Settings category=\"Training\" initialData={ initialState.settingsData.training } updateGauges={ updateGauges } pageTitle={ state.pageTitle } />\n\n          </>\n\n        }\n\n        { state.pageTitle === 'About' &&\n\n          <About />\n        \n        }\n\n        </section>\n\n\n      </main>\n\n\n      <aside className=\"right-section\">\n\n        <Gauge \n          amount={ state.gaugesData.kcal.eaten }\n          name=\"kcal\"\n          percent={ state.gaugesData.kcal.percent }\n          left={ state.gaugesData.kcal.left }\n          isKcal={true} />\n\n        <Gauge \n          amount={ state.gaugesData.proteins.eaten }\n          name=\"proteins\" \n          percent={ state.gaugesData.proteins.percent }\n          left={ state.gaugesData.proteins.left } />\n        \n        <Gauge \n          amount={ state.gaugesData.fats.eaten }\n          name=\"fats\" \n          percent={ state.gaugesData.fats.percent }\n          left={ state.gaugesData.fats.left } />\n        \n        <Gauge \n          amount={ state.gaugesData.carbs.eaten }   \n          name=\"carbohydrates\" \n          percent={ state.gaugesData.carbs.percent }\n          left={ state.gaugesData.carbs.left } />\n\n      </aside>\n\n\n    </div>\n    </>\n  )\n}\n\n\n// RENDERING\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}
{"version":3,"sources":["components/left/styles/logo.png","components/left/left.js","components/center/DateChanger.js","components/product_adding_window/AddingForm.js","components/product_adding_window/EditForm.js","components/product_adding_window/AddingList.js","components/product_adding_window/ProductAddingWindow.js","components/product_removing_window/ProductRemovingWindow.js","components/meal/Meal.js","components/right/Gauge.js","components/MoreWindow/MoreWindow.js","components/exercise/Exercise.js","index.js"],"names":["Logo","className","src","logo","alt","Title","Quotation","MenuItem","props","isActive","onClick","e","preventDefault","linkTo","target","title","href","value","DateChanger","initialDate","Date","useState","getDate","currentDay","setCurrentDay","getMonth","currentMonth","setCurrentMonth","getFullYear","currentYear","setCurrentYear","isLeapYear","changeNextDay","previousYear","previousMonth","previousDay","changePreviousDay","useEffect","changeDate","translateMonth","AddingForm","initialOptionsStates","optionsStates","setOptionsStates","isFormCompleted","setIsFormCompleted","isStateEqualToProps","setIsStateEqualToProps","handleClearButton","handleFormClearing","handleCancelButton","handleAddWindow","checkIfFormCompleted","Object","keys","forEach","option","data","key","type","name","document","querySelector","weight","proteins","fats","carbs","kcal","reps","saveNewProductToList","newProduct","newList","JSON","parse","localStorage","getItem","push","setItem","stringify","onSubmit","handleSerieAdding","htmlFor","id","lastTimeData","training","serie","onChange","handleOnChange","placeholder","maxLength","warning","disabled","handleProductAdding","keysArray","checkedOptions","searchForCheckedOptions","checkedKey","now","Number","prevOptions","style","backgroundColor","ACTIONS","EditForm","initialState","productData","useReducer","state","action","payload","console","error","warnings","dispatch","checkIfStateIsEqualToProps","handleProductEditing","test","length","nutritionPerOneGram","setValueAsNull","Math","round","idOfSelectedProduct","handleEditingWindow","savedProductList","productSendForEdit","isEditWindowOpened","isAddButtonDisabled","AddingList","newSavedProductList","index","predefinedProductsList","includes","handleAddButtonDisabling","addingWindow","boxShadow","handleSelected","product","getElementById","currentTarget","productName","fontWeight","background","updateProductSendForEdit","getIndexOfProduct","selectedProduct","isInteger","products","querySelectorAll","returnedBoolean","i","targetId","productList","returnedIndex","color","map","selectedProducts","handlePredefinedProductsAdding","editedProduct","indexOfEditedProduct","AddWindow","isAddingTypeSetAtLeftOption","setAddingType","pointerEvents","isPlaceholderEnabled","RemoveWindow","isRemovingAllButtonPressed","setRemovingAllButtonPressed","isRemoveButtonDisabled","setIsRemoveButtonDisabled","removingWindow","filter","handleRemoveButtonDisabling","item","itemName","items","list","serieCount","handleRemoveWindow","selectedIds","handleRemoving","justifyContent","macros","NEGATE_MEAL_STATE","NEGATE_ADDING_WINDOW_STATE","NEGATE_REMOVING_WINDOW_STATE","ADD_PRODUCT","ENABLE_PLACEHOLDER","DISABLE_PLACEHOLDER","SET_WARNING","CLEAR_WARNING","REMOVE_PRODUCT","ADD_TO_SUMMARY","SUB_FROM_SUMMARY","CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING","ADD_PRODUCT_TO_PRODUCTLIST","Meal","isMealOpened","isAddingWindowOpened","isRemovingWindowOpened","countIngredients","mealId","dateIds","dayId","monthId","yearId","summary","CHANGE_NEW_PRODUCT_DATA","newProductList","checkedId","splice","removeItem","ingredient","setPlaceholderState","disableVisibilityIfEnabled","updateGauges","changePointerEvents","meals","wrapper","center","meal","overflowY","handleAddingToSummary","object","handleSubstractingFromSummary","marginLeft","display","Product","addIngredientsFunction","subIngredientsFunction","log","setValueAsCorrect","setTimeout","checkedIdsList","ingredients","Gauge","isKcal","percent","rotationDegrees","transform","borderRightColor","borderTopColor","handleRotation","borderColor","amount","left","MoreWindow","width","height","handleMoreWindow","Exercise","isExerciseOpened","isAddWindowOpened","isRemoveWindowOpened","isMoreWindowOpened","seriesList","newSerie","exerciseId","trainingId","getPreviousTrainingDate","previousDateIds","potentialPreviousDateIds","updatedSeriesList","checkedIdList","currentlyAddingSerieNumber","indexOfLastSerie","updatedLastSerieData","updatedLastTrainingData","potentialSeries","previousTrainingSerie","undefined","countProgress","potentialTrainings","lastTrainingData","message","percentValue","progressValue","lastTrainingTotal","countTotalWeight","toFixed","top","bottom","totalWeight","countTotalReps","totalReps","difficulty","MENU_CATEGORIES","countPercentOfEatenIngredient","eatenAmount","maxAmount","isNaN","App","saveSettingsToLocalStorage","backupSettings","newMealsIngredientsSummary","mealsIngredientsSummary","dailyIngredientsSum","mealsIngredientsSum","kcalS","dailyIngredientsSummary","typeOfIngredient","gaugesData","eaten","settingsData","nutrition","dailyDemand","max","pageTitle","oldSettingsData","namesOfMeals","numberOfMeals","newSettings","clearAllProducts","main","0","1","2","3","4","5","6","7","8","9","namesOfExercises","numberOfExercises","updateMealSummary","updateDailySummary","handleMenu","categoryTitle","restoreSettingsFromBackup","changePageTitle","resetCheckbox","idOfCheckbox","checked","handleSettingOnChange","attributes","category","newDateIds","values","exercise","required","data-key","ReactDOM","render"],"mappings":"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","file":"static/js/main.95bb7352.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.92f8fff8.png\";","// IMPORTS\r\n\r\nimport React from 'react';\r\nimport './styles/left.css';\r\nimport logo from './styles/logo.png';\r\n\r\n\r\n// COMPONENTS\r\n\r\nexport function Logo() {\r\n\r\n  return (\r\n    <img className=\"left-section__logo-container__logo\" src={logo} alt=\"Dietapp logo\" />\r\n  )\r\n}\r\n\r\nexport function Title() {\r\n  \r\n  return (\r\n    <h1 className=\"left-section__logo-container__title\">Diet\r\n      <span className=\"left-section__logo-container__title__right\">app</span>\r\n    </h1>\r\n  )\r\n}\r\n\r\nexport function Quotation() {\r\n\r\n  return (\r\n    <>\r\n      <span className=\"left-section__quotation-container__top\">Be healthy,</span>\r\n      <span className=\"left-section__quotation-container__bottom\">be happy!</span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport function MenuItem(props) {\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    props.linkTo(e.target.title);\r\n  }\r\n\r\n  return (\r\n    <li className=\"left-section__menu-container__list-item\">\r\n        <a \r\n          className={ props.isActive \r\n                      ? \"left-section__menu-container__list-item__content left-section__menu-container__list-item__content--active\" \r\n                      : \"left-section__menu-container__list-item__content\" }\r\n          onClick={ handleClick }\r\n          href={ props.href }\r\n          title={ props.value }>{ props.value }</a>\r\n    </li>\r\n  )\r\n}","// IMPORTS\r\n\r\nimport { React, useState, useEffect } from 'react';\r\nimport './styles/center.css';\r\nimport { FaChevronCircleLeft, FaChevronCircleRight } from 'react-icons/fa';\r\n\r\n\r\n// COMPONENTS\r\n\r\nexport default function DateChanger(props) {\r\n  const initialDate = new Date();\r\n  const [currentDay, setCurrentDay] = useState(initialDate.getDate());\r\n  const [currentMonth, setCurrentMonth] = useState(initialDate.getMonth() + 1);\r\n  const [currentYear, setCurrentYear] = useState(initialDate.getFullYear());\r\n\r\n  const translateMonth = () => {\r\n    switch(currentMonth) {\r\n      case 1: return 'January';\r\n      case 2: return 'February';\r\n      case 3: return 'March';\r\n      case 4: return 'April';\r\n      case 5: return 'May';\r\n      case 6: return 'June';\r\n      case 7: return 'July';\r\n      case 8: return 'August';\r\n      case 9: return 'September';\r\n      case 10: return 'October';\r\n      case 11: return 'November';\r\n      case 12: return 'December';\r\n    }\r\n  }\r\n\r\n  const isLeapYear = () => {\r\n    if (((currentYear % 4 === 0) && (currentYear % 100 !== 0)) || currentYear % 400 === 0)\r\n       return true;\r\n    \r\n    else\r\n       return false;\r\n  }\r\n\r\n  const isDayLastInMonth = () => {\r\n    if ((currentDay === 29 && currentMonth === 2 && isLeapYear()) ||\r\n        (currentDay === 28 && currentMonth === 2 && !isLeapYear()) ||\r\n        (currentDay === 30 && ((currentMonth === 4) || \r\n                            (currentMonth === 6) || \r\n                            (currentMonth === 9) ||\r\n                            (currentMonth === 11))) ||\r\n        (currentDay === 31))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayLastInDecember = () => {\r\n    if ((currentDay === 31) && (currentMonth === 12))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const changeNextDay = () => {\r\n    if(isDayLastInMonth()) {\r\n\r\n      if(isDayLastInDecember()) {\r\n        setCurrentDay(1);\r\n        setCurrentMonth(1);\r\n        setCurrentYear(previousYear => previousYear + 1);\r\n      }\r\n\r\n      else {\r\n        setCurrentDay(1);\r\n        setCurrentMonth(previousMonth => previousMonth + 1);\r\n      }\r\n    }\r\n\r\n    else {\r\n      setCurrentDay(previousDay => previousDay + 1);\r\n    }\r\n  }\r\n\r\n  const handleNextButton = () => {\r\n    changeNextDay();\r\n  }\r\n\r\n\r\n\r\n  const isDayFirstInMonth = () => {\r\n    if(currentDay === 1)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayFirstInJanuary = () => {\r\n    if ((currentDay === 1) && (currentMonth === 1))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayFirstInMarch = () => {\r\n    if ((currentDay === 1) && (currentMonth === 3))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const isDayFirstIn30DayMonths = () => {\r\n    if ((currentDay === 1) && ((currentMonth === 4) || (currentMonth === 6) || (currentMonth === 8) || (currentMonth === 9) || (currentMonth === 11)))\r\n      return true;\r\n    \r\n    else\r\n      return false;\r\n  }\r\n\r\n  const changePreviousDay = () => {\r\n\r\n    if (isDayFirstInJanuary()) {\r\n      setCurrentDay(31);\r\n      setCurrentMonth(12);\r\n      setCurrentYear(previousYear => previousYear - 1);\r\n    }\r\n\r\n    else if (isDayFirstInMarch()) {\r\n      if(isLeapYear())\r\n        setCurrentDay(29);\r\n      else\r\n        setCurrentDay(28);\r\n      \r\n      setCurrentMonth(2);\r\n    }\r\n\r\n    else if (isDayFirstIn30DayMonths()) {\r\n      setCurrentDay(31);\r\n      setCurrentMonth(previousMonth => previousMonth - 1);\r\n    }\r\n\r\n    else if (isDayFirstInMonth()) {\r\n      setCurrentDay(30);\r\n      setCurrentMonth(previousMonth => previousMonth - 1);\r\n    }\r\n    \r\n    else {\r\n      setCurrentDay(previousDay => previousDay - 1);\r\n    }\r\n  }\r\n\r\n  const handlePreviousButton = () => {\r\n    changePreviousDay();\r\n  }\r\n\r\n\r\n  useEffect(() => { \r\n    props.changeDate({ currentDay, currentMonth, currentYear });\r\n\r\n  }, [currentDay, currentMonth, currentYear]);\r\n\r\n\r\n  return (\r\n    <div className=\"center-section__top__date-changer\">\r\n\r\n      <button \r\n        className=\"center-section__top__date-changer__previous-button\"\r\n        onClick={ handlePreviousButton }>\r\n        <FaChevronCircleLeft />\r\n      </button>\r\n\r\n      <h4 className=\"center-section__top__date-changer__current-date\">{ `${translateMonth()} ${currentDay}` }</h4>\r\n\r\n      <button \r\n        className=\"center-section__top__date-changer__next-button\"\r\n        onClick={ handleNextButton }>\r\n        <FaChevronCircleRight />\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport './styles/productAddingWindow.css';\r\n\r\nexport default function AddingForm(props) {\r\n  const initialOptionsStates = {\r\n    'list-saving': false\r\n  };\r\n\r\n  const [optionsStates, setOptionsStates] = useState(initialOptionsStates);\r\n  const [isFormCompleted, setIsFormCompleted] = useState(false);\r\n  const [isStateEqualToProps, setIsStateEqualToProps] = useState(true);\r\n\r\n\r\n  const handleClearButton = () => {\r\n    setOptionsStates(initialOptionsStates);\r\n    props.handleFormClearing();\r\n    setIsStateEqualToProps(true);\r\n  }\r\n\r\n  const handleCancelButton = () => {\r\n    props.handleAddWindow();\r\n  }\r\n\r\n  const checkIfStateIsEqualToProps = () => {\r\n\r\n    // CHECKING OPTIONS\r\n    Object.keys(optionsStates).forEach(option => {\r\n      setIsStateEqualToProps(true);\r\n      if (optionsStates[option] !== initialOptionsStates[option])\r\n        setIsStateEqualToProps(false);\r\n    });\r\n\r\n    // CHECKING INPUTS\r\n    Object.keys(props.data).forEach(key => {\r\n      if (props.data[key])\r\n        setIsStateEqualToProps(false);\r\n    });\r\n  }\r\n\r\n\r\n  // CHECKING IF FORM IS COMPLETED\r\n  useEffect(() => { \r\n    checkIfFormCompleted();\r\n    checkIfStateIsEqualToProps();\r\n  }, [props, optionsStates])\r\n\r\n  const checkIfFormCompleted = () => {\r\n    if (props.type === 'nutrition') {\r\n      const name = document.querySelector(\"#name\").value;\r\n      const weight = document.querySelector(\"#weight\").value;\r\n      const proteins = document.querySelector(\"#proteins\").value;\r\n      const fats = document.querySelector(\"#fats\").value;\r\n      const carbs = document.querySelector(\"#carbs\").value;\r\n      const kcal = document.querySelector(\"#kcal\").value;\r\n\r\n      if(name && weight && proteins && fats && carbs && kcal)\r\n        setIsFormCompleted(true);\r\n      else\r\n        setIsFormCompleted(false);\r\n    }\r\n\r\n    else {\r\n      const weight = document.querySelector(\"#weight\").value;\r\n      const reps = document.querySelector(\"#reps\").value;\r\n\r\n      if(weight && reps)\r\n        setIsFormCompleted(true);\r\n      else\r\n        setIsFormCompleted(false);\r\n    }\r\n  }\r\n\r\n  const searchForCheckedOptions = (keysArray) => {\r\n    let checkedOptions = [];\r\n    keysArray.forEach(key => {\r\n      if (optionsStates[key])\r\n        checkedOptions.push(key);\r\n    });\r\n\r\n    return checkedOptions;\r\n  }\r\n\r\n  const handleAddProduct = (e) => {\r\n    props.handleProductAdding(e);\r\n    \r\n    const keys = Object.keys(optionsStates);\r\n\r\n    const checkedOptions = searchForCheckedOptions(keys);\r\n\r\n    checkedOptions.forEach(checkedKey => {\r\n\r\n      switch(checkedKey) {\r\n        case 'list-saving': {\r\n\r\n          const newProduct = {\r\n            id:       Date.now(), \r\n            name:     document.querySelector(\"#name\").value, \r\n            weight:   Number(document.querySelector(\"#weight\").value), \r\n            proteins: Number(document.querySelector(\"#proteins\").value), \r\n            fats:     Number(document.querySelector(\"#fats\").value),\r\n            carbs:    Number(document.querySelector(\"#carbs\").value),\r\n            kcal:     Number(document.querySelector(\"#kcal\").value),\r\n          }\r\n\r\n          saveNewProductToList(newProduct);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleAddSerie = (e) => {\r\n    props.handleSerieAdding(e);\r\n\r\n  }\r\n\r\n  const saveNewProductToList = (newProduct) => {\r\n    const newList =  JSON.parse(localStorage.getItem(\"predefined\"));\r\n    newList.push(newProduct);\r\n    localStorage.setItem(\"predefined\", JSON.stringify(newList));\r\n  }\r\n\r\n  const handleCheckboxOnClick = (e) => {\r\n    setOptionsStates(prevOptions => { return {...prevOptions, [e.target.id]: !optionsStates[e.target.id]} });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { props.type !== 'nutrition' \r\n      ? <form className=\"adding-window__main__form\" onSubmit={ handleAddSerie }>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--product-info\">\r\n\r\n            <h3 className=\"adding-window__main__form__title\">Last time</h3>\r\n\r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"oldWeight\">Weight: </label>\r\n              <p \r\n                className=\"adding-window__main__form__line__input\" \r\n                id=\"oldWeight\">\r\n                { props.type === 'last-training' ? props.lastTimeData.training.weight : props.lastTimeData.serie.weight }\r\n              </p>\r\n              <span className=\"adding-window__main__form__line__decoration\">kg</span>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"oldReps\">Reps: </label>\r\n              <p \r\n                className=\"adding-window__main__form__line__input\" \r\n                id=\"oldReps\">\r\n                { props.type === 'last-training' ? props.lastTimeData.training.reps : props.lastTimeData.serie.reps }\r\n              </p>\r\n              <span className=\"adding-window__main__form__line__decoration\">reps</span>\r\n            </div>\r\n          \r\n          </section>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--nutrition-facts\">\r\n\r\n            <h3 className=\"adding-window__main__form__title\">New serie</h3>\r\n\r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"weight\">Weight: </label>\r\n              <input \r\n                className=\"adding-window__main__form__line__input\" \r\n                type=\"text\" \r\n                id=\"weight\"\r\n                value={ props.data.weight } \r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Weight\"\r\n                maxLength=\"3\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">kg</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"reps\">Reps: </label>\r\n              <input \r\n                className=\"adding-window__main__form__line__input\" \r\n                type=\"text\" \r\n                id=\"reps\"\r\n                value={ props.data.reps } \r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Reps\"\r\n                maxLength=\"2\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">reps</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'reps' ? props.warning[0] : null }</p>\r\n            </div>\r\n            \r\n          </section>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--buttons-section\">\r\n\r\n            <button \r\n              className={ isStateEqualToProps ? \"adding-window__main__form__tertiary adding-window__main__form__tertiary--disabled\" : \"adding-window__main__form__tertiary\" } \r\n              disabled={ isStateEqualToProps ? true : false }\r\n              type=\"button\" \r\n              onClick={ handleClearButton }>\r\n              Clear</button>\r\n\r\n            <div>\r\n              <button className=\"adding-window__main__form__secondary\" type=\"button\" onClick={ handleCancelButton }>Cancel</button>\r\n              <button \r\n                className={ isFormCompleted\r\n                            ? \"adding-window__main__form__primary\"\r\n                            : \"adding-window__main__form__primary adding-window__main__form__primary--disabled\" }\r\n                type=\"submit\"\r\n                disabled={ isFormCompleted ? false : true }>Add</button>\r\n            </div>\r\n\r\n          </section>\r\n\r\n        </form>\r\n\r\n      : <form className=\"adding-window__main__form\" onSubmit={ handleAddProduct }>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--product-info\">\r\n\r\n\r\n            <h3 className=\"adding-window__main__form__title\">Product info</h3>\r\n            \r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--long\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"name\">Product name: </label>\r\n              <input\r\n                className=\"adding-window__main__form__line__input\" \r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={ props.data.name }\r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Product name\"\r\n                maxLength=\"32\">\r\n              </input>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'name' ? props.warning[0] : null }</p>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--short\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"weight\">Product weight: </label>\r\n              <input \r\n                className=\"adding-window__main__form__line__input\"\r\n                type=\"text\"\r\n                id=\"weight\"\r\n                value={ props.data.weight } \r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Weight\"\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'weight' ? props.warning[0] : null }</p>\r\n            </div>\r\n\r\n\r\n          </section>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--nutrition-facts\">\r\n            \r\n\r\n            <h3 className=\"adding-window__main__form__title\">Nutrition facts</h3>\r\n            \r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"proteins\">Proteins: </label>\r\n              <input \r\n                className=\"adding-window__main__form__line__input\" \r\n                type=\"text\" \r\n                id=\"proteins\"\r\n                value={ props.data.proteins } \r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Proteins\"\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'proteins' ? props.warning[0] : null }</p>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"fats\">Fats: </label>\r\n              <input\r\n                className=\"adding-window__main__form__line__input\"  \r\n                type=\"text\" \r\n                id=\"fats\"\r\n                value={ props.data.fats } \r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Fats\"\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'fats' ? props.warning[0] : null }</p>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"carbs\">Carbs: </label>\r\n              <input\r\n                className=\"adding-window__main__form__line__input\"  \r\n                type=\"text\" \r\n                id=\"carbs\"\r\n                value={ props.data.carbs } \r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Carbohydrates\"\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'carbs' ? props.warning[0] : null }</p>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"kcal\">Calories: </label>\r\n              <input\r\n                className=\"adding-window__main__form__line__input\"  \r\n                type=\"text\" \r\n                id=\"kcal\"\r\n                value={ props.data.kcal }\r\n                onChange={ props.handleOnChange }\r\n                placeholder=\"Calories\"\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">kcal</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ props.warning[1] === 'kcal' ? props.warning[0] : null }</p>\r\n            </div>\r\n\r\n\r\n          </section>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--options\">\r\n\r\n            <h3 className=\"adding-window__main__form__title\">Options</h3>\r\n\r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label adding-window__main__form__line__label--options\" htmlFor=\"list-saving\">Save to list</label>\r\n              <button \r\n                className=\"adding-window__main__form__background\"\r\n                id=\"list-saving\"\r\n                type=\"button\"\r\n                onClick={ handleCheckboxOnClick }>\r\n                <div \r\n                  className=\"adding-window__main__form__background__checked\" \r\n                  id=\"list-saving\"\r\n                  style={ optionsStates['list-saving'] ? {backgroundColor: \"#7500AF\"} : {backgroundColor: \"transparent\"} }>\r\n                </div>\r\n              </button>\r\n            </div>\r\n\r\n          </section>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--buttons-section\">\r\n\r\n            <button \r\n              className={ isStateEqualToProps ? \"adding-window__main__form__tertiary adding-window__main__form__tertiary--disabled\" : \"adding-window__main__form__tertiary\" } \r\n              disabled={ isStateEqualToProps ? true : false }\r\n              type=\"button\" \r\n              onClick={ handleClearButton }>\r\n              Clear</button>\r\n\r\n            <div>\r\n              <button className=\"adding-window__main__form__secondary\" type=\"button\" onClick={ handleCancelButton }>Cancel</button>\r\n              <button \r\n                className={ isFormCompleted\r\n                            ? \"adding-window__main__form__primary\"\r\n                            : \"adding-window__main__form__primary adding-window__main__form__primary--disabled\" }\r\n                type=\"submit\"\r\n                disabled={ isFormCompleted ? false : true }>Add</button>\r\n            </div>\r\n\r\n          </section>\r\n\r\n        </form>\r\n    }\r\n    </>\r\n  )\r\n}","import { React, useReducer, useEffect, useState } from 'react';\r\nimport './styles/productAddingWindow.css';\r\nimport { warnings } from '../meal/Meal';\r\n\r\nconst ACTIONS = {\r\n  UPDATE_PRODUCT_DATA: 'update-product-data',\r\n  RESET_FORM: 'reset-form',\r\n  SET_WARNING: 'set-warning',\r\n  CLEAR_WARNING: 'clear-warning'\r\n}\r\n\r\nexport default function EditForm(props) {\r\n  const [isFormCompleted, setIsFormCompleted] = useState(false);\r\n  const [isStateEqualToProps, setIsStateEqualToProps] = useState(true);\r\n\r\n  const initialState = {\r\n    productData: {\r\n      id: props.data.id,\r\n      name: props.data.name,\r\n      weight: props.data.weight,\r\n      proteins: props.data.proteins,\r\n      fats: props.data.fats,\r\n      carbs: props.data.carbs,\r\n      kcal: props.data.kcal\r\n    },\r\n    warning: ['' ,'']\r\n  } \r\n    \r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n      case ACTIONS.UPDATE_PRODUCT_DATA: {\r\n        switch (action.payload.key) {\r\n          case 'name':     { return { ...state, productData: {...state.productData, name:     action.payload.value } }};\r\n          case 'weight':   { return { ...state, productData: {...state.productData, weight:   action.payload.value } }};\r\n          case 'proteins': { return { ...state, productData: {...state.productData, proteins: action.payload.value } }};\r\n          case 'fats':     { return { ...state, productData: {...state.productData, fats:     action.payload.value } }};\r\n          case 'carbs':    { return { ...state, productData: {...state.productData, carbs:    action.payload.value } }};\r\n          case 'kcal':     { return { ...state, productData: {...state.productData, kcal:     action.payload.value } }};\r\n          default:         { return console.error(`Unknown action type: ${action.type}`) };\r\n        }\r\n      }\r\n\r\n      case ACTIONS.RESET_FORM: {\r\n        return {...state, productData: \r\n          { id: props.data.id,\r\n            name: props.data.name,\r\n            weight: props.data.weight,\r\n            proteins: props.data.proteins,\r\n            fats: props.data.fats,\r\n            carbs: props.data.carbs,\r\n            kcal: props.data.kcal \r\n        }};\r\n      }\r\n\r\n      case ACTIONS.SET_WARNING: {\r\n        if (action.payload === 'name')\r\n          return { ...state, warning: [warnings.name, action.payload] }\r\n        else \r\n          return { ...state, warning: [warnings.weight, action.payload] }\r\n      }\r\n\r\n      case ACTIONS.CLEAR_WARNING: {\r\n        return { ...state, warning: ['', action.payload] }\r\n      }\r\n\r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    // CHECKING IF FORM IS COMPLETED\r\n  useEffect(() => { \r\n    checkIfFormCompleted();\r\n    checkIfStateIsEqualToProps();\r\n    \r\n  }, [state.productData])\r\n\r\n  const checkIfFormCompleted = () => {\r\n    const name = document.querySelector(\"#name\").value;\r\n    const weight = document.querySelector(\"#weight\").value;\r\n\r\n    if(name && weight)\r\n      setIsFormCompleted(true);\r\n    else\r\n      setIsFormCompleted(false);\r\n  }\r\n\r\n  const handleResetingForm = (e) => {\r\n    e.preventDefault();\r\n    dispatch({ type: ACTIONS.RESET_FORM });\r\n    dispatch({ type: ACTIONS.CLEAR_WARNING });\r\n    setIsStateEqualToProps(true);\r\n  }\r\n\r\n  const checkIfStateIsEqualToProps = () => {\r\n    Object.keys(props.data).forEach(key => {\r\n      if (props.data[key] !== state.productData[key])\r\n        setIsStateEqualToProps(false); \r\n      });\r\n  }\r\n\r\n  const handleCancelButton = () => {\r\n    const idOfSelectedProduct = props.data.id;\r\n\r\n    // IF USER CANCEL EDITING, PRODUCT HAS TO BE UNSELECTED\r\n    props.handleEditingWindow(idOfSelectedProduct);\r\n  }\r\n\r\n  const calculateNutritionFacts = (e) => {\r\n    const isNumber = /[0-9]/;\r\n    const isZero = /^[0]{1}/;\r\n\r\n    const nutritionPerOneGram = {\r\n      proteins: Number(props.data.proteins) / Number(props.data.weight),\r\n      fats: Number(props.data.fats) / Number(props.data.weight),\r\n      carbs: Number(props.data.carbs) / Number(props.data.weight),\r\n      kcal: Number(props.data.kcal) / Number(props.data.weight)\r\n    };\r\n\r\n    const setValueAsNull = () => {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'weight', value: '' }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'proteins', value: 0 }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'fats', value: 0 }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'carbs', value: 0 }});\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'kcal', value: 0 }});\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: 'weight' });\r\n    }\r\n\r\n    const setValueAsCorrect = () => {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'weight', value: Number(e.target.value) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'proteins', value: Math.round( e.target.value * nutritionPerOneGram.proteins) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'fats', value: Math.round( e.target.value * nutritionPerOneGram.fats) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'carbs', value: Math.round( e.target.value * nutritionPerOneGram.carbs) } });\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'kcal', value: Math.round( e.target.value * nutritionPerOneGram.kcal) } });\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: 'weight' });\r\n    }\r\n\r\n    if (isNumber.test(e.target.value[e.target.value.length - 1])) {\r\n      isZero.test(e.target.value)\r\n      ? setValueAsNull()\r\n      : setValueAsCorrect();\r\n    }\r\n\r\n    else {\r\n      setValueAsNull();\r\n    }\r\n  }\r\n\r\n  const handleNameChanging = (e) => {\r\n    const isWord = /[a-z\\s]/i;\r\n    e.preventDefault();\r\n    if (isWord.test(e.target.value[e.target.value.length - 1])) {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'name', value: e.target.value }})\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: 'name'});\r\n    }\r\n    else {\r\n      dispatch({ type: ACTIONS.UPDATE_PRODUCT_DATA, payload: { key: 'name', value: \"\" }});\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: 'name'});\r\n    }\r\n  }\r\n\r\n  const handleSavingChanges = (e) => {\r\n    e.preventDefault();\r\n    props.handleProductEditing(state.productData);\r\n  }\r\n\r\n  return (\r\n    <section className=\"adding-window__edit\">\r\n\r\n      <h1 className=\"adding-window__title adding-window__title--edit\">Edit product</h1>\r\n\r\n      <main className=\"adding-window__main\">\r\n\r\n        <form className=\"adding-window__main__form adding-window__main__form--edit\"  onSubmit={ handleSavingChanges }>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--product-info\">\r\n\r\n\r\n            <h3 className=\"adding-window__main__form__title\">Product info</h3>\r\n            \r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--long\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"name\">Product name: </label>\r\n              <input\r\n                className=\"adding-window__main__form__line__input\" \r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={ state.productData.name } \r\n                onChange={ handleNameChanging }\r\n                placeholder=\"Product name\"\r\n                maxLength=\"32\">\r\n              </input>\r\n              <p className=\"adding-window__main__form__line__warning\">{ state.warning[1] === 'name' ? state.warning[0] : null }</p>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--short\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"weight\">Product weight: </label>\r\n              <input \r\n                className=\"adding-window__main__form__line__input\" \r\n                type=\"text\" \r\n                id=\"weight\"\r\n                value={ state.productData.weight } \r\n                onChange={ calculateNutritionFacts }\r\n                placeholder=\"Weight\"\r\n                maxLength=\"4\">\r\n              </input>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n              <p className=\"adding-window__main__form__line__warning\">{ state.warning[1] === 'weight' ? state.warning[0] : null }</p>\r\n            </div>\r\n\r\n\r\n          </section>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--nutrition-facts\">\r\n            \r\n\r\n            <h3 className=\"adding-window__main__form__title\">Nutrition facts</h3>\r\n            \r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"proteins\">Proteins: </label>\r\n              <p \r\n                className=\"adding-window__main__form__line__input\" \r\n                id=\"proteins\">\r\n                { state.productData.proteins }\r\n              </p>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"fats\">Fats: </label>\r\n              <p \r\n                className=\"adding-window__main__form__line__input\" \r\n                id=\"fats\">\r\n                { state.productData.fats }\r\n              </p>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"carbs\">Carbs: </label>\r\n              <p \r\n                className=\"adding-window__main__form__line__input\" \r\n                id=\"carbs\">\r\n                { state.productData.carbs }\r\n              </p>\r\n              <span className=\"adding-window__main__form__line__decoration\">g</span>\r\n            </div>\r\n\r\n            <div className=\"adding-window__main__form__line adding-window__main__form__line--normal\">\r\n              <label className=\"adding-window__main__form__line__label\" htmlFor=\"kcal\">Calories: </label>\r\n              <p \r\n                className=\"adding-window__main__form__line__input\" \r\n                id=\"kcal\">\r\n                { state.productData.kcal }\r\n              </p>\r\n              <span className=\"adding-window__main__form__line__decoration\">kcal</span>\r\n            </div>\r\n\r\n\r\n          </section>\r\n\r\n          <section className=\"adding-window__main__form adding-window__main__form--buttons-section\">\r\n\r\n\r\n            <button \r\n              className={ isStateEqualToProps ? \"adding-window__main__form__tertiary adding-window__main__form__tertiary--disabled\" : \"adding-window__main__form__tertiary\" } \r\n              disabled={ isStateEqualToProps ? true : false } \r\n              type=\"button\" \r\n              onClick={ handleResetingForm }>\r\n              Reset</button>\r\n            \r\n            <div className=\"adding-window__main__form__right\">\r\n              <button className=\"adding-window__main__form__secondary\" type=\"button\" onClick={ handleCancelButton }>Cancel</button>\r\n              <button \r\n                className={ isFormCompleted\r\n                            ? \"adding-window__main__form__primary\"\r\n                            : \"adding-window__main__form__primary adding-window__main__form__primary--disabled\"\r\n                            } \r\n                type=\"submit\"\r\n                disabled={ isFormCompleted ? false : true }>\r\n                Save</button>\r\n            </div>\r\n\r\n\r\n          </section>\r\n\r\n          </form>\r\n\r\n      </main>\r\n\r\n    </section>\r\n  )\r\n}","import { React, useReducer, useEffect } from 'react';\r\nimport EditForm from './EditForm';\r\nimport './styles/productAddingWindow.css';\r\n\r\nconst ACTIONS = {\r\n  SET_PRODUCT_SEND_FOR_EDIT: \"set-product-send-for-edit\",\r\n  NEGATE_EDIT_WINDOW_STATE: \"negate-edit-window-state\",\r\n  UPDATE_SAVED_PRODUCTS_LIST: \"update-saved-products-list\",\r\n  LOAD_PREDEFINED_PRODUCTS_LIST_FROM_LOCAL_STORAGE: 'load-predefined-products-list-from-local-storage',\r\n  SET_IS_ADD_BUTTON_DISABLED: 'set-is-add-button-disabled'\r\n}\r\n\r\nconst initialState = {\r\n  savedProductList: [\r\n    { id: 0, name: \"Cottage cheese\", weight: 100, proteins: 20, fats: 10, carbs: 15, kcal: 250 },\r\n    { id: 1, name: \"Skyr\", weight: 100, proteins: 20, fats: 0, carbs: 12, kcal: 100 },\r\n    { id: 2, name: \"Potatos\", weight: 100, proteins: 9, fats: 2, carbs: 80, kcal: 126 },\r\n    { id: 3, name: \"Coca Cola\", weight: 100, proteins: 0, fats: 0, carbs: 100, kcal: 400 },\r\n    { id: 4, name: \"Banana\", weight: 100, proteins: 5, fats: 3, carbs: 52, kcal: 173 }],\r\n  \r\n  productSendForEdit: { id: 0, name: '', weight: 0, proteins: 0, fats: 0, carbs: 0, kcal: 0 },\r\n  isEditWindowOpened: false,\r\n  isAddButtonDisabled: false\r\n}\r\n\r\nexport default function AddingList(props) {\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n      case ACTIONS.LOAD_PREDEFINED_PRODUCTS_LIST_FROM_LOCAL_STORAGE: {\r\n        return {...state, savedProductList: action.payload}\r\n      }\r\n\r\n      case ACTIONS.NEGATE_EDIT_WINDOW_STATE: {\r\n        return { ...state, isEditWindowOpened: !state.isEditWindowOpened };\r\n      }\r\n\r\n      case ACTIONS.SET_PRODUCT_SEND_FOR_EDIT: {\r\n        return {...state, productSendForEdit: {\r\n                          id: action.payload.id,\r\n                          name: action.payload.name,\r\n                          weight: action.payload.weight,\r\n                          proteins: action.payload.proteins,\r\n                          fats: action.payload.fats,\r\n                          carbs: action.payload.carbs,\r\n                          kcal: action.payload.kcal }\r\n        };\r\n      }\r\n\r\n      case ACTIONS.UPDATE_SAVED_PRODUCTS_LIST: {\r\n        const newSavedProductList = state.savedProductList;\r\n        newSavedProductList[action.payload.index] = action.payload.newProduct;\r\n        return {...state, savedProductList: newSavedProductList};\r\n      }\r\n\r\n      case ACTIONS.SET_IS_ADD_BUTTON_DISABLED: {\r\n        return {...state, isAddButtonDisabled: action.payload};\r\n      }\r\n\r\n\r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // EFFECT WHICH LOAD / CREATE PREDEFINED PRODUCTS LIST FROM / TO LOCAL STORAGE\r\n  useEffect(() => { \r\n    let predefinedProductsList = [];\r\n\r\n    if (Object.keys(localStorage).includes('predefined')) {\r\n      predefinedProductsList = JSON.parse(localStorage.getItem(\"predefined\"));\r\n      dispatch({ type: ACTIONS.LOAD_PREDEFINED_PRODUCTS_LIST_FROM_LOCAL_STORAGE, payload: predefinedProductsList });\r\n    }\r\n    else {\r\n      predefinedProductsList = state.savedProductList;\r\n      localStorage.setItem(\"predefined\", JSON.stringify(predefinedProductsList)); \r\n    }\r\n\r\n   }, []);\r\n\r\n  useEffect(() => { handleAddButtonDisabling() }, [])\r\n\r\n  useEffect(() => {\r\n    const addingWindow = document.querySelector(\".adding-window\");\r\n\r\n    state.isEditWindowOpened\r\n    ? addingWindow.style.boxShadow = \"none\"\r\n    : addingWindow.style.boxShadow = \"1px 1px 5px #707070\";\r\n\r\n  }, [state.isEditWindowOpened]);\r\n   \r\n  const handleSelected = (e) => {\r\n    const product = document.getElementById(e.currentTarget.id);\r\n    if (e.currentTarget.id) {\r\n      const productName = product.querySelector(\".adding-window__main__adding-list__item__name\");\r\n\r\n      // \"UNSELECTING\"\r\n      if (productName.style.fontWeight === \"bold\") {\r\n        product.style.background = \"#ffffff\";\r\n        productName.style.fontWeight = \"normal\";\r\n        handleAddButtonDisabling();\r\n      }\r\n\r\n      // \"SELECTING\"\r\n      else {\r\n        product.style.background = \"#7500AF30\";\r\n        productName.style.fontWeight = \"bold\";\r\n        updateProductSendForEdit(state.savedProductList[getIndexOfProduct(e.currentTarget.id)]);\r\n        handleEditingWindow();\r\n      }\r\n    }\r\n  }\r\n\r\n  const updateProductSendForEdit = (selectedProduct) => {\r\n    dispatch({ type: ACTIONS.SET_PRODUCT_SEND_FOR_EDIT, payload: selectedProduct });\r\n  }\r\n\r\n  const handleProductEditing = (editedProduct) => {\r\n    const indexOfEditedProduct = getIndexOfProduct(editedProduct.id);\r\n    dispatch({ type: ACTIONS.UPDATE_SAVED_PRODUCTS_LIST, payload: { index: indexOfEditedProduct, newProduct: editedProduct }})\r\n    \r\n    // SAVING CHANGES TO LOCAL STORAGE\r\n    const predefinedProductsList = state.savedProductList;\r\n    localStorage.setItem(\"predefined\", JSON.stringify(predefinedProductsList));\r\n    \r\n    handleEditingWindow();\r\n  }\r\n\r\n  const handleEditingWindow = (idOfSelectedProduct = false) => {\r\n    \r\n    // UNSELECTING PRODUCT AFTER EDIT CANCELED\r\n    if (Number.isInteger(idOfSelectedProduct)) {\r\n      const product = document.getElementById(idOfSelectedProduct);\r\n      const productName = product.querySelector(\".adding-window__main__adding-list__item__name\");\r\n      product.style.background = \"#ffffff\";\r\n      productName.style.fontWeight = \"normal\";\r\n    }\r\n    \r\n    dispatch({ type: ACTIONS.NEGATE_EDIT_WINDOW_STATE });\r\n    handleAddButtonDisabling();\r\n  }\r\n\r\n  const handleAddButtonDisabling = () => {\r\n    const products = document.querySelectorAll(\".adding-window__main__adding-list__item\");\r\n    let returnedBoolean = false;\r\n   \r\n    for (let i = 0; i < products.length; i++) {\r\n      const name = products[i].querySelector(\".adding-window__main__adding-list__item__name\");\r\n      if (name.style.fontWeight === \"bold\") {\r\n        returnedBoolean = false;\r\n        break;\r\n      }\r\n\r\n      else\r\n        returnedBoolean = true;\r\n    }\r\n\r\n    dispatch({type: ACTIONS.SET_IS_ADD_BUTTON_DISABLED, payload: returnedBoolean});\r\n  }\r\n\r\n  const handleProductsAdding = () => {\r\n    const selectedProducts = [];\r\n    const products = document.querySelectorAll(\".adding-window__main__adding-list__item\");\r\n\r\n    products.forEach((product, index) => {\r\n      const name = product.querySelector(\".adding-window__main__adding-list__item__name\");\r\n      if (name.style.fontWeight === \"bold\")\r\n        selectedProducts.push(\r\n          { \r\n            name:     state.savedProductList[index - 1].name,\r\n            weight:   state.savedProductList[index - 1].weight, \r\n            proteins: state.savedProductList[index - 1].proteins, \r\n            fats:     state.savedProductList[index - 1].fats, \r\n            carbs:    state.savedProductList[index - 1].carbs, \r\n            kcal:     state.savedProductList[index - 1].kcal \r\n          }\r\n        );\r\n    });\r\n\r\n    if (selectedProducts.length !== 0)\r\n      props.handlePredefinedProductsAdding(selectedProducts);\r\n  }\r\n\r\n  const getIndexOfProduct = (targetId) => {\r\n    const productList = state.savedProductList;\r\n    let returnedIndex = 0;\r\n\r\n    productList.forEach((product, index) => {\r\n      if (product.id === Number(targetId))\r\n        returnedIndex = index;\r\n    });\r\n    return returnedIndex;\r\n  }\r\n\r\n  return (\r\n    <> \r\n      <ul className=\"adding-window__main__adding-list adding-window__main__adding-list--heading\">\r\n        <li className=\"adding-window__main__adding-list__item adding-window__main__adding-list__item--heading\">\r\n        <div className=\"adding-window__main__adding-list__wrapper\">\r\n            <span className=\"adding-window__main__adding-list__item__name\" style={{ color: \"white\" }}>Product name</span>\r\n            <span className=\"adding-window__main__adding-list__item__nutrition-facts\">\r\n              <p className=\"adding-window__main__adding-list__item__nutrition-facts__proteins\" title=\"Proteins\">P</p>\r\n              <p className=\"adding-window__main__adding-list__item__nutrition-facts__fats\" title=\"Fats\">F</p>\r\n              <p className=\"adding-window__main__adding-list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">C</p>\r\n            </span>\r\n            <span className=\"adding-window__main__adding-list__item__calories\">Calories</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"adding-window__main__adding-list\">\r\n\r\n        { state.savedProductList.map(product => {\r\n          return (\r\n            <li id={ product.id } key={ product.id } className=\"adding-window__main__adding-list__item\" onClick={ handleSelected }>\r\n              <div className=\"adding-window__main__adding-list__wrapper\">\r\n                <span id={ product.id } className=\"adding-window__main__adding-list__item__name\">{ product.name }</span>\r\n                <span id={ product.id } className=\"adding-window__main__adding-list__item__nutrition-facts\">\r\n                  <p id={ product.id } className=\"adding-window__main__adding-list__item__nutrition-facts__proteins\" title=\"Proteins\">{ product.proteins } g</p>\r\n                  <p id={ product.id } className=\"adding-window__main__adding-list__item__nutrition-facts__fats\" title=\"Fats\">{ product.fats } g</p>\r\n                  <p id={ product.id } className=\"adding-window__main__adding-list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">{ product.carbs } g</p>\r\n                </span>\r\n                <span id={ product.id } className=\"adding-window__main__adding-list__item__calories\">{ product.kcal } kcal</span>\r\n              \r\n              </div>\r\n              <span id={ product.id } className=\"adding-window__main__adding-list__item__weight\">{ product.weight } g</span>\r\n            </li>\r\n          )\r\n        })\r\n        }\r\n\r\n      </ul>\r\n      \r\n      <section className=\"adding-window__main__adding-list__buttons-section\">\r\n        <button \r\n          className=\"adding-window__main__adding-list__buttons-section__secondary\" \r\n          onClick={ props.handleAddWindow }>\r\n          Cancel\r\n        </button>\r\n        \r\n        <button \r\n          className={ state.isAddButtonDisabled\r\n                      ? \"adding-window__main__adding-list__buttons-section__primary adding-window__main__adding-list__buttons-section__primary--disabled\" \r\n                      : \"adding-window__main__adding-list__buttons-section__primary\"  } \r\n          onClick={ handleProductsAdding }>\r\n          Add\r\n        </button>\r\n      </section>\r\n\r\n      { state.isEditWindowOpened \r\n        ? <EditForm \r\n          data={{\r\n            id: state.productSendForEdit.id,\r\n            name: state.productSendForEdit.name,\r\n            weight: state.productSendForEdit.weight,\r\n            proteins: state.productSendForEdit.proteins,\r\n            fats: state.productSendForEdit.fats,\r\n            carbs: state.productSendForEdit.carbs,\r\n            kcal: state.productSendForEdit.kcal\r\n          }}\r\n          warning={ props.warning }\r\n          handleProductEditing={ handleProductEditing }\r\n          handleEditingWindow={ handleEditingWindow }\r\n          />\r\n\r\n        :  null }\r\n    </>\r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport AddingForm from './AddingForm';\r\nimport AddingList from './AddingList';\r\nimport './styles/productAddingWindow.css';\r\n\r\nexport default function AddWindow(props) {\r\n  const [isAddingTypeSetAtLeftOption, setAddingType] = useState(true);\r\n\r\n  // ENABLE POINTER EVENTS IN ADDING WINDOW AFTER MOUNTING\r\n  useEffect(() => { \r\n    const addingWindow = document.querySelector(\".adding-window\");\r\n    addingWindow.style.pointerEvents = \"auto\";\r\n    \r\n  }, []);\r\n\r\n  // CLEARING FORM AFTER EACH CHANGE OF SWITCH OPTION\r\n  useEffect(() => {\r\n    props.handleFormClearing();\r\n  },[isAddingTypeSetAtLeftOption]);\r\n\r\n  const changeAddingType = () => {\r\n    setAddingType(!isAddingTypeSetAtLeftOption);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"adding-window__background-blur\"></div>\r\n\r\n      <section className=\"adding-window\">\r\n\r\n        <h1 className=\"adding-window__title\">{ props.type === 'exercises' ? \"Add serie\" : \"Add product\" }</h1>\r\n\r\n        <button className=\"adding-window__switch\" onClick={ changeAddingType }>\r\n            <h3 \r\n              className={ isAddingTypeSetAtLeftOption \r\n                          ? \"adding-window__switch__left adding-window__switch__left--selected\"\r\n                          : \"adding-window__switch__left\" }>\r\n              { props.type === 'exercises' ? \"Last training\" : \"From list\" }\r\n            </h3>\r\n            <h3 \r\n              className={ isAddingTypeSetAtLeftOption \r\n                          ? \"adding-window__switch__right\"\r\n                          : \"adding-window__switch__right adding-window__switch__right--selected\" }>\r\n              { props.type === 'exercises' ? \"Last serie\" : \"Your own\" }\r\n            </h3>\r\n          </button>\r\n\r\n        { props.type === 'exercises'\r\n\r\n          ? <main className=\"adding-window__main\">\r\n            { isAddingTypeSetAtLeftOption\r\n\r\n              ? <AddingForm \r\n                  type=\"last-training\"\r\n                  data={{ \r\n                    weight: props.data.weight,\r\n                    reps: props.data.reps\r\n                  }}\r\n                  warning={ props.warning }\r\n                  handleOnChange={ props.handleOnChange }\r\n                  handleSerieAdding={ props.handleSerieAdding }\r\n                  handleFormClearing={ props.handleFormClearing }\r\n                  handleAddWindow={ props.handleAddWindow }\r\n                  lastTimeData={ props.lastTimeData }\r\n                />\r\n\r\n              : <AddingForm \r\n                  type=\"last-serie\"\r\n                  data={{ \r\n                    weight: props.data.weight,\r\n                    reps: props.data.reps\r\n                  }}\r\n                  warning={ props.warning }\r\n                  handleOnChange={ props.handleOnChange }\r\n                  handleSerieAdding={ props.handleSerieAdding }\r\n                  handleFormClearing={ props.handleFormClearing }\r\n                  handleAddWindow={ props.handleAddWindow }\r\n                  lastTimeData={ props.lastTimeData }\r\n                />\r\n            }\r\n          </main>\r\n\r\n          : <main className=\"adding-window__main\">\r\n            { isAddingTypeSetAtLeftOption\r\n\r\n              ? <AddingList \r\n                  warning={ props.warning }\r\n                  handleAddWindow={ props.handleAddWindow }\r\n                  handlePredefinedProductsAdding={ props.handlePredefinedProductsAdding }\r\n                />\r\n                \r\n              : <AddingForm\r\n                  type=\"nutrition\"\r\n                  data={{ \r\n                    isPlaceholderEnabled: props.data.isPlaceholderEnabled,\r\n                    name: props.data.name, \r\n                    weight: props.data.weight,\r\n                    proteins: props.data.proteins,\r\n                    fats: props.data.fats,\r\n                    carbs: props.data.carbs,\r\n                    kcal: props.data.kcal }}\r\n                  warning={ props.warning }\r\n                  handleOnChange={ props.handleOnChange }\r\n                  handleFormClearing={ props.handleFormClearing }\r\n                  handleProductAdding={ props.handleProductAdding }\r\n                  handleAddWindow={ props.handleAddWindow }\r\n                />\r\n            }\r\n          </main>\r\n\r\n        }\r\n\r\n      </section>\r\n\r\n    </>\r\n  )\r\n}","import { React, useState, useEffect } from 'react';\r\nimport './styles/productRemovingWindow.css';\r\n \r\nexport default function RemoveWindow(props) {\r\n  const [isRemovingAllButtonPressed, setRemovingAllButtonPressed] = useState(false);\r\n  const [isRemoveButtonDisabled, setIsRemoveButtonDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const removingWindow = document.querySelector(\".removing-window\");\r\n\r\n    if (isRemovingAllButtonPressed) {\r\n      removingWindow.style.filter = \"blur(4px)\";\r\n      removingWindow.style.pointerEvents = \"none\";\r\n    }\r\n    else {\r\n      removingWindow.style.filter = \"none\";\r\n      removingWindow.style.pointerEvents = \"auto\";\r\n    }\r\n  }, [isRemovingAllButtonPressed]);\r\n\r\n\r\n  // ENABLE POINTER EVENTS IN WINDOW AFTER MOUNTING\r\n  useEffect(() => { \r\n    const removingWindow = document.querySelector(\".removing-window\");\r\n    removingWindow.style.pointerEvents = \"auto\";\r\n\r\n   }, []);\r\n\r\n  // ENABLE POINTER EVENTS IN CONFIRM WINDOW AFTER MOUNTING \r\n  useEffect(() => {\r\n    if (isRemovingAllButtonPressed) {\r\n      const confirmWindow = document.querySelector(\".removing-window__confirm\");\r\n      confirmWindow.style.pointerEvents = \"auto\";\r\n    }\r\n\r\n  },[isRemovingAllButtonPressed]);\r\n\r\n  useEffect(() => { handleRemoveButtonDisabling() }, [])\r\n\r\n  const handleSelected = (e) => {\r\n    const item = document.getElementById(e.currentTarget.id);\r\n    \r\n    if(e.currentTarget.id) {\r\n      const itemName = item.querySelector(\".removing-window__main__list__item__name\");\r\n\r\n      // \"UNSELECTING\"\r\n      if (itemName.style.fontWeight === \"bold\") {\r\n        item.style.background = \"#ffffff\";\r\n        itemName.style.fontWeight = \"normal\";\r\n      }\r\n\r\n      // \"SELECTING\"\r\n      else {\r\n        item.style.background = \"#7500AF30\";\r\n        itemName.style.fontWeight = \"bold\";\r\n      }\r\n\r\n      handleRemoveButtonDisabling();\r\n    }\r\n  }\r\n\r\n  const handleRemoveButton = () => {\r\n    const selectedIds = [];\r\n    const items = document.querySelectorAll(\".removing-window__main__list__item\");\r\n\r\n    items.forEach(item => {\r\n      const name = item.querySelector(\".removing-window__main__list__item__name\")\r\n      if(name.style.fontWeight === \"bold\")\r\n        selectedIds.push(Number(item.id));\r\n    });\r\n\r\n    if (selectedIds.length !== 0)\r\n      props.handleRemoving(selectedIds);\r\n  }\r\n\r\n  const handleRemoveButtonDisabling = () => {\r\n    const items = document.querySelectorAll(\".removing-window__main__list__item\");\r\n    let returnedBoolean = false;\r\n   \r\n    for (let i = 0; i < items.length; i++) {\r\n      const name = items[i].querySelector(\".removing-window__main__list__item__name\");\r\n      if (name.style.fontWeight === \"bold\") {\r\n        returnedBoolean = false;\r\n        break;\r\n      }\r\n\r\n      else\r\n        returnedBoolean = true;\r\n    }\r\n\r\n    setIsRemoveButtonDisabled(returnedBoolean);\r\n  }\r\n\r\n  const handleRemovingAllButton = () => {\r\n    setRemovingAllButtonPressed(true);\r\n  }\r\n\r\n  const handleRemovingAllCancel = () => {\r\n    setRemovingAllButtonPressed(false);\r\n  }\r\n\r\n  const handleRemovingAllConfirm = () => {\r\n    const selectedIds = [];\r\n    const items = document.querySelectorAll(\".removing-window__main__list__item\");\r\n\r\n    items.forEach(item => {\r\n      selectedIds.push(Number(item.id))\r\n    });\r\n\r\n    props.handleRemoving(selectedIds);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <section className=\"removing-window\">\r\n\r\n        <h1 className=\"removing-window__title\">{ props.type === 'exercises' ? \"Remove serie\" : \"Remove product\" }</h1>\r\n\r\n        <main className=\"removing-window__main\">\r\n\r\n          <ul className=\"removing-window__main__list removing-window__main__list--heading\">\r\n            <li className=\"removing-window__main__list__item removing-window__main__list__item--heading\">\r\n                { props.type === 'exercises'\r\n                  ? <div className=\"removing-window__main__list__wrapper\">\r\n                      <span className=\"removing-window__main__list__item__name removing-window__main__list__item__name--exercises\" style={{color: \"white\"}}>Serie</span>\r\n                      <span className=\"removing-window__main__list__item__nutrition-facts\">\r\n                        <p className=\"removing-window__main__list__item__nutrition-facts__proteins\">Weight</p>\r\n                      </span>\r\n                      <span className=\"removing-window__main__list__item__calories\">Repetitions</span>\r\n                    </div>\r\n\r\n                  : <div className=\"removing-window__main__list__wrapper\">\r\n                      <span className=\"removing-window__main__list__item__name\" style={{color: \"white\"}}>Product name</span>\r\n                      <span className=\"removing-window__main__list__item__nutrition-facts\">\r\n                        <p className=\"removing-window__main__list__item__nutrition-facts__proteins\" title=\"Proteins\">P</p>\r\n                        <p className=\"removing-window__main__list__item__nutrition-facts__fats\" title=\"Fats\">F</p>\r\n                        <p className=\"removing-window__main__list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">C</p>\r\n                      </span>\r\n                      <span className=\"removing-window__main__list__item__calories\">Calories</span>\r\n                    </div> \r\n                }\r\n            </li>\r\n          </ul>\r\n\r\n          <ul className=\"removing-window__main__list\">\r\n\r\n            { props.list.map(item => {\r\n              return (\r\n                props.type === 'exercises'\r\n\r\n                ? <li onClick={ handleSelected } id={ item.id } key={ item.id } className=\"removing-window__main__list__item\">\r\n                    <div className=\"removing-window__main__list__wrapper\">\r\n                      <span id={ item.id } className=\"removing-window__main__list__item__name removing-window__main__list__item__name--exercises\">Serie { item.serieCount }</span>\r\n                      <span id={ item.id } className=\"removing-window__main__list__item__nutrition-facts\">\r\n                        <p id={ item.id } className=\"removing-window__main__list__item__nutrition-facts__proteins\" title=\"Proteins\">{ item.weight } kg</p>\r\n                      </span>\r\n                      <span id={ item.id } className=\"removing-window__main__list__item__calories\">{ item.reps } reps</span>\r\n                    </div>\r\n                  </li>\r\n\r\n                : <li onClick={ handleSelected } id={ item.id } key={ item.id } className=\"removing-window__main__list__item\">\r\n                    <div className=\"removing-window__main__list__wrapper\">\r\n                      <span id={ item.id } className=\"removing-window__main__list__item__name\">{ item.name }</span>\r\n                      <span id={ item.id } className=\"removing-window__main__list__item__nutrition-facts\">\r\n                        <p id={ item.id } className=\"removing-window__main__list__item__nutrition-facts__proteins\" title=\"Proteins\">{ item.proteins } g</p>\r\n                        <p id={ item.id } className=\"removing-window__main__list__item__nutrition-facts__fats\" title=\"Fats\">{ item.fats } g</p>\r\n                        <p id={ item.id } className=\"removing-window__main__list__item__nutrition-facts__carbs\" title=\"Carbohydrates\">{ item.carbs } g</p>\r\n                      </span>\r\n                      <span id={ item.id } className=\"removing-window__main__list__item__calories\">{ item.kcal } kcal</span>\r\n                    </div>\r\n                    <span id={ item.id } className=\"removing-window__main__list__item__weight\">{ item.weight } g</span>\r\n                  </li>\r\n              )})\r\n            }\r\n\r\n          </ul>\r\n          \r\n          <section className=\"removing-window__main__list__buttons-section\">\r\n            <button className=\"removing-window__main__list__buttons-section__tertiary\" onClick={ handleRemovingAllButton }>Remove all</button>\r\n            <div>\r\n              <button className=\"removing-window__main__list__buttons-section__secondary\" onClick={ props.handleRemoveWindow }>Cancel</button>\r\n              <button \r\n              className={ isRemoveButtonDisabled\r\n                          ? \"removing-window__main__list__buttons-section__primary removing-window__main__list__buttons-section__primary--disabled\" \r\n                          : \"removing-window__main__list__buttons-section__primary\" }\r\n               onClick={ handleRemoveButton }>Remove</button>\r\n            </div>\r\n          </section>\r\n\r\n        </main>\r\n\r\n      </section>\r\n\r\n      { isRemovingAllButtonPressed \r\n        ? <section className=\"removing-window__confirm\">\r\n\r\n            <h1 className=\"removing-window__title\">Remove all?</h1> \r\n\r\n            <h3 className=\"removing-window__confirm__subtitle\">{props.type === 'exercises' ? \"Are you sure you want to remove all series in current exercise?\" : \"Are you sure you want to remove all products in current meal?\"}</h3>\r\n\r\n            <section className=\"removing-window__main__list__buttons-section\" style={{ justifyContent: \"flex-end\" }}>\r\n              <div>\r\n                <button className=\"removing-window__main__list__buttons-section__secondary\" onClick={ handleRemovingAllCancel }>Cancel</button>\r\n                <button className=\"removing-window__main__list__buttons-section__primary\" onClick={ handleRemovingAllConfirm }>Remove</button>\r\n              </div>\r\n            </section>\r\n\r\n          </section>\r\n        : null }\r\n  </>\r\n  )\r\n}","// IMPORTS\r\n\r\nimport { React, useState, useEffect, useReducer } from 'react';\r\nimport AddWindow from '../product_adding_window/ProductAddingWindow';\r\nimport RemoveWindow from '../product_removing_window/ProductRemovingWindow';\r\nimport './styles/meal.css';\r\n\r\nexport const warnings = {\r\n  name:   \"Name must be a string of letters only\",\r\n  weight: \"Weight must be a positive number\",\r\n  macros: \"Macronutrient must be a number\"\r\n};\r\n\r\nconst ACTIONS = {\r\n  NEGATE_MEAL_STATE: 'negate-meal-state',\r\n  NEGATE_ADDING_WINDOW_STATE: 'negate-adding-window-state',\r\n  NEGATE_REMOVING_WINDOW_STATE: 'negate-removing-window-state',\r\n  ADD_PRODUCT: 'add-product',\r\n  ENABLE_PLACEHOLDER: 'enable-placeholder',\r\n  DISABLE_PLACEHOLDER: 'disable-placeholder',\r\n  SET_WARNING: 'set-warning',\r\n  CLEAR_WARNING: 'clear-warning',\r\n  REMOVE_PRODUCT: 'remove-product',\r\n  ADD_TO_SUMMARY: 'add-to-summary',\r\n  SUB_FROM_SUMMARY: 'sub-from-summary',\r\n  CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING: 'clear-productlist-before-day-changing',\r\n  ADD_PRODUCT_TO_PRODUCTLIST: 'add-product-to-productlist'\r\n}\r\n\r\n\r\n// COMPONENTS\r\n\r\nexport default function Meal(props) {\r\n\r\n  // REDUCER STUFF\r\n  const initialState = {\r\n    isMealOpened: false, \r\n    isAddingWindowOpened: false,\r\n    isRemovingWindowOpened: false,\r\n    countIngredients: false,\r\n    productList: [],\r\n    newProduct: { id: 0, mealId: props.mealId, dateIds: { dayId: 0, monthId: 0, yearId: 0 },  name: '', weight: '', proteins: '', fats: '', carbs: '', kcal: '' },\r\n    warning: ['', ''],\r\n    summary: {\r\n      proteins: 0,\r\n      fats: 0,\r\n      carbs: 0,\r\n      kcal: 0\r\n    }\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch(action.type) {\r\n\r\n      case ACTIONS.NEGATE_MEAL_STATE:\r\n        return {...state, isMealOpened: !state.isMealOpened};\r\n      \r\n      case ACTIONS.NEGATE_ADDING_WINDOW_STATE:\r\n        return {...state, isAddingWindowOpened: !state.isAddingWindowOpened};\r\n\r\n      case ACTIONS.NEGATE_REMOVING_WINDOW_STATE:\r\n        return {...state, isRemovingWindowOpened: !state.isRemovingWindowOpened};\r\n\r\n      case ACTIONS.CHANGE_NEW_PRODUCT_DATA: {\r\n        switch (action.payload.key) {\r\n          case 'name':      return {...state, newProduct: {...state.newProduct, name:     action.payload.value}};\r\n          case 'weight':    return {...state, newProduct: {...state.newProduct, weight:   action.payload.value}};\r\n          case 'proteins':  return {...state, newProduct: {...state.newProduct, proteins: action.payload.value}};\r\n          case 'fats':      return {...state, newProduct: {...state.newProduct, fats:     action.payload.value}};\r\n          case 'carbs':     return {...state, newProduct: {...state.newProduct, carbs:    action.payload.value}};\r\n          case 'kcal':      return {...state, newProduct: {...state.newProduct, kcal:     action.payload.value}};\r\n        }\r\n      }\r\n\r\n      case ACTIONS.ADD_PRODUCT: {\r\n        state.newProduct.id = Date.now();\r\n        state.newProduct.dateIds = props.dateIds;\r\n        state.productList.push(state.newProduct);\r\n        localStorage.setItem(state.newProduct.id, JSON.stringify(state.newProduct));\r\n        return {...state, newProduct: { id: 0, mealId: props.mealId, dateIds: { dayId: 0, monthId: 0, yearId: 0 }, name: '', weight: '', proteins: '', fats: '', carbs: '', kcal: ''}};\r\n      }\r\n\r\n      case ACTIONS.SET_WARNING: {\r\n        switch (action.payload) {\r\n          case 'name':  return { ...state, warning: [warnings.name, action.payload] }\r\n          case 'weight':  return { ...state, warning: [warnings.weight, action.payload] }\r\n          default:  return { ...state, warning: [warnings.macros, action.payload] }\r\n        };\r\n      }\r\n\r\n      case ACTIONS.CLEAR_WARNING: {\r\n        return { ...state, warning: ['', action.payload]};\r\n      }\r\n\r\n      case ACTIONS.REMOVE_PRODUCT: {\r\n        let newProductList = state.productList;\r\n        let checkedIdList = action.payload;\r\n        \r\n        checkedIdList.forEach(checkedId => {\r\n          newProductList.forEach((product, index) => {\r\n            if (Number(product.id) === Number(checkedId)) {\r\n              newProductList.splice(index, 1);\r\n              localStorage.removeItem(product.id);\r\n            }\r\n          });\r\n        });\r\n        return {...state, productList: newProductList};\r\n      }\r\n\r\n      case ACTIONS.ADD_TO_SUMMARY: {\r\n        switch (action.payload.ingredient) {\r\n          case 'proteins': return {...state, summary: {...state.summary, proteins: state.summary.proteins + Number(action.payload.value)}};\r\n          case 'fats':     return {...state, summary: {...state.summary, fats:     state.summary.fats     + Number(action.payload.value)}};\r\n          case 'carbs':    return {...state, summary: {...state.summary, carbs:    state.summary.carbs    + Number(action.payload.value)}};\r\n          case 'kcal':     return {...state, summary: {...state.summary, kcal:     state.summary.kcal     + Number(action.payload.value)}};\r\n        }\r\n      }\r\n      \r\n      case ACTIONS.SUB_FROM_SUMMARY: {\r\n        switch (action.payload.ingredient) {\r\n          case 'proteins': return {...state, summary: {...state.summary, proteins: state.summary.proteins - Number(action.payload.value)}};\r\n          case 'fats':     return {...state, summary: {...state.summary, fats:     state.summary.fats     - Number(action.payload.value)}};\r\n          case 'carbs':    return {...state, summary: {...state.summary, carbs:    state.summary.carbs    - Number(action.payload.value)}};\r\n          case 'kcal':     return {...state, summary: {...state.summary, kcal:     state.summary.kcal     - Number(action.payload.value)}};\r\n        }\r\n      }\r\n\r\n      case ACTIONS.ADD_PRODUCT_TO_PRODUCTLIST: {\r\n        return {...state, productList: [...state.productList, action.payload]};\r\n      }\r\n\r\n      case ACTIONS.CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING: {\r\n        return {...state, productList: []};\r\n      }\r\n\r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [isPlaceholderEnabled, setPlaceholderState] = useState(false);\r\n\r\n\r\n  // LOADS DATA FROM LOCAL STORAGE AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    let localStorageKeys = Object.keys(localStorage);\r\n    localStorageKeys.forEach(key => {\r\n      let value = JSON.parse(localStorage.getItem(key));\r\n      if (value.mealId === props.mealId && ((value.dateIds.dayId === props.dateIds.dayId) &&\r\n                                            (value.dateIds.monthId === props.dateIds.monthId) &&\r\n                                            (value.dateIds.yearId === props.dateIds.yearId)))\r\n        dispatch({ type: ACTIONS.ADD_PRODUCT_TO_PRODUCTLIST, payload: value });\r\n    });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLEARS PRODUCTLIST AFTER DAY CHANGE\r\n  useEffect(() => { \r\n    return () => dispatch({ type: ACTIONS.CLEAR_PRODUCTLIST_BEFORE_DAY_CHANGING });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLOSES WINDOWS AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    const disableVisibilityIfEnabled = (state, action) => {\r\n      if (state)\r\n        dispatch({type: action});\r\n    }\r\n    \r\n    disableVisibilityIfEnabled(state.isMealOpened, ACTIONS.NEGATE_MEAL_STATE);\r\n    disableVisibilityIfEnabled(state.isAddingWindowOpened, ACTIONS.NEGATE_ADDING_WINDOW_STATE);\r\n    disableVisibilityIfEnabled(state.isRemovingWindowOpened, ACTIONS.NEGATE_REMOVING_WINDOW_STATE);\r\n\r\n  }, [props.dateIds])\r\n\r\n\r\n  // SENDS DATA FROM MEAL TO GAUGES\r\n  useEffect(() => { \r\n    props.updateGauges(state.summary, props.mealId);\r\n\r\n  }, [state.summary]);\r\n\r\n\r\n  // DISABLES POINTER EVENTS WHEN ONE OF FORM WINDOWS IS OPENED \r\n  useEffect(() => {\r\n    const changePointerEvents = (value) => {\r\n      const meals = document.querySelectorAll(\".meal\");\r\n      const wrapper = document.querySelector(\".wrapper\");\r\n      const center = document.querySelector(\".center-section\");\r\n\r\n      meals.forEach(meal => {\r\n        let buttons = meal.querySelector(\".meal__buttons-section\");\r\n        buttons.style.pointerEvents = value;\r\n        wrapper.style.pointerEvents = value;\r\n\r\n        // DISABLING SCROLL AT CENTER SECTION \r\n        value === \"none\" ? center.style.overflowY = \"hidden\" : center.style.overflowY = \"auto\";\r\n      });\r\n    }\r\n\r\n\r\n    state.isAddingWindowOpened || state.isRemovingWindowOpened\r\n    ? changePointerEvents(\"none\")\r\n    : changePointerEvents(\"auto\");\r\n    \r\n  }, [state.isAddingWindowOpened, state.isRemovingWindowOpened]);\r\n\r\n\r\n  const handleMealOpening = () => {\r\n    dispatch( {type: ACTIONS.NEGATE_MEAL_STATE} );\r\n  }\r\n\r\n  const handleAddingToSummary = (object) => {\r\n    Object.keys(object).forEach(key => {\r\n      dispatch({\r\n        type: ACTIONS.ADD_TO_SUMMARY,\r\n        payload: {\r\n          ingredient: key,\r\n          value: object[key]\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleSubstractingFromSummary = (object) => {\r\n    Object.keys(object).forEach(key => {\r\n      dispatch({\r\n        type: ACTIONS.SUB_FROM_SUMMARY,\r\n        payload: {\r\n          ingredient: key,\r\n          value: object[key]\r\n        }\r\n      });\r\n    });\r\n    \r\n  }\r\n\r\n  const handleAddWindow = () => {\r\n    dispatch( {type: ACTIONS.NEGATE_ADDING_WINDOW_STATE} );\r\n  }\r\n\r\n  const handleRemoveWindow = () => {\r\n    dispatch( {type: ACTIONS.NEGATE_REMOVING_WINDOW_STATE} );\r\n  }\r\n\r\n  const handleProductAdding = (e) => {\r\n    e.preventDefault();\r\n    setTimeout(() => { dispatch({ type: ACTIONS.ADD_PRODUCT }) }, 10);\r\n    dispatch({ type: ACTIONS.NEGATE_ADDING_WINDOW_STATE });\r\n  }\r\n\r\n  const handlePredefinedProductsAdding = (selectedProducts) => {\r\n    selectedProducts.forEach(product => {\r\n\r\n      // TIMEOUT TO PREVENT DOUBLED IDS\r\n      setTimeout(() => {\r\n\r\n        Object.keys(product).forEach(key => {\r\n          dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: key, value: product[key] }});\r\n        });\r\n\r\n        dispatch({ type: ACTIONS.ADD_PRODUCT });\r\n\r\n      }, 10);\r\n    });\r\n    \r\n    dispatch({ type: ACTIONS.NEGATE_ADDING_WINDOW_STATE });\r\n  }\r\n\r\n  const handleProductRemoving = (checkedIdsList) => {\r\n    dispatch({ type: ACTIONS.REMOVE_PRODUCT, payload: checkedIdsList });\r\n    dispatch({ type: ACTIONS.NEGATE_REMOVING_WINDOW_STATE });\r\n  }\r\n\r\n  const handleFormClearing = () => {\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'name', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'weight', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'proteins', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'fats', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'carbs', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: 'kcal', value: '' }});\r\n    setPlaceholderState(false);\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    const isNumber = /[0-9]/;\r\n    const isWord = /[a-z\\s]/i;\r\n    const isZero = /^[0]{1}/;\r\n    console.log(state.productList);\r\n\r\n    const setValueAsZero = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: e.target.id, value: '0' }});\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    const setValueAsNull = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: e.target.id, value: \"\" } });\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    const setValueAsCorrect = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_PRODUCT_DATA, payload: { key: e.target.id, value: e.target.value }});\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    if (e.target.id === 'name') {\r\n\r\n      isWord.test(e.target.value[e.target.value.length - 1]) ? setValueAsCorrect() : setValueAsNull();\r\n\r\n    }\r\n\r\n    else {\r\n\r\n      if (isNumber.test(e.target.value[e.target.value.length - 1])) {\r\n\r\n        if (isZero.test(e.target.value))\r\n          e.target.id === 'weight' ? setValueAsNull() : setValueAsZero();\r\n\r\n        else\r\n          setValueAsCorrect();\r\n      }\r\n\r\n      else {\r\n        setValueAsNull();\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"meal\" style={ state.isMealOpened ? {marginLeft: '-10px'} : {marginLeft: '0px'} }>\r\n      <section className=\"meal__top-section\" onClick={ handleMealOpening }>\r\n        \r\n        <h2 className=\"meal__top-section__meal-title\">{props.name}</h2>        \r\n        \r\n        <ul className=\"meal__top-section__meal-stats-list\">                   \r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.proteins } g</li>\r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.fats } g</li>\r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.carbs } g</li>\r\n          <li className=\"meal__top-section__meal-stats-list__item\">{ state.summary.kcal } kcal</li>\r\n        </ul> \r\n\r\n      </section>\r\n\r\n      { state.productList.length !== 0 ? (\r\n        <section className=\"meal__products-section\" style={ state.isMealOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n       \r\n        { state.productList.map(product => {\r\n          return (\r\n            <Product key={ product.id } \r\n              name={ product.name }\r\n              weight={ product.weight }\r\n              proteins={ product.proteins }\r\n              fats={ product.fats }\r\n              carbs={ product.carbs }\r\n              kcal={ product.kcal }\r\n              addIngredientsFunction={ handleAddingToSummary }\r\n              subIngredientsFunction={ handleSubstractingFromSummary }>\r\n            </Product>\r\n          )\r\n        })}\r\n\r\n        </section>\r\n      ) : null }\r\n      \r\n      <section className=\"meal__buttons-section\" style={ state.isMealOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n        <div>\r\n        <button \r\n          className={ state.productList.length ? \"meal__buttons-section__remove-button\" : \"meal__buttons-section__remove-button--disabled\" } \r\n          onClick={ state.productList.length ? handleRemoveWindow : null } \r\n          disabled={ state.isAddingWindowOpened || state.isRemovingWindowOpened ? true : false }>\r\n          Remove</button> \r\n\r\n        <button \r\n          className=\"meal__buttons-section__add-button\" \r\n          onClick={ handleAddWindow } \r\n          disabled={ state.isAddingWindowOpened || state.isRemovingWindowOpened ? true : false }>\r\n          Add</button>  \r\n        </div>     \r\n      \r\n      </section>\r\n\r\n      { state.isAddingWindowOpened \r\n        ? <AddWindow \r\n            data={{ \r\n              isPlaceholderEnabled: isPlaceholderEnabled,\r\n              name: state.newProduct.name, \r\n              weight: state.newProduct.weight,\r\n              proteins: state.newProduct.proteins,\r\n              fats: state.newProduct.fats,\r\n              carbs: state.newProduct.carbs,\r\n              kcal: state.newProduct.kcal }}\r\n            warning={ state.warning }\r\n            handleOnChange={ handleOnChange }\r\n            handleFormClearing = { handleFormClearing }\r\n            handleProductAdding={ handleProductAdding }\r\n            handleAddWindow={ handleAddWindow }\r\n            handlePredefinedProductsAdding={ handlePredefinedProductsAdding }\r\n          />\r\n        : null }\r\n\r\n      { state.isRemovingWindowOpened \r\n        ? <RemoveWindow\r\n            list={ state.productList }\r\n            handleRemoving={ handleProductRemoving }\r\n            handleRemoveWindow={ handleRemoveWindow }\r\n          />\r\n        : null }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Product(props) {\r\n  useEffect(() => { \r\n    let ingredients = { proteins: props.proteins, fats: props.fats, carbs: props.carbs, kcal: props.kcal };\r\n    props.addIngredientsFunction(ingredients);\r\n\r\n    return () => {\r\n      props.subIngredientsFunction(ingredients);\r\n      }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"meal__products-section__product\">\r\n      <div className=\"meal__products-section__product__info\">\r\n        <h2 className=\"meal__products-section__product__title\">{props.name}</h2>          \r\n        <p className=\"meal__products-section__product__weight\">{props.weight} g</p>           \r\n      </div>\r\n        \r\n      <ul className=\"meal__products-section__product__stats-list\">             \r\n        <li className=\"meal__products-section__product__stats-list__item\">{props.proteins} g</li>\r\n        <li className=\"meal__products-section__product__stats-list__item\">{props.fats} g</li>\r\n        <li className=\"meal__products-section__product__stats-list__item\">{props.carbs} g</li>\r\n        <li className=\"meal__products-section__product__stats-list__item\">{props.kcal} kcal</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","// IMPORTS\r\n\r\nimport React from 'react';\r\nimport './styles/right.css';\r\n\r\n\r\n// PRIMARY COMPONENTS\r\n\r\nexport default function Gauge(props) {\r\n  const handleRotation = () => {\r\n    const rotationDegrees = props.percent * 2.7;\r\n    if (rotationDegrees < 90)\r\n      return {transform: `rotate(${rotationDegrees}deg)`};\r\n    if (rotationDegrees >= 90 && rotationDegrees < 180)\r\n      return {transform: `rotate(${rotationDegrees}deg)`, borderRightColor: `#ffffff80`};  \r\n    if (rotationDegrees >= 180)\r\n      return {transform: `rotate(${rotationDegrees}deg)`, borderRightColor: `#ffffff80`, borderTopColor: '#ffffff80'};\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={ !props.isKcal ? \"right-section__gauge-container\" : \"right-section__gauge-container right-section__gauge-container--kcal\" }>\r\n        \r\n        <div className={ !props.isKcal ? \"right-section__gauge-container__bar\" : \"right-section__gauge-container__bar right-section__gauge-container__bar--kcal\" } \r\n          style={ props.percent < 100 ? handleRotation() : {borderColor: \"#e00000\"}}>    \r\n        </div>\r\n\r\n        <div className={ !props.isKcal ? \"right-section__gauge-container__text\" : \"right-section__gauge-container__text right-section__gauge-container__text--kcal\" }>\r\n           <h4 className={ !props.isKcal ? \"right-section__gauge-container__text__amount\" : \"right-section__gauge-container__text__amount right-section__gauge-container__text__amount--kcal\" }>\r\n             {props.amount} {!props.isKcal ? \"g\" : null}</h4>\r\n           <h6 className={ !props.isKcal ? \"right-section__gauge-container__text__name\" : \"right-section__gauge-container__text__name right-section__gauge-container__text__name--kcal\" }>\r\n             {props.name} </h6>\r\n           <p className={ !props.isKcal ? \"right-section__gauge-container__text__percent\" : \"right-section__gauge-container__text__percent right-section__gauge-container__text__percent--kcal\" }>\r\n             {props.percent} %</p>\r\n           <h5 className={ !props.isKcal ? \"right-section__gauge-container__text__left\" : \"right-section__gauge-container__text__left right-section__gauge-container__text__left--kcal\" }>\r\n             {props.left} {!props.isKcal ? \"g\" : null} left</h5>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}","import { React, useEffect } from 'react';\r\nimport './../product_removing_window/styles/productRemovingWindow.css';\r\nimport './styles/moreWindow.css';\r\n \r\nexport default function MoreWindow(props) {\r\n  // ENABLE POINTER EVENTS IN WINDOW AFTER MOUNTING\r\n  useEffect(() => { \r\n    const removingWindow = document.querySelector(\".removing-window\");\r\n    removingWindow.style.pointerEvents = \"auto\";\r\n\r\n   }, []);\r\n\r\n  const handleBackButton = () => {\r\n    props.handleMoreWindow();\r\n  }\r\n\r\n  return (\r\n    <section className=\"removing-window more-window\">\r\n\r\n      <h1 className=\"removing-window__title\">More info</h1>\r\n\r\n      <main className=\"removing-window__main\">\r\n        <section className=\"more-window__section\">\r\n          <h3 className=\"more-window__section__title\">Description</h3>\r\n          <p className=\"more-window__section__paragraph\">\r\n            The bench press is an upper-body weight training exercise in which the trainee\r\n            presses a weight upwards while lying on a weight training bench. \r\n            The exercise uses the pectoralis major, the anterior deltoids, and the triceps,\r\n            among other stabilizing muscles. A barbell is generally used to hold the weight, \r\n            but a pair of dumbbells can also be used. \r\n          </p>\r\n        </section>\r\n\r\n        <section className=\"more-window__section\">\r\n          <h3 className=\"more-window__section__title\">Proper form</h3>\r\n          <iframe width=\"100%\" height=\"auto\" src=\"https://www.youtube.com/watch?v=XSza8hVTlmM\"></iframe>\r\n        </section>\r\n\r\n      <section className=\"removing-window__main__list__buttons-section removing-window__main__list__buttons-section--more\">\r\n        <button \r\n          className={ \"removing-window__main__list__buttons-section__primary\" }\r\n          onClick={ handleBackButton }>\r\n          Back\r\n        </button>\r\n      </section>\r\n\r\n      </main>\r\n\r\n    </section>\r\n  )\r\n}","// IMPORTS\r\n\r\nimport { React, useEffect, useReducer } from 'react';\r\nimport './style/exercise.css';\r\nimport './../meal/styles/meal.css';\r\nimport '../product_adding_window/styles/productAddingWindow.css';\r\nimport AddWindow from '../product_adding_window/ProductAddingWindow';\r\nimport RemoveWindow from '../product_removing_window/ProductRemovingWindow';\r\nimport MoreWindow from '../MoreWindow/MoreWindow';\r\n\r\nconst ACTIONS = {\r\n  NEGATE_EXERCISE_OPENED: 'negate-exercise-opened',\r\n  NEGATE_ADD_WINDOW_STATE: 'negate-add-window-state',\r\n  NEGATE_REMOVE_WINDOW_STATE: 'negate-remove-window-state',\r\n  NEGATE_MORE_WINDOW_STATE: 'negate-more-window-state',\r\n  SORT_SERIESLIST: 'sort-serieslist',\r\n  CHANGE_NEW_SERIE_DATA: 'change-new-serie-data',\r\n  UPDATE_LASTTIME_DATA: 'update-lasttime-data',\r\n  SET_WARNING: 'set-warning',\r\n  CLEAR_WARNING: 'clear-warning',\r\n  ADD_SERIE: 'add-serie',\r\n  REMOVE_SERIE: 'remove-serie',\r\n  ADD_SERIE_TO_SERIESLIST: 'add-serie-to-serieslist',\r\n  CLEAR_SERIESLIST_BEFORE_DAY_CHANGING: 'clear-serieslist-before-day-change'\r\n}\r\n\r\nexport const warnings = {\r\n  weight: \"Weight must be a positive number\",\r\n  reps: \"Reps must be a positive number\"\r\n};\r\n\r\n// COMPONENT\r\n\r\nexport default function Exercise(props) {\r\n\r\n  const initialState = {\r\n    isExerciseOpened: false,\r\n    isAddWindowOpened: false,\r\n    isRemoveWindowOpened: false,\r\n    isMoreWindowOpened: false,\r\n    lastTimeData: { \r\n      training: { weight: \"First time\", reps: \"First time\" },\r\n      serie: { weight: \"First time\", reps: \"First time\" } \r\n    },\r\n    seriesList: [],\r\n    warning: ['', ''],\r\n    newSerie: { id: 0, exerciseId: props.exerciseId, trainingId: 0, dateIds: { dayId: 0, monthId: 0, yearId: 0 }, serieCount: '', weight: '', reps:'' }\r\n  }\r\n\r\n  const getPreviousTrainingDate = (previousDateIds) => {\r\n    const isLeapYear = () => {\r\n      if (((previousDateIds.yearId % 4 === 0) && (previousDateIds.yearId % 100 !== 0)) || previousDateIds.yearId % 400 === 0)\r\n         return true;\r\n      \r\n      else\r\n         return false;\r\n    }\r\n    const isDayFirstInMonth = () => {\r\n      if(previousDateIds.dayId === 1)\r\n        return true;\r\n      else\r\n        return false;\r\n    }\r\n    const isDayFirstInJanuary = () => {\r\n      if ((previousDateIds.dayId === 1) && (previousDateIds.monthId === 1))\r\n        return true;\r\n      \r\n      else\r\n        return false;\r\n    }\r\n    const isDayFirstInMarch = () => {\r\n      if ((previousDateIds.dayId === 1) && (previousDateIds.monthId === 3))\r\n        return true;\r\n      \r\n      else\r\n        return false;\r\n    }\r\n    const isDayFirstIn30DayMonths = () => {\r\n      if ((previousDateIds.dayId === 1) && ((previousDateIds.monthId === 4) || (previousDateIds.monthId === 6) || (previousDateIds.monthId === 8) || (previousDateIds.monthId === 9) || (previousDateIds.monthId === 11)))\r\n        return true;\r\n      \r\n      else\r\n        return false;\r\n    }\r\n\r\n    let potentialPreviousDateIds = { dayId: 0, monthId: 0, yearId: 0 };\r\n\r\n    if (isDayFirstInJanuary()) {\r\n      potentialPreviousDateIds.dayId = 31;\r\n      potentialPreviousDateIds.monthId = 12;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId - 1;\r\n    }\r\n\r\n    else if (isDayFirstInMarch()) {\r\n      if(isLeapYear())\r\n        potentialPreviousDateIds.dayId = 29;\r\n      else\r\n        potentialPreviousDateIds.dayId = 28;\r\n      \r\n      potentialPreviousDateIds.monthId = 2;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n\r\n    else if (isDayFirstIn30DayMonths()) {\r\n      potentialPreviousDateIds.dayId = 31;\r\n      potentialPreviousDateIds.monthId = previousDateIds.monthId - 1;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n\r\n    else if (isDayFirstInMonth()) {\r\n      potentialPreviousDateIds.dayId = 30\r\n      potentialPreviousDateIds.monthId = previousDateIds.monthId - 1;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n    \r\n    else {\r\n      potentialPreviousDateIds.dayId = previousDateIds.dayId - 1;\r\n      potentialPreviousDateIds.monthId = previousDateIds.monthId;\r\n      potentialPreviousDateIds.yearId = previousDateIds.yearId;\r\n    }\r\n\r\n    return potentialPreviousDateIds;\r\n  }\r\n\r\n  const reducer = (state, action) => {\r\n    \r\n    switch(action.type) {\r\n      case ACTIONS.NEGATE_EXERCISE_OPENED: {\r\n        return {...state, isExerciseOpened: !state.isExerciseOpened};\r\n      }\r\n\r\n      case ACTIONS.NEGATE_ADD_WINDOW_STATE: {\r\n        return {...state, isAddWindowOpened: !state.isAddWindowOpened};\r\n      }\r\n\r\n      case ACTIONS.NEGATE_REMOVE_WINDOW_STATE: {\r\n        return {...state, isRemoveWindowOpened: !state.isRemoveWindowOpened};\r\n      }\r\n\r\n      case ACTIONS.NEGATE_MORE_WINDOW_STATE: {\r\n        return {...state, isMoreWindowOpened: !state.isMoreWindowOpened};\r\n      }\r\n\r\n      case ACTIONS.CHANGE_NEW_SERIE_DATA: {\r\n        switch (action.payload.key) {\r\n          case 'weight':      return { ...state, newSerie: { ...state.newSerie, weight: action.payload.value } };\r\n          case 'reps':        return { ...state, newSerie: { ...state.newSerie, reps:   action.payload.value } };\r\n        }\r\n      }\r\n\r\n      case ACTIONS.ADD_SERIE: {\r\n        const updatedSeriesList = state.seriesList;\r\n        let serieCount = 1;\r\n        \r\n        // ADDING SERIE TO SERIESLIST\r\n        state.newSerie.id = Date.now();\r\n        state.newSerie.dateIds = props.dateIds;\r\n        updatedSeriesList.push(state.newSerie);\r\n\r\n        // SERIE ORDER COUNTING\r\n        updatedSeriesList.forEach(serie => {\r\n          serie.serieCount = serieCount;\r\n          serieCount++;\r\n        });\r\n\r\n        // SAVING CHANGES IN LOCAL STORAGE\r\n        localStorage.setItem(state.newSerie.id, JSON.stringify(state.newSerie));\r\n        \r\n        return {\r\n          ...state,\r\n          newSerie: { id: 0, exerciseId: props.exerciseId, dateIds: { dayId: 0, monthId: 0, yearId: 0 }, serieCount: '', weight: '', reps: '' },\r\n          seriesList: updatedSeriesList };\r\n      }\r\n\r\n      case ACTIONS.REMOVE_SERIE: {\r\n        let updatedSeriesList = state.seriesList;\r\n        let checkedIdList = action.payload;\r\n        let serieCount = 1;\r\n        \r\n        checkedIdList.forEach(checkedId => {\r\n\r\n          updatedSeriesList.forEach((serie, index) => {\r\n            localStorage.removeItem(serie.id);\r\n            if (Number(serie.id) === Number(checkedId))\r\n              updatedSeriesList.splice(index, 1);\r\n              \r\n          });\r\n\r\n        });\r\n\r\n        // SERIE ORDER COUNTING\r\n        updatedSeriesList.forEach(serie => {\r\n          serie.serieCount = serieCount;\r\n          localStorage.setItem(serie.id, JSON.stringify(serie));\r\n          serieCount++;\r\n        });\r\n\r\n        return { ...state, seriesList: updatedSeriesList };\r\n      }\r\n\r\n      case ACTIONS.SET_WARNING: {\r\n        switch (action.payload) {\r\n          case 'weight':  return { ...state, warning: [warnings.weight, action.payload] }\r\n          case 'reps':  return { ...state, warning: [warnings.reps, action.payload] }\r\n        };\r\n      }\r\n\r\n      case ACTIONS.CLEAR_WARNING: {\r\n        return { ...state, warning: ['', action.payload]};\r\n      }\r\n\r\n      case ACTIONS.ADD_SERIE_TO_SERIESLIST: {\r\n        return {...state, seriesList: [...state.seriesList, action.payload]};\r\n      }\r\n\r\n      case ACTIONS.SORT_SERIESLIST: {\r\n        let serieCount = 1;\r\n        const updatedSeriesList = [];\r\n\r\n        while (updatedSeriesList.length !== state.seriesList.length) {\r\n\r\n          state.seriesList.forEach(serie => {\r\n            if (serie.serieCount === serieCount)\r\n              updatedSeriesList.push(serie);\r\n          });\r\n\r\n          serieCount++;\r\n        }\r\n   \r\n        return {...state, seriesList: updatedSeriesList };\r\n      }\r\n\r\n      case ACTIONS.CLEAR_SERIESLIST_BEFORE_DAY_CHANGING: {\r\n        return {...state, seriesList: []};\r\n      }\r\n\r\n      case ACTIONS.UPDATE_LASTTIME_DATA: {\r\n\r\n        let currentlyAddingSerieNumber = 0;\r\n        let indexOfLastSerie = 0;\r\n        let updatedLastSerieData = { weight: \"First serie\", reps: \"First serie\" };\r\n        let updatedLastTrainingData = { weight: \"First training\", reps: \"First training\" };\r\n\r\n        // LAST SERIE DATA\r\n\r\n        // SEARCHING FOR LAST SERIE NUMBER\r\n        if (state.seriesList.length !== 0) {\r\n\r\n          state.seriesList.forEach((serie, index) => {\r\n            if (serie.serieCount > currentlyAddingSerieNumber) {\r\n              currentlyAddingSerieNumber = serie.serieCount;\r\n              indexOfLastSerie = index;\r\n            }\r\n          });\r\n\r\n          updatedLastSerieData = { \r\n            weight: state.seriesList[indexOfLastSerie].weight,\r\n            reps: state.seriesList[indexOfLastSerie].reps \r\n          };\r\n        }\r\n      \r\n        // LAST TRAINING DATA\r\n\r\n        const potentialSeries = [];\r\n        let previousTrainingSerie = {};\r\n        let previousDateIds = props.dateIds;\r\n      \r\n        // FILTERING LOCAL STORAGE TO SEARCH A EXERCISE WITH CORRECT EXERCISEID AND NUMBER OF SERIE\r\n        if (Object.keys(localStorage).length !== 0) {\r\n\r\n          Object.keys(localStorage).forEach(key => {\r\n            let value = JSON.parse(localStorage.getItem(key));\r\n\r\n            if (value.exerciseId === props.exerciseId) {\r\n              if (value.serieCount === currentlyAddingSerieNumber + 1) {\r\n                if (\r\n                  (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n                  (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId === props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n                  (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n                  (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId >= props.dateIds.monthId) && (value.dateIds.yearId < props.dateIds.yearId)\r\n                )\r\n                  potentialSeries.push(value);\r\n              }\r\n            }\r\n          });\r\n\r\n          if (potentialSeries.length !== 0) {\r\n            while (true) {\r\n              previousDateIds = getPreviousTrainingDate(previousDateIds);\r\n  \r\n              potentialSeries.forEach(serie => {\r\n                if (JSON.stringify(previousDateIds) === JSON.stringify(serie.dateIds))\r\n                  previousTrainingSerie = serie;\r\n              });\r\n  \r\n              if (previousTrainingSerie.weight !== undefined) {\r\n                updatedLastTrainingData = { \r\n                  weight: previousTrainingSerie.weight,\r\n                  reps: previousTrainingSerie.reps \r\n                };\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return {...state, \r\n          lastTimeData: {\r\n            training: updatedLastTrainingData,\r\n            serie: updatedLastSerieData\r\n          }\r\n        }\r\n      }\r\n      \r\n      default: return console.error(`Unknown action type: ${action.type}`);\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\r\n  // LOADS DATA FROM LOCAL STORAGE AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    let localStorageKeys = Object.keys(localStorage);\r\n\r\n    localStorageKeys.forEach(key => {\r\n      let value = JSON.parse(localStorage.getItem(key));\r\n      if (value.exerciseId === props.exerciseId && ((value.dateIds.dayId === props.dateIds.dayId) &&\r\n                                            (value.dateIds.monthId === props.dateIds.monthId) &&\r\n                                            (value.dateIds.yearId === props.dateIds.yearId)))\r\n        dispatch({ type: ACTIONS.ADD_SERIE_TO_SERIESLIST, payload: value });\r\n    });\r\n\r\n    dispatch({ type: ACTIONS.SORT_SERIESLIST });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLEARS SERIESLIST AFTER DAY CHANGE\r\n  useEffect(() => { \r\n    return () => dispatch({ type: ACTIONS.CLEAR_SERIESLIST_BEFORE_DAY_CHANGING });\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // \r\n  useEffect(() => { \r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // CLOSES WINDOWS AFTER DAY CHANGE\r\n  useEffect(() => {\r\n    const disableVisibilityIfEnabled = (state, action) => {\r\n      if (state)\r\n        dispatch({type: action});\r\n    }\r\n    \r\n    disableVisibilityIfEnabled(state.isExerciseOpened, ACTIONS.NEGATE_EXERCISE_OPENED);\r\n    disableVisibilityIfEnabled(state.isAddWindowOpened, ACTIONS.NEGATE_ADD_WINDOW_STATE);\r\n    disableVisibilityIfEnabled(state.isRemoveWindowOpened, ACTIONS.NEGATE_REMOVE_WINDOW_STATE);\r\n    disableVisibilityIfEnabled(state.isMoreWindowOpened, ACTIONS.NEGATE_MORE_WINDOW_STATE);\r\n\r\n  }, [props.dateIds]);\r\n\r\n\r\n  // DISABLES POINTER EVENTS WHEN ONE OF FORM WINDOWS IS OPENED \r\n  useEffect(() => {\r\n    const changePointerEvents = (value) => {\r\n      const meals = document.querySelectorAll(\".meal\");\r\n      const wrapper = document.querySelector(\".wrapper\");\r\n      const center = document.querySelector(\".center-section\");\r\n\r\n      meals.forEach(meal => {\r\n        let buttons = meal.querySelector(\".meal__buttons-section\");\r\n        buttons.style.pointerEvents = value;\r\n        wrapper.style.pointerEvents = value;\r\n\r\n        // DISABLING SCROLL AT CENTER SECTION \r\n        value === \"none\" ? center.style.overflowY = \"hidden\" : center.style.overflowY = \"auto\";\r\n      });\r\n    }\r\n\r\n\r\n    state.isAddWindowOpened || state.isRemoveWindowOpened || state.isMoreWindowOpened\r\n    ? changePointerEvents(\"none\")\r\n    : changePointerEvents(\"auto\");\r\n    \r\n  }, [state.isAddWindowOpened, state.isRemoveWindowOpened, state.isMoreWindowOpened]);\r\n\r\n\r\n  // UPDATES LAST TIME DATA AFTER OPENING CHANGING WINDOWS\r\n  useEffect(() => {\r\n    if (state.isAddWindowOpened)\r\n      dispatch({ type: ACTIONS.UPDATE_LASTTIME_DATA });\r\n    countProgress();\r\n\r\n  }, [state.isAddWindowOpened]);\r\n\r\n  const handleExerciseOpening = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_EXERCISE_OPENED });\r\n  }\r\n\r\n  const handleAddWindow = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_ADD_WINDOW_STATE });\r\n  }\r\n\r\n  const handleRemoveWindow = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_REMOVE_WINDOW_STATE });\r\n  }\r\n\r\n  const handleMoreWindow = () => {\r\n    dispatch({ type: ACTIONS.NEGATE_MORE_WINDOW_STATE });\r\n  }\r\n\r\n  const countProgress = () => {\r\n    const potentialTrainings = [];\r\n    const lastTrainingData = [];\r\n    let message = {};\r\n    let percentValue = 0;\r\n    let progressValue = 0;\r\n    let previousDateIds = props.dateIds;\r\n  \r\n    // FILTERING LOCAL STORAGE TO SEARCH A EXERCISE WITH CORRECT EXERCISEID AND NUMBER OF SERIE\r\n    if (Object.keys(localStorage).length !== 0) {\r\n\r\n      Object.keys(localStorage).forEach(key => {\r\n        let value = JSON.parse(localStorage.getItem(key));\r\n\r\n        if (value.exerciseId === props.exerciseId) {\r\n          if (\r\n            (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n            (value.dateIds.dayId < props.dateIds.dayId) && (value.dateIds.monthId === props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n            (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId < props.dateIds.monthId) && (value.dateIds.yearId === props.dateIds.yearId) ||\r\n            (value.dateIds.dayId >= props.dateIds.dayId) && (value.dateIds.monthId >= props.dateIds.monthId) && (value.dateIds.yearId < props.dateIds.yearId)\r\n          )\r\n            potentialTrainings.push(value);\r\n        }\r\n      });\r\n\r\n      if (potentialTrainings.length !== 0) {\r\n        while (true) {\r\n          previousDateIds = getPreviousTrainingDate(previousDateIds);\r\n\r\n          potentialTrainings.forEach(training => {\r\n            if (JSON.stringify(previousDateIds) === JSON.stringify(training.dateIds))\r\n              lastTrainingData.push(training); \r\n          });\r\n\r\n          if (lastTrainingData.length !== 0)\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const lastTrainingTotal = countTotalWeight(lastTrainingData);\r\n    const currentTrainingTotal = countTotalWeight(state.seriesList);\r\n  \r\n    progressValue = currentTrainingTotal - lastTrainingTotal;\r\n\r\n    if (lastTrainingTotal)\r\n      percentValue = ((progressValue / lastTrainingTotal) * 100).toFixed(2);\r\n    else \r\n      percentValue = '';\r\n      \r\n    if (lastTrainingTotal > 0) {\r\n\r\n      if (progressValue > 0) {\r\n        message.top = `${progressValue.toFixed(2)} kg more`;\r\n        message.bottom = `${percentValue}% more than last time`;\r\n      }\r\n      else if (progressValue === 0) {\r\n        message.top = \"The same result as last time\";\r\n        message.bottom = \"\";\r\n      }\r\n\r\n      else {\r\n        progressValue *= -1;\r\n        percentValue  *= -1;\r\n        message.top = `${progressValue.toFixed(2)} kg less`;\r\n        message.bottom = `${percentValue}% less than last time`;\r\n      }\r\n    }\r\n\r\n    else {\r\n      message.top = \"First training, don't give up!\";\r\n      message.bottom = \"\";\r\n    }\r\n  \r\n    return message;\r\n  }\r\n\r\n  const handleFormClearing = () => {\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: 'weight', value: '' }});\r\n    dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: 'reps', value: '' }});\r\n  }\r\n\r\n  const handleOnChange = (e) => {\r\n    // const newReg = /^[1-9]{1,}[.]{1}[0-9]{1,3}/\r\n    const isNumber = /[0-9]/;\r\n    const isZero = /^[0]{1}/;\r\n\r\n    const setValueAsNull = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: e.target.id, value: \"\" } });\r\n      dispatch({ type: ACTIONS.SET_WARNING, payload: e.target.id });\r\n    }\r\n\r\n    const setValueAsCorrect = () => {\r\n      dispatch({ type: ACTIONS.CHANGE_NEW_SERIE_DATA, payload: { key: e.target.id, value: e.target.value }});\r\n      dispatch({ type: ACTIONS.CLEAR_WARNING, payload: e.target.id });\r\n    }\r\n    \r\n    if (isNumber.test(e.target.value[e.target.value.length - 1])) {\r\n\r\n      if (isZero.test(e.target.value))\r\n        setValueAsNull();\r\n\r\n      else\r\n        setValueAsCorrect();\r\n    }\r\n\r\n    else {\r\n      setValueAsNull();\r\n    }\r\n  }\r\n\r\n  const countTotalWeight = (seriesList) => {\r\n    let totalWeight = 0;\r\n\r\n    seriesList.forEach(serie => {\r\n      totalWeight += Number(serie.weight) * Number(serie.reps);\r\n    });\r\n\r\n    return totalWeight;\r\n  }\r\n\r\n  const countTotalReps = (seriesList) => {\r\n    let totalReps = 0;\r\n\r\n    seriesList.forEach(serie => {\r\n      totalReps += Number(serie.reps);\r\n    });\r\n    \r\n    return totalReps;\r\n  }\r\n\r\n  const countWeightPerRepsRatio = (seriesList) => {\r\n    return (countTotalWeight(seriesList) / countTotalReps(seriesList)).toFixed(2);\r\n  }\r\n\r\n  const handleSerieAdding = (e) => {\r\n    e.preventDefault();\r\n    setTimeout(() => { dispatch({ type: ACTIONS.ADD_SERIE }) }, 10);\r\n    dispatch({ type: ACTIONS.NEGATE_ADD_WINDOW_STATE });\r\n  }\r\n\r\n  const handleSerieRemoving = (checkedIdsList) => {\r\n    dispatch({ type: ACTIONS.REMOVE_SERIE, payload: checkedIdsList });\r\n    dispatch({ type: ACTIONS.NEGATE_REMOVE_WINDOW_STATE });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"meal exercise\" style={ state.isExerciseOpened ? {marginLeft: '-10px'} : {marginLeft: '0px'} }>\r\n      \r\n      <section className=\"meal__top-section exercise__top-section\" onClick={ handleExerciseOpening }>\r\n\r\n        <h2 className=\"meal__top-section__meal-title\">{ props.name }</h2>\r\n\r\n        <div className=\"exercise__top-section__grade-container\" title=\"Exercise difficulty\">\r\n          <span className=\"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\"></span>\r\n          <span className={ props.difficulty >= 2 ? \"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\" : \"exercise__top-section__grade-container__point\" }></span>\r\n          <span className={ props.difficulty === 3 ? \"exercise__top-section__grade-container__point exercise__top-section__grade-container__point--filled\" : \"exercise__top-section__grade-container__point\" }></span>\r\n        </div>\r\n\r\n      </section>\r\n\r\n      { state.seriesList.length !== 0 ? (\r\n        <section className=\"meal__products-section exercise__series-section\" style={ state.isExerciseOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n\r\n          <ul className=\"exercise__series-section__list\">\r\n            { state.seriesList.map(serie => {\r\n              return (\r\n              <li key={ serie.id } className=\"exercise__series-section__list__item\">\r\n                  <p className=\"exercise__series-section__list__item__count\">Serie { serie.serieCount }</p>\r\n                  <p className=\"exercise__series-section__list__item__weight\">{ serie.weight } kg</p>\r\n                  <p className=\"exercise__series-section__list__item__reps\">{ serie.reps } reps</p>\r\n                </li> \r\n              )\r\n              })\r\n            }\r\n          </ul>\r\n\r\n          <ul className=\"exercise__series-section__summary\">\r\n\r\n            <li className=\"exercise__series-section__summary__item\">\r\n              <p className=\"exercise__series-section__summary__item__count\">Total</p>\r\n              <p className=\"exercise__series-section__summary__item__weight\">{ countTotalWeight(state.seriesList) } kg</p>\r\n              <p className=\"exercise__series-section__summary__item__reps\">{ countTotalReps(state.seriesList) } reps</p>\r\n            </li>\r\n\r\n            <li className=\"exercise__series-section__summary__item\">\r\n              <p className=\"exercise__series-section__list__item__count\">\r\n                <span>{ countProgress().top }</span>\r\n                <span>{ countProgress().bottom }</span>\r\n              </p>\r\n              <p className=\"exercise__series-section__list__item__reps exercise__series-section__list__item__reps--stats\">{ countWeightPerRepsRatio(state.seriesList) } kg per rep</p>\r\n            </li>\r\n\r\n          </ul>\r\n          \r\n        </section>\r\n      ) : null }\r\n      \r\n      \r\n      <section className=\"meal__buttons-section exercise__buttons-section\" style={ state.isExerciseOpened ? {display: \"flex\"} : {display: \"none\"} }>\r\n\r\n        <button \r\n          className=\"adding-window__main__form__tertiary\" \r\n          onClick={ handleMoreWindow }>\r\n          More\r\n        </button>\r\n        \r\n        <div>\r\n          <button \r\n            className={ state.seriesList.length ? \"meal__buttons-section__remove-button\" : \"meal__buttons-section__remove-button--disabled\" }\r\n            onClick={ state.seriesList.length ? handleRemoveWindow : null } \r\n            disabled={ state.isAddWindowOpened || state.isRemoveWindowOpened ? true : false }>\r\n            Remove\r\n          </button>\r\n\r\n          <button \r\n            className=\"adding-window__main__form__primary\" \r\n            onClick={ handleAddWindow }\r\n            disabled={ state.isAddWindowOpened || state.isRemoveWindowOpened ? true : false }>\r\n            Add\r\n          </button>\r\n        </div>\r\n\r\n      </section>\r\n        \r\n      { state.isAddWindowOpened \r\n        ? <AddWindow \r\n            type=\"exercises\"\r\n            handleAddWindow={ handleAddWindow }\r\n            data={{\r\n              weight: state.newSerie.weight,\r\n              reps: state.newSerie.reps\r\n            }}\r\n            warning={ state.warning }\r\n            handleOnChange={ handleOnChange }\r\n            handleFormClearing={ handleFormClearing }\r\n            handleSerieAdding={ handleSerieAdding }\r\n            lastTimeData={ state.lastTimeData }\r\n          />\r\n        : null }\r\n\r\n      { state.isRemoveWindowOpened \r\n        ? <RemoveWindow \r\n            type=\"exercises\"\r\n            list={ state.seriesList }\r\n            handleRemoving={ handleSerieRemoving }\r\n            handleRemoveWindow={ handleRemoveWindow }\r\n          />\r\n        : null }\r\n\r\n      { state.isMoreWindowOpened \r\n        ? <MoreWindow\r\n            type=\"exercises\"\r\n            handleMoreWindow={ handleMoreWindow }\r\n          />\r\n        : null }\r\n\r\n    </div>\r\n\r\n  )\r\n}","// IMPORTS\n\nimport { React, useReducer, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Logo, Title, MenuItem, Quotation } from './components/left/left';\nimport DateChanger from './components/center/DateChanger';\nimport Meal from './components/meal/Meal';\nimport Gauge from './components/right/Gauge';\nimport Exercise from './components/exercise/Exercise';\n\nimport './styles/index/index.css';\nimport './components/left/styles/left.css';\nimport './components/center/styles/center.css';\nimport './components/right/styles/right.css';\n\n\n// GLOBALS\n\nconst MENU_CATEGORIES= [\"Log in\", \"Nutrition\", \"Training\", \"Settings\", \"About\"];\nconst ACTIONS = {\n  UPDATE_MEALS_INGREDIENTS_SUMMARY: 'update-meals-ingredients-summary',\n  UPDATE_DAILY_INGREDIENTS_SUMMARY: 'update-daily-ingredients-summary',\n  COUNT_GAUGES_DATA: 'count-gauges-data',\n  CHANGE_DATE: 'change-date',\n  CHANGE_PAGE_TITLE: 'change-page-title',\n  CHANGE_SETTINGS_DATA: 'change-settings-data',\n  BACKUP_OLD_SETTINGS: 'backup-old-settings',\n  RESTORE_OLD_SETTINGS: 'restore-old-settings',\n  LOAD_SETTINGS: 'load-settings',\n  SET_CLEAR_ALL_PRODUCTS: 'set-clear-all-products'\n}\n\n\n// FUNCTIONS\n\nconst countPercentOfEatenIngredient = (eatenAmount, maxAmount) => {\n  if (Number.isNaN((Math.round(eatenAmount / maxAmount * 100))))\n    return 0;\n  else\n   return Math.round(eatenAmount / maxAmount * 100);\n}\n\nconst countAmountOfIngredientLeft = (eatenAmount, maxAmount) => {\n  if (eatenAmount >= maxAmount)\n    return 0;\n  else\n    return maxAmount - eatenAmount;\n}\n\n\n// COMPONENTS\n\nfunction App() {\n\n  // EFFECT WHICH CHECKS IS SETTINGS ARE SAVED IN LOCAL STORAGE\n  useEffect(() => {\n\n    if (Object.keys(localStorage).length !== 0)\n      dispatch({ type: ACTIONS.LOAD_SETTINGS });   \n    else\n      saveSettingsToLocalStorage(); \n\n    backupSettings();\n  }, []);\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n\n      case ACTIONS.UPDATE_MEALS_INGREDIENTS_SUMMARY: {\n        const newMealsIngredientsSummary = [...state.mealsIngredientsSummary];\n\n        newMealsIngredientsSummary[action.payload.mealId] = {\n                                                              proteins: action.payload.data.proteins,\n                                                              fats: action.payload.data.fats, \n                                                              carbs: action.payload.data.carbs, \n                                                              kcal: action.payload.data.kcal };\n\n        return {...state, mealsIngredientsSummary: newMealsIngredientsSummary};                                                                 \n      }\n\n      case ACTIONS.UPDATE_DAILY_INGREDIENTS_SUMMARY: {\n        let dailyIngredientsSum = { proteins: 0, fats: 0, carbs: 0, kcal: 0 };\n        let mealsIngredientsSum = { proteins: 0, fats: 0, carbs: 0, kcal: 0 };\n\n        state.mealsIngredientsSummary.forEach(meal => {\n          mealsIngredientsSum = {\n                                  proteins: meal.proteins,\n                                  fats:     meal.fats,\n                                  carbs:    meal.carbs,\n                                  kcal:     meal.kcal };\n\n          dailyIngredientsSum = {\n                                  proteins: dailyIngredientsSum.proteins + mealsIngredientsSum.proteins,\n                                  fats:     dailyIngredientsSum.fats     + mealsIngredientsSum.fats,\n                                  carbs:    dailyIngredientsSum.carbs    + mealsIngredientsSum.carbs,\n                                  kcal:     dailyIngredientsSum.kcal     + mealsIngredientsSum.kcal };\n\n          mealsIngredientsSum = { proteins: 0,\n                                  fats: 0,\n                                  carbs: 0,\n                                  kcalS: 0 };\n        });\n\n        return {...state, dailyIngredientsSummary: dailyIngredientsSum };\n      }\n\n      case ACTIONS.COUNT_GAUGES_DATA: {\n        const ingredient = action.payload.typeOfIngredient;\n\n        return {...state, gaugesData: {...state.gaugesData, \n          [ingredient]: { \n            eaten: state.dailyIngredientsSummary[ingredient], \n            left: countAmountOfIngredientLeft(state.dailyIngredientsSummary[ingredient], state.settingsData.nutrition.dailyDemand[ingredient]), \n            max: state.settingsData.nutrition.dailyDemand[ingredient], \n            percent: countPercentOfEatenIngredient(state.dailyIngredientsSummary[ingredient], state.settingsData.nutrition.dailyDemand[ingredient]) }\n          }\n        }\n      }\n\n      case ACTIONS.CHANGE_DATE: {\n        return {...state, dateIds: { dayId: action.payload.currentDay,  \n                                     monthId: action.payload.currentMonth,\n                                     yearId: action.payload.currentYear }};\n      }\n\n      case ACTIONS.CHANGE_PAGE_TITLE: {\n        return {...state, pageTitle: action.payload};\n      }\n\n      case ACTIONS.BACKUP_OLD_SETTINGS: {\n        return {...state, oldSettingsData: state.settingsData};\n      }\n\n      case ACTIONS.RESTORE_OLD_SETTINGS: {\n        return {...state, settingsData: state.oldSettingsData};\n      }\n\n      case ACTIONS.CHANGE_SETTINGS_DATA: {\n        switch (action.payload.key) {\n\n          case 'editMealName': {\n            return {...state, \n              settingsData: { ...state.settingsData, \n              nutrition: {...state.settingsData.nutrition,\n              namesOfMeals: {...state.settingsData.nutrition.namesOfMeals, [action.payload.index]: action.payload.value }}}\n            };\n          };\n\n          case 'setMealsNumber': {\n            return {...state, \n              settingsData: { ...state.settingsData, \n              nutrition: {...state.settingsData.nutrition,\n              numberOfMeals: action.payload.value }}\n            };\n          };\n\n          default: return {...state, \n                           settingsData: { ...state.settingsData, \n                           nutrition: {...state.settingsData.nutrition, \n                           dailyDemand: {...state.settingsData.nutrition.dailyDemand, \n                           [action.payload.key]: action.payload.value }}}};\n        }\n      }\n\n      case ACTIONS.LOAD_SETTINGS: {\n        let newSettings = JSON.parse(localStorage.getItem(\"settings\"));\n        return {...state, settingsData: newSettings }\n      }\n\n      case ACTIONS.SET_CLEAR_ALL_PRODUCTS: {\n        return { ...state, clearAllProducts: action.payload };\n      }\n\n      default: return console.error(`Unknown action type: ${action.type}`);\n    }\n  }\n\n  const initialState = {\n    dateIds: { dayId: 0, monthId: 0, yearId: 0 },\n    pageTitle: 'Dashboard',\n    mealsIngredientsSummary: [],\n    dailyIngredientsSummary: { kcal: 0, proteins: 0, fats: 0, carbs: 0 },\n    gaugesData: {\n      kcal: { eaten: 0, left: 0, max: 0, percent: 0 },\n      proteins: { eaten: 0, left: 0, max: 0, percent: 0 },\n      fats: { eaten: 0, left: 0, max: 0, percent: 0 },\n      carbs: { eaten: 0, left: 0, max: 0, percent: 0 }\n    },\n    settingsData: {\n      main: {\n\n      },\n\n      nutrition: {\n        dailyDemand: { kcal: 2000, proteins: 120, fats: 55, carbs: 240 },\n        namesOfMeals: { 0: \"Breakfast\", 1: \"II Breakfast\", 2: \"Lunch\", 3: \"Snack\", 4: \"Dinner\", 5: \"\", 6: \"\", 7: \"\", 8: \"\", 9: \"\" },\n        numberOfMeals: 5\n      },\n\n      training: {\n        namesOfExercises: { 0: \"Bench Press\", 1: \"Deadlift\", 2: \"Squat\", 3: \"Biceps\", 4: \"Triceps\", 5: \"ABS\", 6: \"\", 7: \"\", 8: \"\", 9: \"\" },\n        numberOfExercises: 6\n      }\n    },\n    clearAllProducts: false,\n    oldSettingsData: {}\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => { updateGauges() }, [ state.dateIds ]);\n\n  const updateMealSummary = (object, mealId) => {\n    dispatch({ type: ACTIONS.UPDATE_MEALS_INGREDIENTS_SUMMARY, payload: {data: object, mealId: mealId} });\n    updateDailySummary();\n  } \n\n  const updateDailySummary = () => {\n    dispatch({ type: ACTIONS.UPDATE_DAILY_INGREDIENTS_SUMMARY });\n    updateGauges();\n  }\n\n  const updateGauges = () => {\n    Object.keys(state.settingsData.nutrition.dailyDemand).forEach(ingredient => {\n      dispatch({ type: ACTIONS.COUNT_GAUGES_DATA, payload: { typeOfIngredient: ingredient} });\n    });\n  }\n\n  const updateDateIds = (newDateIds) => {\n    dispatch({type: ACTIONS.CHANGE_DATE, payload: newDateIds })\n  }\n\n  const changePageTitle = (categoryTitle) => {\n    let newPageTitle = '';\n\n    if (categoryTitle === 'Nutrition')\n      newPageTitle = 'Dashboard';\n    else\n      newPageTitle = categoryTitle;\n\n    dispatch({type: ACTIONS.CHANGE_PAGE_TITLE, payload: newPageTitle });\n    dispatch({ type: ACTIONS.SET_CLEAR_ALL_PRODUCTS, payload: false });\n    restoreSettingsFromBackup();\n  }\n\n  const handleMenu = (categoryTitle) => {\n    changePageTitle(categoryTitle);\n  }\n\n  const resetCheckbox = (idOfCheckbox) => {\n    document.querySelector(\"#\" + idOfCheckbox).checked = false;\n  }\n\n  const saveSettingsToLocalStorage = () => {\n    localStorage.setItem(\"settings\", JSON.stringify(state.settingsData));\n  }\n\n  const restoreSettingsFromBackup = () => {\n    dispatch({ type: ACTIONS.RESTORE_OLD_SETTINGS });\n  }\n\n  const backupSettings = () => {\n    dispatch({ type: ACTIONS.BACKUP_OLD_SETTINGS });\n  }\n\n  const confirmClearAllProducts = () => {\n    dispatch({ type: ACTIONS.SET_CLEAR_ALL_PRODUCTS, payload: false });\n\n    Object.keys(localStorage).forEach(key => {\n      if (key === \"settings\" || key === \"predefined\")\n        console.log(key);\n      else\n        localStorage.removeItem(key);\n    });\n  }\n\n  const cancelClearAllProducts = () => {\n    dispatch({ type: ACTIONS.SET_CLEAR_ALL_PRODUCTS, payload: false });\n  }\n\n  const handleSettingsSaved = (e) => {\n    e.preventDefault();\n\n    if (e.target[4].checked === true)\n      dispatch({ type: ACTIONS.SET_CLEAR_ALL_PRODUCTS, payload: true });\n\n    backupSettings();\n    restoreSettingsFromBackup();\n    saveSettingsToLocalStorage();\n    resetCheckbox(\"clearAllProducts\");\n    updateGauges();\n  }\n\n  const handleSettingsCanceled = (e) => {\n    e.preventDefault();\n    restoreSettingsFromBackup();\n    saveSettingsToLocalStorage();\n    resetCheckbox(\"clearAllProducts\");\n    updateGauges();\n  }\n\n  const handleSettingOnChange = (e) => {\n    const isNumber = /[0-9]/;\n    const isZero = /^[0]{1}/;\n\n    e.preventDefault();\n  \n    if (e.target.id === 'editMealName') {\n      dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, index: Number(e.target.attributes[\"data-key\"].value), value: e.target.value }})\n    }\n    \n    if (isNumber.test(e.target.value[e.target.value.length - 1])) {\n\n      if (isZero.test(e.target.value))\n        dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, value: 1 }});\n      else\n        dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, value: e.target.value }});\n    }\n\n    else\n      dispatch({ type: ACTIONS.CHANGE_SETTINGS_DATA, payload: { key: e.target.id, value: \"\" }});\n\n    updateGauges();\n  }\n\n  return (\n    <div className=\"wrapper\">\n\n      <aside className=\"left-section\">\n\n        <header className=\"left-section__logo-container\">\n          <Logo />\n          <Title />\n        </header>\n\n        <ul className=\"left-section__menu-container\">\n\n          { MENU_CATEGORIES.map((category, index) => {\n              return <MenuItem key={ index } value={ category } href=\"\" isActive={ false } linkTo={ handleMenu } />\n            })\n          }\n\n        </ul>\n\n        <h2 className=\"left-section__quotation-container\">\n          <Quotation />\n        </h2>\n        \n      </aside>\n\n\n      <main className=\"center-section\">\n\n\n        <section className=\"center-section__top\">\n        \n          <h3 className=\"center-section__top__title\">{ state.pageTitle }</h3>\n\n          { ((state.pageTitle === 'Dashboard') || (state.pageTitle === 'Training')) && \n            <DateChanger changeDate={ updateDateIds } />\n          }\n\n        </section>\n\n      \n        <section className=\"center-section__main\">\n\n\n        { state.pageTitle === 'Log in' &&\n\n          <h2>Log in</h2>\n        \n        }\n\n        { state.pageTitle === 'Training' && \n\n          Object.values(state.settingsData.training.namesOfExercises).map((exercise, index) => {\n            if (state.settingsData.training.numberOfExercises > index)\n              return <Exercise key={ index } name={ exercise } difficulty={ 2 } exerciseId={ index } dateIds={ state.dateIds } />\n            })\n\n        }\n\n        { state.pageTitle === 'Dashboard' && \n\n          Object.values(state.settingsData.nutrition.namesOfMeals).map((meal, index) => {\n            if (state.settingsData.nutrition.numberOfMeals > index)\n              return <Meal key={ index } name={ meal } mealId={ index } dateIds={ state.dateIds } updateGauges={ updateMealSummary } />\n            })\n\n        }\n\n        { state.pageTitle === 'Settings' &&\n\n          <>\n\n          {state.clearAllProducts && \n            <>\n              <div>Remove ALL products?</div>\n              <button onClick={ confirmClearAllProducts }>Remove</button>\n              <button onClick={ cancelClearAllProducts }>Cancel</button>\n            </>\n          }\n          <section className=\"center-section__main__settings\">\n\n            <form className=\"center-section__main__settings__form\" onSubmit={ handleSettingsSaved }>\n\n              <section className=\"center-section__main__settings__form__section\">\n\n                <h2 className=\"center-section__main__settings__form__section__title\">Nutrition</h2>\n\n                <label htmlFor=\"setDailyDemand\">Set daily demand: </label>\n\n                <section id=\"setDailyDemand\" className=\"center-section__main__settings__form__section__daily-demand\">\n                  <span className=\"center-section__main__settings__form__section__input\">\n                    <label htmlFor=\"kcal\">Kcal: </label>\n                    <input \n                      type=\"text\" \n                      id=\"kcal\"\n                      value={ state.settingsData.nutrition.dailyDemand.kcal }\n                      maxLength={5}\n                      onChange={ handleSettingOnChange }\n                      required />\n                  </span>\n                  \n                  <span className=\"center-section__main__settings__form__section__input\">\n                    <label htmlFor=\"proteins\">Proteins: </label>\n                    <input \n                      type=\"text\" \n                      id=\"proteins\"\n                      value={ state.settingsData.nutrition.dailyDemand.proteins }\n                      maxLength={4}\n                      onChange={ handleSettingOnChange }\n                      required />\n                  </span>\n\n                  <span className=\"center-section__main__settings__form__section__input\">\n                    <label htmlFor=\"fats\">Fats: </label>\n                    <input \n                      type=\"text\" \n                      id=\"fats\"\n                      value={ state.settingsData.nutrition.dailyDemand.fats }\n                      maxLength={4}\n                      onChange={ handleSettingOnChange }\n                      required />\n                  </span>\n\n                  <span className=\"center-section__main__settings__form__section__input\">\n                    <label htmlFor=\"carbs\">Carbs: </label>\n                    <input \n                      type=\"text\" \n                      id=\"carbs\"\n                      value={ state.settingsData.nutrition.dailyDemand.carbs }\n                      maxLength={4}\n                      onChange={ handleSettingOnChange } \n                      required />\n                  </span>\n\n                </section>\n\n                <span className=\"center-section__main__settings__form__section__input\">\n                  <label htmlFor=\"clearAllProducts\">Clear all products: </label>\n                  <input \n                    type=\"checkbox\" \n                    id=\"clearAllProducts\" />\n                </span>\n\n                <span className=\"center-section__main__settings__form__section__input\">\n                  <label htmlFor=\"setMealsNumber\">Set number of meals: </label>\n                  <input \n                    type=\"text\" \n                    id=\"setMealsNumber\"\n                    maxLength=\"1\"\n                    value={ state.settingsData.nutrition.numberOfMeals }\n                    onChange={ handleSettingOnChange }\n                    required />\n                </span>\n\n                \n                { Object.values(state.settingsData.nutrition.namesOfMeals).map((meal, index) => {\n                  if (state.settingsData.nutrition.numberOfMeals > index) {\n                    return (\n                      <span key={ index } className=\"center-section__main__settings__form__section__input\">\n                        <label htmlFor=\"editMealName\">Set meal name: </label>\n                        <input\n                          data-key={ index }\n                          type=\"text\" \n                          id=\"editMealName\"\n                          value={ state.settingsData.nutrition.namesOfMeals[index] } \n                          onChange={ handleSettingOnChange }\n                          required />\n                      </span>\n                    ) \n                  }\n\n                  else {\n                    return (\n                      null\n                    )\n                  }\n                })}\n                \n              </section>\n\n              <input \n                className=\"center-section__main__settings__form__submit-button\"\n                type=\"submit\" \n                value=\"Save\" \n                id=\"saveSettings\"/>\n\n              <button \n                className=\"center-section__main__settings__form__cancel-button\"\n                onClick={ handleSettingsCanceled } \n                disabled={ state.oldSettingsData === state.settingsData ? true : false }>\n                Cancel\n              </button>\n\n            </form>\n\n          </section>\n\n          </>\n\n        }\n\n        { state.pageTitle === 'About' &&\n\n          <h2>About</h2>\n        \n        }\n\n        </section>\n\n\n      </main>\n\n\n      <aside className=\"right-section\">\n\n        <Gauge \n          amount={ state.gaugesData.kcal.eaten }\n          name=\"kcal\"\n          percent={ state.gaugesData.kcal.percent }\n          left={ state.gaugesData.kcal.left }\n          isKcal={true} />\n\n        <Gauge \n          amount={ state.gaugesData.proteins.eaten }\n          name=\"proteins\" \n          percent={ state.gaugesData.proteins.percent }\n          left={ state.gaugesData.proteins.left } />\n        \n        <Gauge \n          amount={ state.gaugesData.fats.eaten }\n          name=\"fats\" \n          percent={ state.gaugesData.fats.percent }\n          left={ state.gaugesData.fats.left } />\n        \n        <Gauge \n          amount={ state.gaugesData.carbs.eaten }   \n          name=\"carbohydrates\" \n          percent={ state.gaugesData.carbs.percent }\n          left={ state.gaugesData.carbs.left } />\n\n      </aside>\n\n\n    </div>\n  )\n}\n\n\n// RENDERING\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}